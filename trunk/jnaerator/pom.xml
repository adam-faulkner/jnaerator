<project xmlns="http://maven.apache.org/POM/4.0.0"
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
 <modelVersion>4.0.0</modelVersion>
  <groupId>com.jnaerator</groupId>
  <artifactId>jnaerator</artifactId>
  <name>JNAerator</name>
  <url>http://code.google.com/p/jnaerator/</url>
  <version>0.9-SNAPSHOT</version>
  <packaging>jar</packaging>
  
  <dependencies>
	<dependency>
	  <groupId>com.jnaerator</groupId>
	  <artifactId>jnaerator-runtime</artifactId>
	  <version>0.9-SNAPSHOT</version>
	  <scope>compile</scope>
	</dependency>
	
	<dependency>
		<groupId>org.antlr</groupId>
		<artifactId>antlr-runtime</artifactId>
		<version>3.1.3</version>
		<scope>compile</scope>
	</dependency>
	
	
	<dependency>
		<groupId>org.eclipse.jdt</groupId>
		<artifactId>core</artifactId>
		<version>3.5</version>
		<scope>compile</scope>
	</dependency>
	
	<dependency>
		<groupId>org.anarres.cpp</groupId>
		<artifactId>anarres-cpp-jnaerator</artifactId>
		<version>1.0</version>
		<scope>compile</scope>
	</dependency>
	
	<dependency>
      <groupId>junit</groupId>
	  <artifactId>junit</artifactId>
      <version>4.7</version>
      <scope>test</scope>
    </dependency>
	
	
  </dependencies>
  <parent>
	  <groupId>com.jnaerator</groupId>
	  <artifactId>jnaerator-parent</artifactId>
	  <version>1.0-SNAPSHOT</version>
	  <relativePath>..</relativePath>
  </parent>
  
  <build>
		<plugins>
		
		   <plugin>
			  <groupId>org.apache.maven.plugins</groupId>
			  <artifactId>maven-jar-plugin</artifactId>
			  <configuration>
				<archive>
				  <manifest>
					<mainClass>com.ochafik.lang.jnaerator.JNAerator</mainClass>
					<packageName>com.ochafik.lang.jnaerator</packageName>
				  </manifest>
				</archive>
			  </configuration>
		  </plugin>
		  
		  <plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-compiler-plugin</artifactId>
			<version>2.0.2</version>
			<configuration>
			  <source>1.6</source>
			  <target>1.6</target>
			</configuration>
		  </plugin>
		  
		  <plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-shade-plugin</artifactId>
			<version>1.2.1</version>
			<executions>
			  <execution>
				<phase>package</phase>
				<goals>
				  <goal>shade</goal>
				</goals>
			  </execution>
			</executions>
		  </plugin>
		  
		  	<plugin>
				<groupId>org.codehaus.mojo.webstart</groupId>
				<artifactId>webstart-maven-plugin</artifactId>
				<executions>
				   <execution>
					  <goals>
						 <goal>jnlp</goal> <!-- use jnlp, jnlp-inline or jnlp-single as appropriate -->
					  </goals>
				   </execution>
				</executions>
				<configuration>
				   <!--
				   Set to true to exclude all transitive dependencies. Default is false.
				   -->
				   <excludeTransitive>false</excludeTransitive>
		
				   <!-- JNLP generation -->
				   <jnlp>
					 <!-- default values -->
					 <!--inputTemplateResourcePath>${project.basedir}</inputTemplateResourcePath-->
					 <!--inputTemplate>src/main/jnlp/template.vm</inputTemplate--> <!-- relative to inputTemplateResourcePath -->
					 <outputFile>JNAeratorStudio.jnlp</outputFile> <!-- defaults to launch.jnlp -->
		
					 <!-- used to automatically identify the jar containing the main class. -->
					 <!-- this is perhaps going to change -->
					 <mainClass>com.ochafik.lang.jnaerator.studio.JNAeratorStudio</mainClass>
				   </jnlp>
		
		
				   <!-- SIGNING -->
				   <!-- defining this will automatically sign the jar and its dependencies, if necessary -->
				   <sign>
					 <keystore>/Users/ochafik/Prog/Java/security/ochafik.keystore</keystore>
					 <alias>ochafik2009</alias>
			   
					 <!--keypass>fillme</keypass-->  <!-- we need to override passwords easily from the command line. ${keypass} -->
					 <!--storepass>fillme</storepass--> <!-- ${storepass} -->
					 <!--storetype>fillme</storetype-->
		
					 <!--validity>fillme</validity-->
		
					 <!-- only required for generating the keystore -->
					 <!--dnameCn>fillme</dnameCn>
					 <dnameOu>fillme</dnameOu>
					 <dnameO>fillme</dnameO>
					 <dnameL>fillme</dnameL>
					 <dnameSt>fillme</dnameSt>
					 <dnameC>fillme</dnameC-->
		
					 <verify>true</verify> <!-- verify that the signing operation succeeded -->
		
				   </sign>
		
				   <!-- BUILDING PROCESS -->
		
				   <pack200>true</pack200>
				   <gzip>true</gzip> <!-- default force when pack200 false, true when pack200 selected ?? -->
		
				   <!-- causes a version attribute to be output in each jar resource element, optional, default is false -->
				   <outputJarVersions>true</outputJarVersions>
		
				   <!--install>false</install--> <!-- not yet supported -->
				   <verbose>true</verbose>
		
				</configuration>
			  </plugin>
		  <plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-jar-plugin</artifactId>
			<executions>
			  <execution>
				<goals>
				  <goal>sign</goal>
				</goals>
			  </execution>
			</executions>
			<configuration>
			  <keystore>/Users/ochafik/Prog/Java/security/ochafik.keystore</keystore>
			  <alias>ochafik2009</alias>
			  <!--   
				  mvn "-Dstorepass=$KEYSTORE_PASS" -Dmaven.test.skip=true package  
				  <storepass>yourstorepassword</storepass>
			  -->
			  <verify>true</verify>
			</configuration>
		  </plugin>
		  
		</plugins>
	</build>
</project>


