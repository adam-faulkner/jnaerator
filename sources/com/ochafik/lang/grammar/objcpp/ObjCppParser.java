// $ANTLR 3.1.1 /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g 2009-02-15 18:20:47
 
/*
	Copyright (c) 2009 Olivier Chafik, All Rights Reserved
	
	This file is part of JNAerator (http://jnaerator.googlecode.com/).
	
	JNAerator is free software: you can redistribute it and/or modify
	it under the terms of the GNU General Public License as published by
	the Free Software Foundation, either version 3 of the License, or
	(at your option) any later version.
	
	JNAerator is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU General Public License for more details.
	
	You should have received a copy of the GNU General Public License
	along with JNAerator.  If not, see <http://www.gnu.org/licenses/>.
*/

	package com.ochafik.lang.grammar.objcpp;
import java.util.Arrays;
import static com.ochafik.lang.grammar.objcpp.TypeRef.*;
import static com.ochafik.lang.grammar.objcpp.Expression.*;
import static com.ochafik.lang.grammar.objcpp.Declaration.*;
import static com.ochafik.lang.grammar.objcpp.VariableStorage.*;
import static com.ochafik.lang.grammar.objcpp.StoredDeclarations.*;


import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.tree.*;

public class ObjCppParser extends Parser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "DECIMAL_NUMBER", "STRING", "IDENTIFIER", "LONG", "HEXADECIMAL_NUMBER", "OCTAL_NUMBER", "CHARACTER", "FLOAT_NUMBER", "Letter", "FloatingPointExponentSuffix", "FloatingPointConstantSuffix", "OctalEscape", "CharEscape", "HexDigit", "UnicodeEscape", "IntegerConstantSuffix", "WS", "COMMENT", "LINE_COMMENT", "'#line'", "'{'", "'}'", "'namespace'", "'@class'", "','", "';'", "'='", "'enum'", "'@protocol'", "'@interface'", "':'", "'('", "')'", "'<'", "'>'", "'@public'", "'@private'", "'@protected'", "'@end'", "'+'", "'-'", "'...'", "'struct'", "'class'", "'union'", "'public'", "'private'", "'protected'", "'const'", "'__const'", "'*'", "'&'", "'^'", "'['", "']'", "'typedef'", "'typename'", "'template'", "'signed'", "'unsigned'", "'__signed'", "'__unsigned'", "'short'", "'int'", "'double'", "'float'", "'char'", "'void'", "'__int8'", "'__int16'", "'__int32'", "'__int64'", "'sizeof'", "'!'", "'~'", "'/'", "'%'", "'<<'", "'>>>'", "'>>'", "'||'", "'|'", "'&&'", "'<='", "'>='", "'=='", "'!='", "'.'", "'?'", "'return'", "'if'", "'else'", "'while'", "'do'", "'for'", "'switch'", "'case'"
    };
    public static final int T__29=29;
    public static final int T__28=28;
    public static final int T__27=27;
    public static final int T__26=26;
    public static final int T__25=25;
    public static final int T__24=24;
    public static final int T__23=23;
    public static final int EOF=-1;
    public static final int CHARACTER=10;
    public static final int T__93=93;
    public static final int T__94=94;
    public static final int T__91=91;
    public static final int T__92=92;
    public static final int T__90=90;
    public static final int COMMENT=21;
    public static final int T__99=99;
    public static final int T__98=98;
    public static final int OCTAL_NUMBER=9;
    public static final int T__97=97;
    public static final int T__96=96;
    public static final int T__95=95;
    public static final int DECIMAL_NUMBER=4;
    public static final int T__80=80;
    public static final int T__81=81;
    public static final int T__82=82;
    public static final int T__83=83;
    public static final int LINE_COMMENT=22;
    public static final int T__85=85;
    public static final int T__84=84;
    public static final int T__87=87;
    public static final int T__86=86;
    public static final int T__89=89;
    public static final int T__88=88;
    public static final int WS=20;
    public static final int T__71=71;
    public static final int T__72=72;
    public static final int FloatingPointConstantSuffix=14;
    public static final int T__70=70;
    public static final int IntegerConstantSuffix=19;
    public static final int T__76=76;
    public static final int T__75=75;
    public static final int T__74=74;
    public static final int T__73=73;
    public static final int Letter=12;
    public static final int T__79=79;
    public static final int T__78=78;
    public static final int T__77=77;
    public static final int T__68=68;
    public static final int T__69=69;
    public static final int T__66=66;
    public static final int T__67=67;
    public static final int T__64=64;
    public static final int T__65=65;
    public static final int T__62=62;
    public static final int T__63=63;
    public static final int HEXADECIMAL_NUMBER=8;
    public static final int T__61=61;
    public static final int T__60=60;
    public static final int HexDigit=17;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__57=57;
    public static final int T__58=58;
    public static final int T__51=51;
    public static final int T__52=52;
    public static final int T__53=53;
    public static final int T__54=54;
    public static final int IDENTIFIER=6;
    public static final int CharEscape=16;
    public static final int T__59=59;
    public static final int T__50=50;
    public static final int T__42=42;
    public static final int T__43=43;
    public static final int T__40=40;
    public static final int T__41=41;
    public static final int T__46=46;
    public static final int FLOAT_NUMBER=11;
    public static final int FloatingPointExponentSuffix=13;
    public static final int T__47=47;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int T__100=100;
    public static final int T__30=30;
    public static final int T__31=31;
    public static final int T__32=32;
    public static final int T__33=33;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__36=36;
    public static final int T__37=37;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int UnicodeEscape=18;
    public static final int LONG=7;
    public static final int OctalEscape=15;
    public static final int STRING=5;

    // delegates
    // delegators


        public ObjCppParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public ObjCppParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        
    protected TreeAdaptor adaptor = new CommonTreeAdaptor();

    public void setTreeAdaptor(TreeAdaptor adaptor) {
        this.adaptor = adaptor;
    }
    public TreeAdaptor getTreeAdaptor() {
        return adaptor;
    }

    public String[] getTokenNames() { return ObjCppParser.tokenNames; }
    public String getGrammarFileName() { return "/Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g"; }


    	String lastComment;
    	String file;
    	int sourceLineDelta = 0; // line(token) = token.line - lastLineToken.line + lastLine; sourceLineDelta = lastLine - lastLineToken.line
    	//String pack;
    	public void setFile(String file) { 
    		this.file = file; 
    	}
    	public String getFile() { 
    		return file; 
    	}
    	
    	public int getLine() {
    		return getLine(getTokenStream().get(getTokenStream().index()));
    	}
    	
    	public int getLine(Token token) {
    		return token.getLine();// + sourceLineDelta;
    	}
    	
    	protected <T extends Element> T mark(T element, int tokenLine) {
    		element.setElementFile(getFile());
    		element.setElementLine(tokenLine + sourceLineDelta);
    		return element;
    	}
    	protected String getCommentBefore() {
    		return getCommentBefore(getTokenStream().index());
    	}
    	protected String getCommentBefore(int index) {
    		String comment = null;
    		boolean toleratedNewLine = false;
    		while (index > 0) {
    			Token token = getTokenStream().get(--index);
    			if (token.getType() == COMMENT || token.getType() == LINE_COMMENT) {
    				//if (comment != null)
    				//return comment;
    				if (comment != null)
    					return comment;
    				comment = token.getText();
    			} else if (token.getType() == WS) {
    				if (token.getText().indexOf("\n") >= 0) {
    					if (comment != null)
    						return comment;
    					else if (toleratedNewLine)
    						return null;
    					else
    						toleratedNewLine = true;
    				}
    			} else
    				return null;
    		}
    		return comment;
    	}
    	protected String getCommentAfterOnSameLine() {
    		return getCommentAfterOnSameLine(getTokenStream().index() - 1);
    	}	
    	protected String getCommentAfterOnSameLine(int index) {
    		int size = getTokenStream().size();
    		while (index < size) {
    			Token token = getTokenStream().get(index++);
    			if (token.getType() == COMMENT || token.getType() == LINE_COMMENT)
    				return token.getText();
    			else if (token.getText().indexOf("\n") >= 0)
    				break;
    		}
    		return null;
    	}


    public static class lineDirective_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "lineDirective"
    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:149:1: lineDirective : ln= '#line' line= DECIMAL_NUMBER (unescapedString= STRING )? (depth= DECIMAL_NUMBER )? ;
    public final ObjCppParser.lineDirective_return lineDirective() throws RecognitionException {
        ObjCppParser.lineDirective_return retval = new ObjCppParser.lineDirective_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        Token ln=null;
        Token line=null;
        Token unescapedString=null;
        Token depth=null;

        Object ln_tree=null;
        Object line_tree=null;
        Object unescapedString_tree=null;
        Object depth_tree=null;

        try {
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:150:2: (ln= '#line' line= DECIMAL_NUMBER (unescapedString= STRING )? (depth= DECIMAL_NUMBER )? )
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:150:4: ln= '#line' line= DECIMAL_NUMBER (unescapedString= STRING )? (depth= DECIMAL_NUMBER )?
            {
            root_0 = (Object)adaptor.nil();

            ln=(Token)match(input,23,FOLLOW_23_in_lineDirective62); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            ln_tree = (Object)adaptor.create(ln);
            adaptor.addChild(root_0, ln_tree);
            }
            line=(Token)match(input,DECIMAL_NUMBER,FOLLOW_DECIMAL_NUMBER_in_lineDirective66); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            line_tree = (Object)adaptor.create(line);
            adaptor.addChild(root_0, line_tree);
            }
            if ( state.backtracking==0 ) {

              			try {
              				sourceLineDelta = Integer.parseInt((line!=null?line.getText():null)) - ln.getLine() - 1;
              			} catch (Exception ex) {
              				System.err.println("ERROR: unparsable line in #line directive : " + (line!=null?line.getText():null));
              				sourceLineDelta = 0;
              			}
              		
            }
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:158:3: (unescapedString= STRING )?
            int alt1=2;
            alt1 = dfa1.predict(input);
            switch (alt1) {
                case 1 :
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:159:4: unescapedString= STRING
                    {
                    unescapedString=(Token)match(input,STRING,FOLLOW_STRING_in_lineDirective79); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    unescapedString_tree = (Object)adaptor.create(unescapedString);
                    adaptor.addChild(root_0, unescapedString_tree);
                    }
                    if ( state.backtracking==0 ) {

                      				String fileStr = (unescapedString!=null?unescapedString.getText():null).trim();
                      				if (fileStr.startsWith("\"")) {
                      					fileStr = fileStr.substring(1);
                      					if (fileStr.endsWith("\""))
                      						fileStr = fileStr.substring(0, fileStr.length() - 1);
                      				}				
                      				setFile(fileStr);
                      			
                    }

                    }
                    break;

            }

            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:169:8: (depth= DECIMAL_NUMBER )?
            int alt2=2;
            alt2 = dfa2.predict(input);
            switch (alt2) {
                case 1 :
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:0:0: depth= DECIMAL_NUMBER
                    {
                    depth=(Token)match(input,DECIMAL_NUMBER,FOLLOW_DECIMAL_NUMBER_in_lineDirective94); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    depth_tree = (Object)adaptor.create(depth);
                    adaptor.addChild(root_0, depth_tree);
                    }

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "lineDirective"

    public static class sourceFile_return extends ParserRuleReturnScope {
        public SourceFile sourceFile;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "sourceFile"
    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:172:1: sourceFile returns [SourceFile sourceFile] : ( declaration | lineDirective )* EOF ;
    public final ObjCppParser.sourceFile_return sourceFile() throws RecognitionException {
        ObjCppParser.sourceFile_return retval = new ObjCppParser.sourceFile_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        Token EOF3=null;
        ObjCppParser.declaration_return declaration1 = null;

        ObjCppParser.lineDirective_return lineDirective2 = null;


        Object EOF3_tree=null;

        try {
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:173:2: ( ( declaration | lineDirective )* EOF )
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:174:3: ( declaration | lineDirective )* EOF
            {
            root_0 = (Object)adaptor.nil();

            if ( state.backtracking==0 ) {
               retval.sourceFile = mark(new SourceFile(), getLine()); 
            }
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:175:3: ( declaration | lineDirective )*
            loop3:
            do {
                int alt3=3;
                alt3 = dfa3.predict(input);
                switch (alt3) {
            	case 1 :
            	    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:176:4: declaration
            	    {
            	    pushFollow(FOLLOW_declaration_in_sourceFile123);
            	    declaration1=declaration();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, declaration1.getTree());
            	    if ( state.backtracking==0 ) {
            	       
            	      				for (Declaration d : (declaration1!=null?declaration1.declarations:null))
            	      					retval.sourceFile.addDeclaration(d); 
            	      			
            	    }

            	    }
            	    break;
            	case 2 :
            	    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:180:4: lineDirective
            	    {
            	    pushFollow(FOLLOW_lineDirective_in_sourceFile132);
            	    lineDirective2=lineDirective();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, lineDirective2.getTree());

            	    }
            	    break;

            	default :
            	    break loop3;
                }
            } while (true);

            EOF3=(Token)match(input,EOF,FOLLOW_EOF_in_sourceFile142); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            EOF3_tree = (Object)adaptor.create(EOF3);
            adaptor.addChild(root_0, EOF3_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "sourceFile"

    public static class externDeclarations_return extends ParserRuleReturnScope {
        public List<Declaration> declarations;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "externDeclarations"
    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:185:1: externDeclarations returns [List<Declaration> declarations] : IDENTIFIER {...}? STRING '{' (ed= declaration )* '}' ;
    public final ObjCppParser.externDeclarations_return externDeclarations() throws RecognitionException {
        ObjCppParser.externDeclarations_return retval = new ObjCppParser.externDeclarations_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        Token IDENTIFIER4=null;
        Token STRING5=null;
        Token char_literal6=null;
        Token char_literal7=null;
        ObjCppParser.declaration_return ed = null;


        Object IDENTIFIER4_tree=null;
        Object STRING5_tree=null;
        Object char_literal6_tree=null;
        Object char_literal7_tree=null;

        try {
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:186:2: ( IDENTIFIER {...}? STRING '{' (ed= declaration )* '}' )
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:186:4: IDENTIFIER {...}? STRING '{' (ed= declaration )* '}'
            {
            root_0 = (Object)adaptor.nil();

            if ( state.backtracking==0 ) {
               retval.declarations = new ArrayList<Declaration>(); 
            }
            IDENTIFIER4=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_externDeclarations161); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IDENTIFIER4_tree = (Object)adaptor.create(IDENTIFIER4);
            adaptor.addChild(root_0, IDENTIFIER4_tree);
            }
            if ( !(( (IDENTIFIER4!=null?IDENTIFIER4.getText():null).equals("extern") )) ) {
                if (state.backtracking>0) {state.failed=true; return retval;}
                throw new FailedPredicateException(input, "externDeclarations", " $IDENTIFIER.text.equals(\"extern\") ");
            }
            STRING5=(Token)match(input,STRING,FOLLOW_STRING_in_externDeclarations168); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            STRING5_tree = (Object)adaptor.create(STRING5);
            adaptor.addChild(root_0, STRING5_tree);
            }
            char_literal6=(Token)match(input,24,FOLLOW_24_in_externDeclarations173); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal6_tree = (Object)adaptor.create(char_literal6);
            adaptor.addChild(root_0, char_literal6_tree);
            }
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:190:4: (ed= declaration )*
            loop4:
            do {
                int alt4=2;
                alt4 = dfa4.predict(input);
                switch (alt4) {
            	case 1 :
            	    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:191:5: ed= declaration
            	    {
            	    pushFollow(FOLLOW_declaration_in_externDeclarations187);
            	    ed=declaration();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, ed.getTree());
            	    if ( state.backtracking==0 ) {
            	       
            	      					retval.declarations.addAll((ed!=null?ed.declarations:null)); 
            	      				
            	    }

            	    }
            	    break;

            	default :
            	    break loop4;
                }
            } while (true);

            char_literal7=(Token)match(input,25,FOLLOW_25_in_externDeclarations200); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal7_tree = (Object)adaptor.create(char_literal7);
            adaptor.addChild(root_0, char_literal7_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "externDeclarations"

    public static class declaration_return extends ParserRuleReturnScope {
        public List<Declaration> declarations;
        public List<Declaration.Modifier> modifiers;
        public String preComment;
        public int startTokenIndex;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "declaration"
    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:198:1: declaration returns [List<Declaration> declarations, List<Declaration.Modifier> modifiers, String preComment, int startTokenIndex] : ( externDeclarations | exportationModifiers ( functionDeclaration | varDecl | objCClassDef | typeDef | forwardClassDecl | enumDecl | structDef | 'namespace' ns= IDENTIFIER '{' (subD= declaration )* '}' ) ) ;
    public final ObjCppParser.declaration_return declaration() throws RecognitionException {
        ObjCppParser.declaration_return retval = new ObjCppParser.declaration_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        Token ns=null;
        Token string_literal17=null;
        Token char_literal18=null;
        Token char_literal19=null;
        ObjCppParser.declaration_return subD = null;

        ObjCppParser.externDeclarations_return externDeclarations8 = null;

        ObjCppParser.exportationModifiers_return exportationModifiers9 = null;

        ObjCppParser.functionDeclaration_return functionDeclaration10 = null;

        ObjCppParser.varDecl_return varDecl11 = null;

        ObjCppParser.objCClassDef_return objCClassDef12 = null;

        ObjCppParser.typeDef_return typeDef13 = null;

        ObjCppParser.forwardClassDecl_return forwardClassDecl14 = null;

        ObjCppParser.enumDecl_return enumDecl15 = null;

        ObjCppParser.structDef_return structDef16 = null;


        Object ns_tree=null;
        Object string_literal17_tree=null;
        Object char_literal18_tree=null;
        Object char_literal19_tree=null;

        try {
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:199:2: ( ( externDeclarations | exportationModifiers ( functionDeclaration | varDecl | objCClassDef | typeDef | forwardClassDecl | enumDecl | structDef | 'namespace' ns= IDENTIFIER '{' (subD= declaration )* '}' ) ) )
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:200:3: ( externDeclarations | exportationModifiers ( functionDeclaration | varDecl | objCClassDef | typeDef | forwardClassDecl | enumDecl | structDef | 'namespace' ns= IDENTIFIER '{' (subD= declaration )* '}' ) )
            {
            root_0 = (Object)adaptor.nil();

            if ( state.backtracking==0 ) {
               retval.declarations = new ArrayList<Declaration>(); 
              		  retval.modifiers = new ArrayList<Declaration.Modifier>();
              		  retval.startTokenIndex = getTokenStream().index();
              		  retval.preComment = getCommentBefore(retval.startTokenIndex);
              		
            }
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:205:3: ( externDeclarations | exportationModifiers ( functionDeclaration | varDecl | objCClassDef | typeDef | forwardClassDecl | enumDecl | structDef | 'namespace' ns= IDENTIFIER '{' (subD= declaration )* '}' ) )
            int alt7=2;
            alt7 = dfa7.predict(input);
            switch (alt7) {
                case 1 :
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:206:4: externDeclarations
                    {
                    pushFollow(FOLLOW_externDeclarations_in_declaration228);
                    externDeclarations8=externDeclarations();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, externDeclarations8.getTree());
                    if ( state.backtracking==0 ) {

                      				retval.declarations.addAll((externDeclarations8!=null?externDeclarations8.declarations:null)); 
                      			
                    }

                    }
                    break;
                case 2 :
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:209:4: exportationModifiers ( functionDeclaration | varDecl | objCClassDef | typeDef | forwardClassDecl | enumDecl | structDef | 'namespace' ns= IDENTIFIER '{' (subD= declaration )* '}' )
                    {
                    pushFollow(FOLLOW_exportationModifiers_in_declaration237);
                    exportationModifiers9=exportationModifiers();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, exportationModifiers9.getTree());
                    if ( state.backtracking==0 ) {

                      				retval.modifiers.addAll((exportationModifiers9!=null?exportationModifiers9.modifiers:null)); 
                      			
                    }
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:212:4: ( functionDeclaration | varDecl | objCClassDef | typeDef | forwardClassDecl | enumDecl | structDef | 'namespace' ns= IDENTIFIER '{' (subD= declaration )* '}' )
                    int alt6=8;
                    alt6 = dfa6.predict(input);
                    switch (alt6) {
                        case 1 :
                            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:214:5: functionDeclaration
                            {
                            pushFollow(FOLLOW_functionDeclaration_in_declaration255);
                            functionDeclaration10=functionDeclaration();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, functionDeclaration10.getTree());
                            if ( state.backtracking==0 ) {

                              					retval.declarations.add((functionDeclaration10!=null?functionDeclaration10.function:null));
                              				
                            }

                            }
                            break;
                        case 2 :
                            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:217:5: varDecl
                            {
                            pushFollow(FOLLOW_varDecl_in_declaration265);
                            varDecl11=varDecl();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, varDecl11.getTree());
                            if ( state.backtracking==0 ) {
                               
                              					retval.declarations.add((varDecl11!=null?varDecl11.decl:null)); 
                              				
                            }

                            }
                            break;
                        case 3 :
                            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:220:5: objCClassDef
                            {
                            pushFollow(FOLLOW_objCClassDef_in_declaration275);
                            objCClassDef12=objCClassDef();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, objCClassDef12.getTree());
                            if ( state.backtracking==0 ) {
                               
                              					retval.declarations.add((objCClassDef12!=null?objCClassDef12.struct:null)); 
                              				
                            }

                            }
                            break;
                        case 4 :
                            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:223:5: typeDef
                            {
                            pushFollow(FOLLOW_typeDef_in_declaration285);
                            typeDef13=typeDef();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, typeDef13.getTree());
                            if ( state.backtracking==0 ) {

                              					retval.declarations.add((typeDef13!=null?typeDef13.declarations:null)); 
                              				
                            }

                            }
                            break;
                        case 5 :
                            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:226:5: forwardClassDecl
                            {
                            pushFollow(FOLLOW_forwardClassDecl_in_declaration295);
                            forwardClassDecl14=forwardClassDecl();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, forwardClassDecl14.getTree());
                            if ( state.backtracking==0 ) {

                              					retval.declarations.addAll((forwardClassDecl14!=null?forwardClassDecl14.declarations:null)); 
                              				
                            }

                            }
                            break;
                        case 6 :
                            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:229:5: enumDecl
                            {
                            pushFollow(FOLLOW_enumDecl_in_declaration305);
                            enumDecl15=enumDecl();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, enumDecl15.getTree());
                            if ( state.backtracking==0 ) {

                              					retval.declarations.add((enumDecl15!=null?enumDecl15.e:null)); 
                              				
                            }

                            }
                            break;
                        case 7 :
                            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:232:5: structDef
                            {
                            pushFollow(FOLLOW_structDef_in_declaration315);
                            structDef16=structDef();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, structDef16.getTree());
                            if ( state.backtracking==0 ) {
                               
                              					retval.declarations.add((structDef16!=null?structDef16.struct:null)); 
                              				
                            }

                            }
                            break;
                        case 8 :
                            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:235:5: 'namespace' ns= IDENTIFIER '{' (subD= declaration )* '}'
                            {
                            string_literal17=(Token)match(input,26,FOLLOW_26_in_declaration325); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            string_literal17_tree = (Object)adaptor.create(string_literal17);
                            adaptor.addChild(root_0, string_literal17_tree);
                            }
                            ns=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_declaration329); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            ns_tree = (Object)adaptor.create(ns);
                            adaptor.addChild(root_0, ns_tree);
                            }
                            char_literal18=(Token)match(input,24,FOLLOW_24_in_declaration331); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            char_literal18_tree = (Object)adaptor.create(char_literal18);
                            adaptor.addChild(root_0, char_literal18_tree);
                            }
                            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:236:6: (subD= declaration )*
                            loop5:
                            do {
                                int alt5=2;
                                alt5 = dfa5.predict(input);
                                switch (alt5) {
                            	case 1 :
                            	    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:237:7: subD= declaration
                            	    {
                            	    pushFollow(FOLLOW_declaration_in_declaration349);
                            	    subD=declaration();

                            	    state._fsp--;
                            	    if (state.failed) return retval;
                            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, subD.getTree());
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      							for (Declaration d : (subD!=null?subD.declarations:null)) {
                            	      								d.addNameSpace((ns!=null?ns.getText():null));
                            	      								retval.declarations.add(d);
                            	      							}
                            	      						
                            	    }

                            	    }
                            	    break;

                            	default :
                            	    break loop5;
                                }
                            } while (true);

                            char_literal19=(Token)match(input,25,FOLLOW_25_in_declaration365); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            char_literal19_tree = (Object)adaptor.create(char_literal19);
                            adaptor.addChild(root_0, char_literal19_tree);
                            }

                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      				String commentAfter = getCommentAfterOnSameLine(retval.startTokenIndex);
                      				for (Declaration d  : retval.declarations) {
                      					d.setCommentBefore(retval.preComment);
                      					d.setCommentAfter(commentAfter);
                      					for (Declaration.Modifier modifier : retval.modifiers)
                      						d.addModifier(modifier);
                      				}
                      				
                      			
                    }

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "declaration"

    public static class forwardClassDecl_return extends ParserRuleReturnScope {
        public List<Declaration> declarations;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "forwardClassDecl"
    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:260:1: forwardClassDecl returns [List<Declaration> declarations] : '@class' n1= IDENTIFIER ( ',' nx= IDENTIFIER )* ';' ;
    public final ObjCppParser.forwardClassDecl_return forwardClassDecl() throws RecognitionException {
        ObjCppParser.forwardClassDecl_return retval = new ObjCppParser.forwardClassDecl_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        Token n1=null;
        Token nx=null;
        Token string_literal20=null;
        Token char_literal21=null;
        Token char_literal22=null;

        Object n1_tree=null;
        Object nx_tree=null;
        Object string_literal20_tree=null;
        Object char_literal21_tree=null;
        Object char_literal22_tree=null;

        try {
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:261:2: ( '@class' n1= IDENTIFIER ( ',' nx= IDENTIFIER )* ';' )
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:261:5: '@class' n1= IDENTIFIER ( ',' nx= IDENTIFIER )* ';'
            {
            root_0 = (Object)adaptor.nil();

            if ( state.backtracking==0 ) {
               retval.declarations = new ArrayList<Declaration>(); 
            }
            string_literal20=(Token)match(input,27,FOLLOW_27_in_forwardClassDecl405); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal20_tree = (Object)adaptor.create(string_literal20);
            adaptor.addChild(root_0, string_literal20_tree);
            }
            n1=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_forwardClassDecl412); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            n1_tree = (Object)adaptor.create(n1);
            adaptor.addChild(root_0, n1_tree);
            }
            if ( state.backtracking==0 ) {
               retval.declarations.add(Struct.forwardDecl((n1!=null?n1.getText():null), Struct.Type.ObjCClass)); 
            }
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:264:3: ( ',' nx= IDENTIFIER )*
            loop8:
            do {
                int alt8=2;
                int LA8_0 = input.LA(1);

                if ( (LA8_0==28) ) {
                    alt8=1;
                }


                switch (alt8) {
            	case 1 :
            	    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:264:4: ',' nx= IDENTIFIER
            	    {
            	    char_literal21=(Token)match(input,28,FOLLOW_28_in_forwardClassDecl419); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal21_tree = (Object)adaptor.create(char_literal21);
            	    adaptor.addChild(root_0, char_literal21_tree);
            	    }
            	    nx=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_forwardClassDecl426); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    nx_tree = (Object)adaptor.create(nx);
            	    adaptor.addChild(root_0, nx_tree);
            	    }
            	    if ( state.backtracking==0 ) {
            	       retval.declarations.add(Struct.forwardDecl((nx!=null?nx.getText():null), Struct.Type.ObjCClass)); 
            	    }

            	    }
            	    break;

            	default :
            	    break loop8;
                }
            } while (true);

            char_literal22=(Token)match(input,29,FOLLOW_29_in_forwardClassDecl437); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal22_tree = (Object)adaptor.create(char_literal22);
            adaptor.addChild(root_0, char_literal22_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "forwardClassDecl"

    public static class functionPointerVarDecl_return extends ParserRuleReturnScope {
        public List<? extends Declaration> declarations;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "functionPointerVarDecl"
    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:270:1: functionPointerVarDecl returns [List<? extends Declaration> declarations] : typeRef {...}? ';' ;
    public final ObjCppParser.functionPointerVarDecl_return functionPointerVarDecl() throws RecognitionException {
        ObjCppParser.functionPointerVarDecl_return retval = new ObjCppParser.functionPointerVarDecl_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        Token char_literal24=null;
        ObjCppParser.typeRef_return typeRef23 = null;


        Object char_literal24_tree=null;

        try {
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:271:2: ( typeRef {...}? ';' )
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:271:4: typeRef {...}? ';'
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_typeRef_in_functionPointerVarDecl455);
            typeRef23=typeRef();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, typeRef23.getTree());
            if ( !((
            			((typeRef23!=null?typeRef23.type:null) instanceof FunctionSignature) && 
            			((FunctionSignature)(typeRef23!=null?typeRef23.type:null)).getFunction().getName() != null
            		)) ) {
                if (state.backtracking>0) {state.failed=true; return retval;}
                throw new FailedPredicateException(input, "functionPointerVarDecl", "\n\t\t\t($typeRef.type instanceof FunctionSignature) && \n\t\t\t((FunctionSignature)$typeRef.type).getFunction().getName() != null\n\t\t");
            }
            if ( state.backtracking==0 ) {

              			retval.declarations = Arrays.asList(new FunctionPointerDeclaration(((FunctionSignature)(typeRef23!=null?typeRef23.type:null))));
              		
            }
            char_literal24=(Token)match(input,29,FOLLOW_29_in_functionPointerVarDecl463); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal24_tree = (Object)adaptor.create(char_literal24);
            adaptor.addChild(root_0, char_literal24_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "functionPointerVarDecl"

    public static class enumItem_return extends ParserRuleReturnScope {
        public Enum.EnumItem item;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "enumItem"
    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:280:1: enumItem returns [Enum.EnumItem item] : n= IDENTIFIER ( '=' v= expression )? ;
    public final ObjCppParser.enumItem_return enumItem() throws RecognitionException {
        ObjCppParser.enumItem_return retval = new ObjCppParser.enumItem_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        Token n=null;
        Token char_literal25=null;
        ObjCppParser.expression_return v = null;


        Object n_tree=null;
        Object char_literal25_tree=null;

        try {
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:281:2: (n= IDENTIFIER ( '=' v= expression )? )
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:281:4: n= IDENTIFIER ( '=' v= expression )?
            {
            root_0 = (Object)adaptor.nil();

            n=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_enumItem481); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            n_tree = (Object)adaptor.create(n);
            adaptor.addChild(root_0, n_tree);
            }
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:281:17: ( '=' v= expression )?
            int alt9=2;
            int LA9_0 = input.LA(1);

            if ( (LA9_0==30) ) {
                alt9=1;
            }
            switch (alt9) {
                case 1 :
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:281:18: '=' v= expression
                    {
                    char_literal25=(Token)match(input,30,FOLLOW_30_in_enumItem484); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal25_tree = (Object)adaptor.create(char_literal25);
                    adaptor.addChild(root_0, char_literal25_tree);
                    }
                    pushFollow(FOLLOW_expression_in_enumItem488);
                    v=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, v.getTree());

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			retval.item = new Enum.EnumItem((n!=null?n.getText():null), (v!=null?input.toString(v.start,v.stop):null) == null ? null : (v!=null?v.expr:null));
              			retval.item.setCommentAfter(getCommentAfterOnSameLine(n.getTokenIndex() - 1));
              		
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "enumItem"

    public static class enumCore_return extends ParserRuleReturnScope {
        public Enum e;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "enumCore"
    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:287:1: enumCore returns [Enum e] : t= 'enum' (n1= IDENTIFIER )? '{' i1= enumItem ( ',' (ix= enumItem )? )* '}' ;
    public final ObjCppParser.enumCore_return enumCore() throws RecognitionException {
        ObjCppParser.enumCore_return retval = new ObjCppParser.enumCore_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        Token t=null;
        Token n1=null;
        Token char_literal26=null;
        Token char_literal27=null;
        Token char_literal28=null;
        ObjCppParser.enumItem_return i1 = null;

        ObjCppParser.enumItem_return ix = null;


        Object t_tree=null;
        Object n1_tree=null;
        Object char_literal26_tree=null;
        Object char_literal27_tree=null;
        Object char_literal28_tree=null;

        try {
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:288:2: (t= 'enum' (n1= IDENTIFIER )? '{' i1= enumItem ( ',' (ix= enumItem )? )* '}' )
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:289:3: t= 'enum' (n1= IDENTIFIER )? '{' i1= enumItem ( ',' (ix= enumItem )? )* '}'
            {
            root_0 = (Object)adaptor.nil();

            t=(Token)match(input,31,FOLLOW_31_in_enumCore512); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            t_tree = (Object)adaptor.create(t);
            adaptor.addChild(root_0, t_tree);
            }
            if ( state.backtracking==0 ) {
               
              			retval.e = mark(new Enum(), getLine(t));
              			retval.e.setCommentBefore(getCommentBefore(t.getTokenIndex()));
              		
            }
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:292:5: (n1= IDENTIFIER )?
            int alt10=2;
            int LA10_0 = input.LA(1);

            if ( (LA10_0==IDENTIFIER) ) {
                alt10=1;
            }
            switch (alt10) {
                case 1 :
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:293:4: n1= IDENTIFIER
                    {
                    n1=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_enumCore523); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    n1_tree = (Object)adaptor.create(n1);
                    adaptor.addChild(root_0, n1_tree);
                    }
                    if ( state.backtracking==0 ) {

                      				retval.e.setName((n1!=null?n1.getText():null));
                      			
                    }

                    }
                    break;

            }

            char_literal26=(Token)match(input,24,FOLLOW_24_in_enumCore535); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal26_tree = (Object)adaptor.create(char_literal26);
            adaptor.addChild(root_0, char_literal26_tree);
            }
            pushFollow(FOLLOW_enumItem_in_enumCore542);
            i1=enumItem();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, i1.getTree());
            if ( state.backtracking==0 ) {
               
              				retval.e.addItem((i1!=null?i1.item:null)); 
              			
            }
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:301:4: ( ',' (ix= enumItem )? )*
            loop12:
            do {
                int alt12=2;
                int LA12_0 = input.LA(1);

                if ( (LA12_0==28) ) {
                    alt12=1;
                }


                switch (alt12) {
            	case 1 :
            	    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:302:5: ',' (ix= enumItem )?
            	    {
            	    char_literal27=(Token)match(input,28,FOLLOW_28_in_enumCore555); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal27_tree = (Object)adaptor.create(char_literal27);
            	    adaptor.addChild(root_0, char_literal27_tree);
            	    }
            	    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:303:5: (ix= enumItem )?
            	    int alt11=2;
            	    int LA11_0 = input.LA(1);

            	    if ( (LA11_0==IDENTIFIER) ) {
            	        alt11=1;
            	    }
            	    switch (alt11) {
            	        case 1 :
            	            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:303:6: ix= enumItem
            	            {
            	            pushFollow(FOLLOW_enumItem_in_enumCore565);
            	            ix=enumItem();

            	            state._fsp--;
            	            if (state.failed) return retval;
            	            if ( state.backtracking==0 ) adaptor.addChild(root_0, ix.getTree());
            	            if ( state.backtracking==0 ) {
            	               
            	              					if ((ix!=null?input.toString(ix.start,ix.stop):null) != null)
            	              						retval.e.addItem((ix!=null?ix.item:null)); 
            	              				
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop12;
                }
            } while (true);

            char_literal28=(Token)match(input,25,FOLLOW_25_in_enumCore579); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal28_tree = (Object)adaptor.create(char_literal28);
            adaptor.addChild(root_0, char_literal28_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "enumCore"

    public static class enumDecl_return extends ParserRuleReturnScope {
        public Enum e;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "enumDecl"
    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:311:1: enumDecl returns [Enum e] : t= 'enum' (n1= IDENTIFIER )? '{' i1= enumItem ( ',' (ix= enumItem )? )* '}' (n2= IDENTIFIER )? ';' ;
    public final ObjCppParser.enumDecl_return enumDecl() throws RecognitionException {
        ObjCppParser.enumDecl_return retval = new ObjCppParser.enumDecl_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        Token t=null;
        Token n1=null;
        Token n2=null;
        Token char_literal29=null;
        Token char_literal30=null;
        Token char_literal31=null;
        Token char_literal32=null;
        ObjCppParser.enumItem_return i1 = null;

        ObjCppParser.enumItem_return ix = null;


        Object t_tree=null;
        Object n1_tree=null;
        Object n2_tree=null;
        Object char_literal29_tree=null;
        Object char_literal30_tree=null;
        Object char_literal31_tree=null;
        Object char_literal32_tree=null;

        try {
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:312:2: (t= 'enum' (n1= IDENTIFIER )? '{' i1= enumItem ( ',' (ix= enumItem )? )* '}' (n2= IDENTIFIER )? ';' )
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:313:3: t= 'enum' (n1= IDENTIFIER )? '{' i1= enumItem ( ',' (ix= enumItem )? )* '}' (n2= IDENTIFIER )? ';'
            {
            root_0 = (Object)adaptor.nil();

            t=(Token)match(input,31,FOLLOW_31_in_enumDecl600); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            t_tree = (Object)adaptor.create(t);
            adaptor.addChild(root_0, t_tree);
            }
            if ( state.backtracking==0 ) {
               
              			retval.e = mark(new Enum(), getLine(t));
              			retval.e.setCommentBefore(getCommentBefore(t.getTokenIndex()));
              		
            }
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:316:5: (n1= IDENTIFIER )?
            int alt13=2;
            int LA13_0 = input.LA(1);

            if ( (LA13_0==IDENTIFIER) ) {
                alt13=1;
            }
            switch (alt13) {
                case 1 :
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:317:4: n1= IDENTIFIER
                    {
                    n1=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_enumDecl611); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    n1_tree = (Object)adaptor.create(n1);
                    adaptor.addChild(root_0, n1_tree);
                    }
                    if ( state.backtracking==0 ) {

                      				retval.e.setName((n1!=null?n1.getText():null));
                      			
                    }

                    }
                    break;

            }

            char_literal29=(Token)match(input,24,FOLLOW_24_in_enumDecl623); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal29_tree = (Object)adaptor.create(char_literal29);
            adaptor.addChild(root_0, char_literal29_tree);
            }
            pushFollow(FOLLOW_enumItem_in_enumDecl630);
            i1=enumItem();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, i1.getTree());
            if ( state.backtracking==0 ) {
               
              				retval.e.addItem((i1!=null?i1.item:null)); 
              			
            }
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:325:4: ( ',' (ix= enumItem )? )*
            loop15:
            do {
                int alt15=2;
                int LA15_0 = input.LA(1);

                if ( (LA15_0==28) ) {
                    alt15=1;
                }


                switch (alt15) {
            	case 1 :
            	    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:326:5: ',' (ix= enumItem )?
            	    {
            	    char_literal30=(Token)match(input,28,FOLLOW_28_in_enumDecl643); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal30_tree = (Object)adaptor.create(char_literal30);
            	    adaptor.addChild(root_0, char_literal30_tree);
            	    }
            	    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:327:5: (ix= enumItem )?
            	    int alt14=2;
            	    int LA14_0 = input.LA(1);

            	    if ( (LA14_0==IDENTIFIER) ) {
            	        alt14=1;
            	    }
            	    switch (alt14) {
            	        case 1 :
            	            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:327:6: ix= enumItem
            	            {
            	            pushFollow(FOLLOW_enumItem_in_enumDecl653);
            	            ix=enumItem();

            	            state._fsp--;
            	            if (state.failed) return retval;
            	            if ( state.backtracking==0 ) adaptor.addChild(root_0, ix.getTree());
            	            if ( state.backtracking==0 ) {
            	               
            	              					if ((ix!=null?input.toString(ix.start,ix.stop):null) != null)
            	              						retval.e.addItem((ix!=null?ix.item:null)); 
            	              				
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop15;
                }
            } while (true);

            char_literal31=(Token)match(input,25,FOLLOW_25_in_enumDecl667); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal31_tree = (Object)adaptor.create(char_literal31);
            adaptor.addChild(root_0, char_literal31_tree);
            }
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:333:3: (n2= IDENTIFIER )?
            int alt16=2;
            int LA16_0 = input.LA(1);

            if ( (LA16_0==IDENTIFIER) ) {
                alt16=1;
            }
            switch (alt16) {
                case 1 :
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:334:4: n2= IDENTIFIER
                    {
                    n2=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_enumDecl678); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    n2_tree = (Object)adaptor.create(n2);
                    adaptor.addChild(root_0, n2_tree);
                    }
                    if ( state.backtracking==0 ) {

                      				retval.e.setName((n2!=null?n2.getText():null));
                      			
                    }

                    }
                    break;

            }

            char_literal32=(Token)match(input,29,FOLLOW_29_in_enumDecl689); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal32_tree = (Object)adaptor.create(char_literal32);
            adaptor.addChild(root_0, char_literal32_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "enumDecl"

    public static class objCClassDef_return extends ParserRuleReturnScope {
        public Struct struct;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "objCClassDef"
    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:348:1: objCClassDef returns [Struct struct] : octype= ( '@protocol' | '@interface' ) className= IDENTIFIER ( ( ':' parentClass= IDENTIFIER )? | '(' categoryName= IDENTIFIER ')' ) ( '<' (p1= IDENTIFIER ( ',' px= IDENTIFIER )* )? '>' )? ( '{' ( '@public' | '@private' | '@protected' | ( ( varDecl | functionPointerVarDecl ) ) )* '}' )? ( objCMethodDecl | typeDef | enumDecl )* '@end' ;
    public final ObjCppParser.objCClassDef_return objCClassDef() throws RecognitionException {
        ObjCppParser.objCClassDef_return retval = new ObjCppParser.objCClassDef_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        Token octype=null;
        Token className=null;
        Token parentClass=null;
        Token categoryName=null;
        Token p1=null;
        Token px=null;
        Token char_literal33=null;
        Token char_literal34=null;
        Token char_literal35=null;
        Token char_literal36=null;
        Token char_literal37=null;
        Token char_literal38=null;
        Token char_literal39=null;
        Token string_literal40=null;
        Token string_literal41=null;
        Token string_literal42=null;
        Token char_literal45=null;
        Token string_literal49=null;
        ObjCppParser.varDecl_return varDecl43 = null;

        ObjCppParser.functionPointerVarDecl_return functionPointerVarDecl44 = null;

        ObjCppParser.objCMethodDecl_return objCMethodDecl46 = null;

        ObjCppParser.typeDef_return typeDef47 = null;

        ObjCppParser.enumDecl_return enumDecl48 = null;


        Object octype_tree=null;
        Object className_tree=null;
        Object parentClass_tree=null;
        Object categoryName_tree=null;
        Object p1_tree=null;
        Object px_tree=null;
        Object char_literal33_tree=null;
        Object char_literal34_tree=null;
        Object char_literal35_tree=null;
        Object char_literal36_tree=null;
        Object char_literal37_tree=null;
        Object char_literal38_tree=null;
        Object char_literal39_tree=null;
        Object string_literal40_tree=null;
        Object string_literal41_tree=null;
        Object string_literal42_tree=null;
        Object char_literal45_tree=null;
        Object string_literal49_tree=null;

        try {
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:349:2: (octype= ( '@protocol' | '@interface' ) className= IDENTIFIER ( ( ':' parentClass= IDENTIFIER )? | '(' categoryName= IDENTIFIER ')' ) ( '<' (p1= IDENTIFIER ( ',' px= IDENTIFIER )* )? '>' )? ( '{' ( '@public' | '@private' | '@protected' | ( ( varDecl | functionPointerVarDecl ) ) )* '}' )? ( objCMethodDecl | typeDef | enumDecl )* '@end' )
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:350:3: octype= ( '@protocol' | '@interface' ) className= IDENTIFIER ( ( ':' parentClass= IDENTIFIER )? | '(' categoryName= IDENTIFIER ')' ) ( '<' (p1= IDENTIFIER ( ',' px= IDENTIFIER )* )? '>' )? ( '{' ( '@public' | '@private' | '@protected' | ( ( varDecl | functionPointerVarDecl ) ) )* '}' )? ( objCMethodDecl | typeDef | enumDecl )* '@end'
            {
            root_0 = (Object)adaptor.nil();

            octype=(Token)input.LT(1);
            if ( (input.LA(1)>=32 && input.LA(1)<=33) ) {
                input.consume();
                if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(octype));
                state.errorRecovery=false;state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }

            className=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_objCClassDef725); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            className_tree = (Object)adaptor.create(className);
            adaptor.addChild(root_0, className_tree);
            }
            if ( state.backtracking==0 ) {

              			retval.struct = mark(new Struct(), getLine(octype));
              			retval.struct.setCommentBefore(getCommentBefore(octype.getTokenIndex()));
              			retval.struct.setType((octype!=null?octype.getText():null).equals("@interface") ?
              				Struct.Type.ObjCClass :
              				Struct.Type.ObjCProtocol
              			);
              			retval.struct.setName((className!=null?className.getText():null));
              		
            }
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:360:3: ( ( ':' parentClass= IDENTIFIER )? | '(' categoryName= IDENTIFIER ')' )
            int alt18=2;
            alt18 = dfa18.predict(input);
            switch (alt18) {
                case 1 :
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:361:4: ( ':' parentClass= IDENTIFIER )?
                    {
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:361:4: ( ':' parentClass= IDENTIFIER )?
                    int alt17=2;
                    int LA17_0 = input.LA(1);

                    if ( (LA17_0==34) ) {
                        alt17=1;
                    }
                    switch (alt17) {
                        case 1 :
                            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:362:5: ':' parentClass= IDENTIFIER
                            {
                            char_literal33=(Token)match(input,34,FOLLOW_34_in_objCClassDef743); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            char_literal33_tree = (Object)adaptor.create(char_literal33);
                            adaptor.addChild(root_0, char_literal33_tree);
                            }
                            parentClass=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_objCClassDef747); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            parentClass_tree = (Object)adaptor.create(parentClass);
                            adaptor.addChild(root_0, parentClass_tree);
                            }
                            if ( state.backtracking==0 ) {

                              				if ((parentClass!=null?parentClass.getText():null) != null)
                              					retval.struct.addParent((parentClass!=null?parentClass.getText():null));
                              				
                            }

                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:367:4: '(' categoryName= IDENTIFIER ')'
                    {
                    char_literal34=(Token)match(input,35,FOLLOW_35_in_objCClassDef762); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal34_tree = (Object)adaptor.create(char_literal34);
                    adaptor.addChild(root_0, char_literal34_tree);
                    }
                    categoryName=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_objCClassDef766); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    categoryName_tree = (Object)adaptor.create(categoryName);
                    adaptor.addChild(root_0, categoryName_tree);
                    }
                    char_literal35=(Token)match(input,36,FOLLOW_36_in_objCClassDef768); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal35_tree = (Object)adaptor.create(char_literal35);
                    adaptor.addChild(root_0, char_literal35_tree);
                    }
                    if ( state.backtracking==0 ) {

                      				retval.struct.setCategoryName((categoryName!=null?categoryName.getText():null));
                      			
                    }

                    }
                    break;

            }

            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:371:3: ( '<' (p1= IDENTIFIER ( ',' px= IDENTIFIER )* )? '>' )?
            int alt21=2;
            int LA21_0 = input.LA(1);

            if ( (LA21_0==37) ) {
                alt21=1;
            }
            switch (alt21) {
                case 1 :
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:372:4: '<' (p1= IDENTIFIER ( ',' px= IDENTIFIER )* )? '>'
                    {
                    char_literal36=(Token)match(input,37,FOLLOW_37_in_objCClassDef784); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal36_tree = (Object)adaptor.create(char_literal36);
                    adaptor.addChild(root_0, char_literal36_tree);
                    }
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:372:8: (p1= IDENTIFIER ( ',' px= IDENTIFIER )* )?
                    int alt20=2;
                    int LA20_0 = input.LA(1);

                    if ( (LA20_0==IDENTIFIER) ) {
                        alt20=1;
                    }
                    switch (alt20) {
                        case 1 :
                            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:373:5: p1= IDENTIFIER ( ',' px= IDENTIFIER )*
                            {
                            p1=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_objCClassDef794); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            p1_tree = (Object)adaptor.create(p1);
                            adaptor.addChild(root_0, p1_tree);
                            }
                            if ( state.backtracking==0 ) {
                               retval.struct.addProtocol((p1!=null?p1.getText():null)); 
                            }
                            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:374:5: ( ',' px= IDENTIFIER )*
                            loop19:
                            do {
                                int alt19=2;
                                int LA19_0 = input.LA(1);

                                if ( (LA19_0==28) ) {
                                    alt19=1;
                                }


                                switch (alt19) {
                            	case 1 :
                            	    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:375:6: ',' px= IDENTIFIER
                            	    {
                            	    char_literal37=(Token)match(input,28,FOLLOW_28_in_objCClassDef809); if (state.failed) return retval;
                            	    if ( state.backtracking==0 ) {
                            	    char_literal37_tree = (Object)adaptor.create(char_literal37);
                            	    adaptor.addChild(root_0, char_literal37_tree);
                            	    }
                            	    px=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_objCClassDef819); if (state.failed) return retval;
                            	    if ( state.backtracking==0 ) {
                            	    px_tree = (Object)adaptor.create(px);
                            	    adaptor.addChild(root_0, px_tree);
                            	    }
                            	    if ( state.backtracking==0 ) {
                            	       retval.struct.addProtocol((px!=null?px.getText():null)); 
                            	    }

                            	    }
                            	    break;

                            	default :
                            	    break loop19;
                                }
                            } while (true);


                            }
                            break;

                    }

                    char_literal38=(Token)match(input,38,FOLLOW_38_in_objCClassDef836); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal38_tree = (Object)adaptor.create(char_literal38);
                    adaptor.addChild(root_0, char_literal38_tree);
                    }

                    }
                    break;

            }

            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:380:3: ( '{' ( '@public' | '@private' | '@protected' | ( ( varDecl | functionPointerVarDecl ) ) )* '}' )?
            int alt24=2;
            int LA24_0 = input.LA(1);

            if ( (LA24_0==24) ) {
                alt24=1;
            }
            switch (alt24) {
                case 1 :
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:381:4: '{' ( '@public' | '@private' | '@protected' | ( ( varDecl | functionPointerVarDecl ) ) )* '}'
                    {
                    char_literal39=(Token)match(input,24,FOLLOW_24_in_objCClassDef850); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal39_tree = (Object)adaptor.create(char_literal39);
                    adaptor.addChild(root_0, char_literal39_tree);
                    }
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:382:4: ( '@public' | '@private' | '@protected' | ( ( varDecl | functionPointerVarDecl ) ) )*
                    loop23:
                    do {
                        int alt23=5;
                        alt23 = dfa23.predict(input);
                        switch (alt23) {
                    	case 1 :
                    	    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:383:5: '@public'
                    	    {
                    	    string_literal40=(Token)match(input,39,FOLLOW_39_in_objCClassDef862); if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) {
                    	    string_literal40_tree = (Object)adaptor.create(string_literal40);
                    	    adaptor.addChild(root_0, string_literal40_tree);
                    	    }
                    	    if ( state.backtracking==0 ) {
                    	       retval.struct.setNextMemberVisibility(Struct.MemberVisibility.Public); 
                    	    }

                    	    }
                    	    break;
                    	case 2 :
                    	    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:384:5: '@private'
                    	    {
                    	    string_literal41=(Token)match(input,40,FOLLOW_40_in_objCClassDef873); if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) {
                    	    string_literal41_tree = (Object)adaptor.create(string_literal41);
                    	    adaptor.addChild(root_0, string_literal41_tree);
                    	    }
                    	    if ( state.backtracking==0 ) {
                    	       retval.struct.setNextMemberVisibility(Struct.MemberVisibility.Private); 
                    	    }

                    	    }
                    	    break;
                    	case 3 :
                    	    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:385:5: '@protected'
                    	    {
                    	    string_literal42=(Token)match(input,41,FOLLOW_41_in_objCClassDef884); if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) {
                    	    string_literal42_tree = (Object)adaptor.create(string_literal42);
                    	    adaptor.addChild(root_0, string_literal42_tree);
                    	    }
                    	    if ( state.backtracking==0 ) {
                    	       retval.struct.setNextMemberVisibility(Struct.MemberVisibility.Protected); 
                    	    }

                    	    }
                    	    break;
                    	case 4 :
                    	    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:386:5: ( ( varDecl | functionPointerVarDecl ) )
                    	    {
                    	    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:386:5: ( ( varDecl | functionPointerVarDecl ) )
                    	    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:387:6: ( varDecl | functionPointerVarDecl )
                    	    {
                    	    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:387:6: ( varDecl | functionPointerVarDecl )
                    	    int alt22=2;
                    	    alt22 = dfa22.predict(input);
                    	    switch (alt22) {
                    	        case 1 :
                    	            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:388:7: varDecl
                    	            {
                    	            pushFollow(FOLLOW_varDecl_in_objCClassDef909);
                    	            varDecl43=varDecl();

                    	            state._fsp--;
                    	            if (state.failed) return retval;
                    	            if ( state.backtracking==0 ) adaptor.addChild(root_0, varDecl43.getTree());
                    	            if ( state.backtracking==0 ) {
                    	               
                    	              							retval.struct.addDeclaration((varDecl43!=null?varDecl43.decl:null)); 
                    	              						
                    	            }

                    	            }
                    	            break;
                    	        case 2 :
                    	            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:391:7: functionPointerVarDecl
                    	            {
                    	            pushFollow(FOLLOW_functionPointerVarDecl_in_objCClassDef921);
                    	            functionPointerVarDecl44=functionPointerVarDecl();

                    	            state._fsp--;
                    	            if (state.failed) return retval;
                    	            if ( state.backtracking==0 ) adaptor.addChild(root_0, functionPointerVarDecl44.getTree());
                    	            if ( state.backtracking==0 ) {
                    	               
                    	              							retval.struct.addDeclarations((functionPointerVarDecl44!=null?functionPointerVarDecl44.declarations:null)); 
                    	              						
                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop23;
                        }
                    } while (true);

                    char_literal45=(Token)match(input,25,FOLLOW_25_in_objCClassDef948); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal45_tree = (Object)adaptor.create(char_literal45);
                    adaptor.addChild(root_0, char_literal45_tree);
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               retval.struct.setNextMemberVisibility(Struct.MemberVisibility.Public); 
            }
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:400:3: ( objCMethodDecl | typeDef | enumDecl )*
            loop25:
            do {
                int alt25=4;
                switch ( input.LA(1) ) {
                case 43:
                case 44:
                    {
                    alt25=1;
                    }
                    break;
                case 59:
                    {
                    alt25=2;
                    }
                    break;
                case 31:
                    {
                    alt25=3;
                    }
                    break;

                }

                switch (alt25) {
            	case 1 :
            	    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:401:4: objCMethodDecl
            	    {
            	    pushFollow(FOLLOW_objCMethodDecl_in_objCClassDef966);
            	    objCMethodDecl46=objCMethodDecl();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, objCMethodDecl46.getTree());
            	    if ( state.backtracking==0 ) {
            	       
            	      				retval.struct.addDeclaration((objCMethodDecl46!=null?objCMethodDecl46.function:null)); 
            	      			
            	    }

            	    }
            	    break;
            	case 2 :
            	    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:404:4: typeDef
            	    {
            	    pushFollow(FOLLOW_typeDef_in_objCClassDef975);
            	    typeDef47=typeDef();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, typeDef47.getTree());
            	    if ( state.backtracking==0 ) {

            	      				retval.struct.addDeclaration((typeDef47!=null?typeDef47.declarations:null)); 
            	      			
            	    }

            	    }
            	    break;
            	case 3 :
            	    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:407:4: enumDecl
            	    {
            	    pushFollow(FOLLOW_enumDecl_in_objCClassDef984);
            	    enumDecl48=enumDecl();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, enumDecl48.getTree());
            	    if ( state.backtracking==0 ) {

            	      				retval.struct.addDeclaration((enumDecl48!=null?enumDecl48.e:null)); 
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop25;
                }
            } while (true);

            string_literal49=(Token)match(input,42,FOLLOW_42_in_objCClassDef995); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal49_tree = (Object)adaptor.create(string_literal49);
            adaptor.addChild(root_0, string_literal49_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "objCClassDef"

    public static class objCMethodDecl_return extends ParserRuleReturnScope {
        public Function function;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "objCMethodDecl"
    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:414:1: objCMethodDecl returns [Function function] : tk= (tp= '+' | tm= '-' ) ( '(' (returnTypeRef= typeRef )? ')' )? methodName= IDENTIFIER ( ':' '(' argType1= typeRef ')' argName1= IDENTIFIER (sel= IDENTIFIER ':' '(' argType= typeRef ')' argName= IDENTIFIER )* ( ',' '...' )? )? ';' ;
    public final ObjCppParser.objCMethodDecl_return objCMethodDecl() throws RecognitionException {
        ObjCppParser.objCMethodDecl_return retval = new ObjCppParser.objCMethodDecl_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        Token tp=null;
        Token tm=null;
        Token tk=null;
        Token methodName=null;
        Token argName1=null;
        Token sel=null;
        Token argName=null;
        Token char_literal50=null;
        Token char_literal51=null;
        Token char_literal52=null;
        Token char_literal53=null;
        Token char_literal54=null;
        Token char_literal55=null;
        Token char_literal56=null;
        Token char_literal57=null;
        Token char_literal58=null;
        Token string_literal59=null;
        Token char_literal60=null;
        ObjCppParser.typeRef_return returnTypeRef = null;

        ObjCppParser.typeRef_return argType1 = null;

        ObjCppParser.typeRef_return argType = null;


        Object tp_tree=null;
        Object tm_tree=null;
        Object tk_tree=null;
        Object methodName_tree=null;
        Object argName1_tree=null;
        Object sel_tree=null;
        Object argName_tree=null;
        Object char_literal50_tree=null;
        Object char_literal51_tree=null;
        Object char_literal52_tree=null;
        Object char_literal53_tree=null;
        Object char_literal54_tree=null;
        Object char_literal55_tree=null;
        Object char_literal56_tree=null;
        Object char_literal57_tree=null;
        Object char_literal58_tree=null;
        Object string_literal59_tree=null;
        Object char_literal60_tree=null;

        try {
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:415:2: (tk= (tp= '+' | tm= '-' ) ( '(' (returnTypeRef= typeRef )? ')' )? methodName= IDENTIFIER ( ':' '(' argType1= typeRef ')' argName1= IDENTIFIER (sel= IDENTIFIER ':' '(' argType= typeRef ')' argName= IDENTIFIER )* ( ',' '...' )? )? ';' )
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:415:4: tk= (tp= '+' | tm= '-' ) ( '(' (returnTypeRef= typeRef )? ')' )? methodName= IDENTIFIER ( ':' '(' argType1= typeRef ')' argName1= IDENTIFIER (sel= IDENTIFIER ':' '(' argType= typeRef ')' argName= IDENTIFIER )* ( ',' '...' )? )? ';'
            {
            root_0 = (Object)adaptor.nil();

            if ( state.backtracking==0 ) {
               	
              			retval.function = new Function(); 
              			retval.function.setType(Function.Type.ObjCMethod);
              		
            }
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:419:6: (tp= '+' | tm= '-' )
            int alt26=2;
            int LA26_0 = input.LA(1);

            if ( (LA26_0==43) ) {
                alt26=1;
            }
            else if ( (LA26_0==44) ) {
                alt26=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 26, 0, input);

                throw nvae;
            }
            switch (alt26) {
                case 1 :
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:420:4: tp= '+'
                    {
                    tp=(Token)match(input,43,FOLLOW_43_in_objCMethodDecl1029); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    tp_tree = (Object)adaptor.create(tp);
                    adaptor.addChild(root_0, tp_tree);
                    }
                    if ( state.backtracking==0 ) {
                       
                      				retval.function.addModifier(Declaration.Modifier.Static); 
                      				retval.function = mark(retval.function, getLine(tp)); 
                      				retval.function.setCommentBefore(getCommentBefore(tp.getTokenIndex()));
                      			
                    }

                    }
                    break;
                case 2 :
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:425:4: tm= '-'
                    {
                    tm=(Token)match(input,44,FOLLOW_44_in_objCMethodDecl1041); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    tm_tree = (Object)adaptor.create(tm);
                    adaptor.addChild(root_0, tm_tree);
                    }
                    if ( state.backtracking==0 ) {

                      				retval.function = mark(retval.function, getLine(tm)); 
                      				retval.function.setCommentBefore(getCommentBefore(tm.getTokenIndex()));
                      			
                    }

                    }
                    break;

            }

            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:430:3: ( '(' (returnTypeRef= typeRef )? ')' )?
            int alt28=2;
            int LA28_0 = input.LA(1);

            if ( (LA28_0==35) ) {
                alt28=1;
            }
            switch (alt28) {
                case 1 :
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:432:4: '(' (returnTypeRef= typeRef )? ')'
                    {
                    char_literal50=(Token)match(input,35,FOLLOW_35_in_objCMethodDecl1060); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal50_tree = (Object)adaptor.create(char_literal50);
                    adaptor.addChild(root_0, char_literal50_tree);
                    }
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:433:18: (returnTypeRef= typeRef )?
                    int alt27=2;
                    alt27 = dfa27.predict(input);
                    switch (alt27) {
                        case 1 :
                            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:0:0: returnTypeRef= typeRef
                            {
                            pushFollow(FOLLOW_typeRef_in_objCMethodDecl1068);
                            returnTypeRef=typeRef();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, returnTypeRef.getTree());

                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {
                       
                      					retval.function.setValueType((returnTypeRef!=null?returnTypeRef.type:null)); 
                      				
                    }
                    char_literal51=(Token)match(input,36,FOLLOW_36_in_objCMethodDecl1076); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal51_tree = (Object)adaptor.create(char_literal51);
                    adaptor.addChild(root_0, char_literal51_tree);
                    }

                    }
                    break;

            }

            methodName=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_objCMethodDecl1087); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            methodName_tree = (Object)adaptor.create(methodName);
            adaptor.addChild(root_0, methodName_tree);
            }
            if ( state.backtracking==0 ) {
               
              			retval.function.setName((methodName!=null?methodName.getText():null)); 
              			retval.function.setCommentAfter(getCommentAfterOnSameLine(methodName.getTokenIndex()));
              		
            }
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:442:3: ( ':' '(' argType1= typeRef ')' argName1= IDENTIFIER (sel= IDENTIFIER ':' '(' argType= typeRef ')' argName= IDENTIFIER )* ( ',' '...' )? )?
            int alt31=2;
            int LA31_0 = input.LA(1);

            if ( (LA31_0==34) ) {
                alt31=1;
            }
            switch (alt31) {
                case 1 :
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:443:4: ':' '(' argType1= typeRef ')' argName1= IDENTIFIER (sel= IDENTIFIER ':' '(' argType= typeRef ')' argName= IDENTIFIER )* ( ',' '...' )?
                    {
                    char_literal52=(Token)match(input,34,FOLLOW_34_in_objCMethodDecl1099); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal52_tree = (Object)adaptor.create(char_literal52);
                    adaptor.addChild(root_0, char_literal52_tree);
                    }
                    char_literal53=(Token)match(input,35,FOLLOW_35_in_objCMethodDecl1101); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal53_tree = (Object)adaptor.create(char_literal53);
                    adaptor.addChild(root_0, char_literal53_tree);
                    }
                    pushFollow(FOLLOW_typeRef_in_objCMethodDecl1105);
                    argType1=typeRef();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, argType1.getTree());
                    char_literal54=(Token)match(input,36,FOLLOW_36_in_objCMethodDecl1107); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal54_tree = (Object)adaptor.create(char_literal54);
                    adaptor.addChild(root_0, char_literal54_tree);
                    }
                    argName1=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_objCMethodDecl1111); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    argName1_tree = (Object)adaptor.create(argName1);
                    adaptor.addChild(root_0, argName1_tree);
                    }
                    if ( state.backtracking==0 ) {

                      				Arg arg = new Arg((argName1!=null?argName1.getText():null), (argType1!=null?argType1.type:null));
                      				arg.setSelector((methodName!=null?methodName.getText():null));
                      				retval.function.addArg(arg);
                      			
                    }
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:448:4: (sel= IDENTIFIER ':' '(' argType= typeRef ')' argName= IDENTIFIER )*
                    loop29:
                    do {
                        int alt29=2;
                        int LA29_0 = input.LA(1);

                        if ( (LA29_0==IDENTIFIER) ) {
                            alt29=1;
                        }


                        switch (alt29) {
                    	case 1 :
                    	    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:449:5: sel= IDENTIFIER ':' '(' argType= typeRef ')' argName= IDENTIFIER
                    	    {
                    	    sel=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_objCMethodDecl1126); if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) {
                    	    sel_tree = (Object)adaptor.create(sel);
                    	    adaptor.addChild(root_0, sel_tree);
                    	    }
                    	    char_literal55=(Token)match(input,34,FOLLOW_34_in_objCMethodDecl1128); if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) {
                    	    char_literal55_tree = (Object)adaptor.create(char_literal55);
                    	    adaptor.addChild(root_0, char_literal55_tree);
                    	    }
                    	    char_literal56=(Token)match(input,35,FOLLOW_35_in_objCMethodDecl1135); if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) {
                    	    char_literal56_tree = (Object)adaptor.create(char_literal56);
                    	    adaptor.addChild(root_0, char_literal56_tree);
                    	    }
                    	    pushFollow(FOLLOW_typeRef_in_objCMethodDecl1139);
                    	    argType=typeRef();

                    	    state._fsp--;
                    	    if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) adaptor.addChild(root_0, argType.getTree());
                    	    char_literal57=(Token)match(input,36,FOLLOW_36_in_objCMethodDecl1141); if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) {
                    	    char_literal57_tree = (Object)adaptor.create(char_literal57);
                    	    adaptor.addChild(root_0, char_literal57_tree);
                    	    }
                    	    argName=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_objCMethodDecl1150); if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) {
                    	    argName_tree = (Object)adaptor.create(argName);
                    	    adaptor.addChild(root_0, argName_tree);
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      					Arg arg = new Arg((argName!=null?argName.getText():null), (argType!=null?argType.type:null));
                    	      					arg.setSelector((sel!=null?sel.getText():null));
                    	      					retval.function.addArg(arg);
                    	      				
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop29;
                        }
                    } while (true);

                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:457:4: ( ',' '...' )?
                    int alt30=2;
                    int LA30_0 = input.LA(1);

                    if ( (LA30_0==28) ) {
                        alt30=1;
                    }
                    switch (alt30) {
                        case 1 :
                            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:458:5: ',' '...'
                            {
                            char_literal58=(Token)match(input,28,FOLLOW_28_in_objCMethodDecl1169); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            char_literal58_tree = (Object)adaptor.create(char_literal58);
                            adaptor.addChild(root_0, char_literal58_tree);
                            }
                            string_literal59=(Token)match(input,45,FOLLOW_45_in_objCMethodDecl1171); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            string_literal59_tree = (Object)adaptor.create(string_literal59);
                            adaptor.addChild(root_0, string_literal59_tree);
                            }
                            if ( state.backtracking==0 ) {

                              					retval.function.addArg(Arg.createVarArgs());
                              				
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            char_literal60=(Token)match(input,29,FOLLOW_29_in_objCMethodDecl1188); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal60_tree = (Object)adaptor.create(char_literal60);
            adaptor.addChild(root_0, char_literal60_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "objCMethodDecl"

    public static class structDef_return extends ParserRuleReturnScope {
        public Struct struct;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "structDef"
    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:466:1: structDef returns [Struct struct] : structCore ( varStoragesWithInit )* ';' ;
    public final ObjCppParser.structDef_return structDef() throws RecognitionException {
        ObjCppParser.structDef_return retval = new ObjCppParser.structDef_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        Token char_literal63=null;
        ObjCppParser.structCore_return structCore61 = null;

        ObjCppParser.varStoragesWithInit_return varStoragesWithInit62 = null;


        Object char_literal63_tree=null;

        try {
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:467:2: ( structCore ( varStoragesWithInit )* ';' )
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:468:3: structCore ( varStoragesWithInit )* ';'
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_structCore_in_structDef1206);
            structCore61=structCore();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, structCore61.getTree());
            if ( state.backtracking==0 ) {
               retval.struct = (structCore61!=null?structCore61.struct:null); 
            }
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:469:3: ( varStoragesWithInit )*
            loop32:
            do {
                int alt32=2;
                alt32 = dfa32.predict(input);
                switch (alt32) {
            	case 1 :
            	    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:470:4: varStoragesWithInit
            	    {
            	    pushFollow(FOLLOW_varStoragesWithInit_in_structDef1217);
            	    varStoragesWithInit62=varStoragesWithInit();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, varStoragesWithInit62.getTree());
            	    if ( state.backtracking==0 ) {

            	      				for (VariableStorage s : (varStoragesWithInit62!=null?varStoragesWithInit62.storages:null))
            	      					retval.struct.addVariableStorage(s);
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop32;
                }
            } while (true);

            char_literal63=(Token)match(input,29,FOLLOW_29_in_structDef1228); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal63_tree = (Object)adaptor.create(char_literal63);
            adaptor.addChild(root_0, char_literal63_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "structDef"

    public static class structCore_return extends ParserRuleReturnScope {
        public Struct struct;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "structCore"
    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:478:1: structCore returns [Struct struct] : t= ( 'struct' | 'class' | 'union' ) ( ( exportationModifiers )? n1= IDENTIFIER )? '{' ( ( 'public' | 'private' | 'protected' ) ':' | declaration )* '}' ;
    public final ObjCppParser.structCore_return structCore() throws RecognitionException {
        ObjCppParser.structCore_return retval = new ObjCppParser.structCore_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        Token t=null;
        Token n1=null;
        Token char_literal65=null;
        Token string_literal66=null;
        Token string_literal67=null;
        Token string_literal68=null;
        Token char_literal69=null;
        Token char_literal71=null;
        ObjCppParser.exportationModifiers_return exportationModifiers64 = null;

        ObjCppParser.declaration_return declaration70 = null;


        Object t_tree=null;
        Object n1_tree=null;
        Object char_literal65_tree=null;
        Object string_literal66_tree=null;
        Object string_literal67_tree=null;
        Object string_literal68_tree=null;
        Object char_literal69_tree=null;
        Object char_literal71_tree=null;

        try {
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:479:2: (t= ( 'struct' | 'class' | 'union' ) ( ( exportationModifiers )? n1= IDENTIFIER )? '{' ( ( 'public' | 'private' | 'protected' ) ':' | declaration )* '}' )
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:480:3: t= ( 'struct' | 'class' | 'union' ) ( ( exportationModifiers )? n1= IDENTIFIER )? '{' ( ( 'public' | 'private' | 'protected' ) ':' | declaration )* '}'
            {
            root_0 = (Object)adaptor.nil();

            t=(Token)input.LT(1);
            if ( (input.LA(1)>=46 && input.LA(1)<=48) ) {
                input.consume();
                if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(t));
                state.errorRecovery=false;state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }

            if ( state.backtracking==0 ) {
               
              			retval.struct = mark(new Struct(), getLine(t)); 
              			retval.struct.setType(
              				(t!=null?t.getText():null).equals("struct") ?	Struct.Type.CStruct :
              				(t!=null?t.getText():null).equals("union") ?	Struct.Type.CUnion :
              							Struct.Type.CPPClass
              			);
              		
            }
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:488:3: ( ( exportationModifiers )? n1= IDENTIFIER )?
            int alt34=2;
            int LA34_0 = input.LA(1);

            if ( (LA34_0==IDENTIFIER) ) {
                alt34=1;
            }
            switch (alt34) {
                case 1 :
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:489:4: ( exportationModifiers )? n1= IDENTIFIER
                    {
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:489:4: ( exportationModifiers )?
                    int alt33=2;
                    int LA33_0 = input.LA(1);

                    if ( (LA33_0==IDENTIFIER) ) {
                        int LA33_1 = input.LA(2);

                        if ( (synpred48_ObjCpp()) ) {
                            alt33=1;
                        }
                    }
                    switch (alt33) {
                        case 1 :
                            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:489:6: exportationModifiers
                            {
                            pushFollow(FOLLOW_exportationModifiers_in_structCore1273);
                            exportationModifiers64=exportationModifiers();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, exportationModifiers64.getTree());
                            if ( state.backtracking==0 ) {

                              				for (Modifier m : (exportationModifiers64!=null?exportationModifiers64.modifiers:null))
                              					retval.struct.addModifier(m);
                              			
                            }

                            }
                            break;

                    }

                    n1=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_structCore1285); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    n1_tree = (Object)adaptor.create(n1);
                    adaptor.addChild(root_0, n1_tree);
                    }
                    if ( state.backtracking==0 ) {
                       retval.struct.setName((n1!=null?n1.getText():null)); 
                    }

                    }
                    break;

            }

            char_literal65=(Token)match(input,24,FOLLOW_24_in_structCore1297); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal65_tree = (Object)adaptor.create(char_literal65);
            adaptor.addChild(root_0, char_literal65_tree);
            }
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:496:4: ( ( 'public' | 'private' | 'protected' ) ':' | declaration )*
            loop36:
            do {
                int alt36=3;
                alt36 = dfa36.predict(input);
                switch (alt36) {
            	case 1 :
            	    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:497:5: ( 'public' | 'private' | 'protected' ) ':'
            	    {
            	    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:497:5: ( 'public' | 'private' | 'protected' )
            	    int alt35=3;
            	    switch ( input.LA(1) ) {
            	    case 49:
            	        {
            	        alt35=1;
            	        }
            	        break;
            	    case 50:
            	        {
            	        alt35=2;
            	        }
            	        break;
            	    case 51:
            	        {
            	        alt35=3;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return retval;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 35, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt35) {
            	        case 1 :
            	            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:498:6: 'public'
            	            {
            	            string_literal66=(Token)match(input,49,FOLLOW_49_in_structCore1315); if (state.failed) return retval;
            	            if ( state.backtracking==0 ) {
            	            string_literal66_tree = (Object)adaptor.create(string_literal66);
            	            adaptor.addChild(root_0, string_literal66_tree);
            	            }
            	            if ( state.backtracking==0 ) {
            	               retval.struct.setNextMemberVisibility(Struct.MemberVisibility.Public); 
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:499:6: 'private'
            	            {
            	            string_literal67=(Token)match(input,50,FOLLOW_50_in_structCore1327); if (state.failed) return retval;
            	            if ( state.backtracking==0 ) {
            	            string_literal67_tree = (Object)adaptor.create(string_literal67);
            	            adaptor.addChild(root_0, string_literal67_tree);
            	            }
            	            if ( state.backtracking==0 ) {
            	               retval.struct.setNextMemberVisibility(Struct.MemberVisibility.Private); 
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:500:6: 'protected'
            	            {
            	            string_literal68=(Token)match(input,51,FOLLOW_51_in_structCore1339); if (state.failed) return retval;
            	            if ( state.backtracking==0 ) {
            	            string_literal68_tree = (Object)adaptor.create(string_literal68);
            	            adaptor.addChild(root_0, string_literal68_tree);
            	            }
            	            if ( state.backtracking==0 ) {
            	               retval.struct.setNextMemberVisibility(Struct.MemberVisibility.Protected); 
            	            }

            	            }
            	            break;

            	    }

            	    char_literal69=(Token)match(input,34,FOLLOW_34_in_structCore1350); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal69_tree = (Object)adaptor.create(char_literal69);
            	    adaptor.addChild(root_0, char_literal69_tree);
            	    }

            	    }
            	    break;
            	case 2 :
            	    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:502:5: declaration
            	    {
            	    pushFollow(FOLLOW_declaration_in_structCore1358);
            	    declaration70=declaration();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, declaration70.getTree());
            	    if ( state.backtracking==0 ) {

            	      					retval.struct.addDeclarations((declaration70!=null?declaration70.declarations:null));
            	      				
            	    }

            	    }
            	    break;

            	default :
            	    break loop36;
                }
            } while (true);

            char_literal71=(Token)match(input,25,FOLLOW_25_in_structCore1370); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal71_tree = (Object)adaptor.create(char_literal71);
            adaptor.addChild(root_0, char_literal71_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "structCore"

    public static class functionDeclaration_return extends ParserRuleReturnScope {
        public Function function;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "functionDeclaration"
    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:509:1: functionDeclaration returns [Function function] : (returnTypeRef= typeRef )? preMods= exportationModifiers IDENTIFIER '(' ( (a1= argDef ( ',' ax= argDef )* ) )? ')' (ct= ( 'const' | '__const' ) )? postMods= exportationModifiers ( ';' | statementsBlock ) ;
    public final ObjCppParser.functionDeclaration_return functionDeclaration() throws RecognitionException {
        ObjCppParser.functionDeclaration_return retval = new ObjCppParser.functionDeclaration_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        Token ct=null;
        Token IDENTIFIER72=null;
        Token char_literal73=null;
        Token char_literal74=null;
        Token char_literal75=null;
        Token char_literal76=null;
        ObjCppParser.typeRef_return returnTypeRef = null;

        ObjCppParser.exportationModifiers_return preMods = null;

        ObjCppParser.argDef_return a1 = null;

        ObjCppParser.argDef_return ax = null;

        ObjCppParser.exportationModifiers_return postMods = null;

        ObjCppParser.statementsBlock_return statementsBlock77 = null;


        Object ct_tree=null;
        Object IDENTIFIER72_tree=null;
        Object char_literal73_tree=null;
        Object char_literal74_tree=null;
        Object char_literal75_tree=null;
        Object char_literal76_tree=null;

        try {
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:510:2: ( (returnTypeRef= typeRef )? preMods= exportationModifiers IDENTIFIER '(' ( (a1= argDef ( ',' ax= argDef )* ) )? ')' (ct= ( 'const' | '__const' ) )? postMods= exportationModifiers ( ';' | statementsBlock ) )
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:510:4: (returnTypeRef= typeRef )? preMods= exportationModifiers IDENTIFIER '(' ( (a1= argDef ( ',' ax= argDef )* ) )? ')' (ct= ( 'const' | '__const' ) )? postMods= exportationModifiers ( ';' | statementsBlock )
            {
            root_0 = (Object)adaptor.nil();

            if ( state.backtracking==0 ) {
               	
              			retval.function = new Function();
              			retval.function.setType(Function.Type.CFunction);
              		
            }
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:517:16: (returnTypeRef= typeRef )?
            int alt37=2;
            alt37 = dfa37.predict(input);
            switch (alt37) {
                case 1 :
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:0:0: returnTypeRef= typeRef
                    {
                    pushFollow(FOLLOW_typeRef_in_functionDeclaration1395);
                    returnTypeRef=typeRef();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, returnTypeRef.getTree());

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               
              			retval.function.setValueType((returnTypeRef!=null?returnTypeRef.type:null)); 
              		
            }
            pushFollow(FOLLOW_exportationModifiers_in_functionDeclaration1404);
            preMods=exportationModifiers();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, preMods.getTree());
            if ( state.backtracking==0 ) {

              			for (Modifier m : (preMods!=null?preMods.modifiers:null))
              				retval.function.addModifier(m);
              		
            }
            IDENTIFIER72=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_functionDeclaration1410); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IDENTIFIER72_tree = (Object)adaptor.create(IDENTIFIER72);
            adaptor.addChild(root_0, IDENTIFIER72_tree);
            }
            if ( state.backtracking==0 ) {
               
              			retval.function.setName((IDENTIFIER72!=null?IDENTIFIER72.getText():null)); 
              			retval.function = mark(retval.function, getLine(IDENTIFIER72));
              		
            }
            char_literal73=(Token)match(input,35,FOLLOW_35_in_functionDeclaration1417); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal73_tree = (Object)adaptor.create(char_literal73);
            adaptor.addChild(root_0, char_literal73_tree);
            }
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:529:4: ( (a1= argDef ( ',' ax= argDef )* ) )?
            int alt39=2;
            alt39 = dfa39.predict(input);
            switch (alt39) {
                case 1 :
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:530:5: (a1= argDef ( ',' ax= argDef )* )
                    {
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:530:5: (a1= argDef ( ',' ax= argDef )* )
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:531:6: a1= argDef ( ',' ax= argDef )*
                    {
                    pushFollow(FOLLOW_argDef_in_functionDeclaration1438);
                    a1=argDef();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, a1.getTree());
                    if ( state.backtracking==0 ) {

                      						if (!(a1!=null?input.toString(a1.start,a1.stop):null).equals("void"))
                      							retval.function.addArg((a1!=null?a1.arg:null));
                      					
                    }
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:535:6: ( ',' ax= argDef )*
                    loop38:
                    do {
                        int alt38=2;
                        int LA38_0 = input.LA(1);

                        if ( (LA38_0==28) ) {
                            alt38=1;
                        }


                        switch (alt38) {
                    	case 1 :
                    	    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:536:7: ',' ax= argDef
                    	    {
                    	    char_literal74=(Token)match(input,28,FOLLOW_28_in_functionDeclaration1455); if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) {
                    	    char_literal74_tree = (Object)adaptor.create(char_literal74);
                    	    adaptor.addChild(root_0, char_literal74_tree);
                    	    }
                    	    pushFollow(FOLLOW_argDef_in_functionDeclaration1466);
                    	    ax=argDef();

                    	    state._fsp--;
                    	    if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) adaptor.addChild(root_0, ax.getTree());
                    	    if ( state.backtracking==0 ) {

                    	      							retval.function.addArg((ax!=null?ax.arg:null));
                    	      						
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop38;
                        }
                    } while (true);


                    }


                    }
                    break;

            }

            char_literal75=(Token)match(input,36,FOLLOW_36_in_functionDeclaration1494); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal75_tree = (Object)adaptor.create(char_literal75);
            adaptor.addChild(root_0, char_literal75_tree);
            }
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:544:5: (ct= ( 'const' | '__const' ) )?
            int alt40=2;
            int LA40_0 = input.LA(1);

            if ( ((LA40_0>=52 && LA40_0<=53)) ) {
                alt40=1;
            }
            switch (alt40) {
                case 1 :
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:0:0: ct= ( 'const' | '__const' )
                    {
                    ct=(Token)input.LT(1);
                    if ( (input.LA(1)>=52 && input.LA(1)<=53) ) {
                        input.consume();
                        if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(ct));
                        state.errorRecovery=false;state.failed=false;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return retval;}
                        MismatchedSetException mse = new MismatchedSetException(null,input);
                        throw mse;
                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			if ((ct!=null?ct.getText():null) != null)
              				retval.function.addModifier(Declaration.Modifier.Const);
              		
            }
            pushFollow(FOLLOW_exportationModifiers_in_functionDeclaration1517);
            postMods=exportationModifiers();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, postMods.getTree());
            if ( state.backtracking==0 ) {

              			for (Modifier m : (postMods!=null?postMods.modifiers:null))
              				retval.function.addModifier(m);
              		
            }
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:552:3: ( ';' | statementsBlock )
            int alt41=2;
            int LA41_0 = input.LA(1);

            if ( (LA41_0==29) ) {
                alt41=1;
            }
            else if ( (LA41_0==24) ) {
                alt41=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 41, 0, input);

                throw nvae;
            }
            switch (alt41) {
                case 1 :
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:553:4: ';'
                    {
                    char_literal76=(Token)match(input,29,FOLLOW_29_in_functionDeclaration1529); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal76_tree = (Object)adaptor.create(char_literal76);
                    adaptor.addChild(root_0, char_literal76_tree);
                    }

                    }
                    break;
                case 2 :
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:554:4: statementsBlock
                    {
                    pushFollow(FOLLOW_statementsBlock_in_functionDeclaration1536);
                    statementsBlock77=statementsBlock();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, statementsBlock77.getTree());
                    if ( state.backtracking==0 ) {

                      			
                      			
                    }

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "functionDeclaration"

    public static class functionDefinition_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "functionDefinition"
    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:560:1: functionDefinition : functionDeclaration '{' '}' ;
    public final ObjCppParser.functionDefinition_return functionDefinition() throws RecognitionException {
        ObjCppParser.functionDefinition_return retval = new ObjCppParser.functionDefinition_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        Token char_literal79=null;
        Token char_literal80=null;
        ObjCppParser.functionDeclaration_return functionDeclaration78 = null;


        Object char_literal79_tree=null;
        Object char_literal80_tree=null;

        try {
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:561:2: ( functionDeclaration '{' '}' )
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:561:4: functionDeclaration '{' '}'
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_functionDeclaration_in_functionDefinition1553);
            functionDeclaration78=functionDeclaration();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, functionDeclaration78.getTree());
            char_literal79=(Token)match(input,24,FOLLOW_24_in_functionDefinition1555); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal79_tree = (Object)adaptor.create(char_literal79);
            adaptor.addChild(root_0, char_literal79_tree);
            }
            char_literal80=(Token)match(input,25,FOLLOW_25_in_functionDefinition1557); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal80_tree = (Object)adaptor.create(char_literal80);
            adaptor.addChild(root_0, char_literal80_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "functionDefinition"

    public static class exportationModifiers_return extends ParserRuleReturnScope {
        public List<Modifier> modifiers;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "exportationModifiers"
    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:564:1: exportationModifiers returns [List<Modifier> modifiers] : ( exportationModifier )* ;
    public final ObjCppParser.exportationModifiers_return exportationModifiers() throws RecognitionException {
        ObjCppParser.exportationModifiers_return retval = new ObjCppParser.exportationModifiers_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        ObjCppParser.exportationModifier_return exportationModifier81 = null;



        try {
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:565:2: ( ( exportationModifier )* )
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:565:5: ( exportationModifier )*
            {
            root_0 = (Object)adaptor.nil();

            if ( state.backtracking==0 ) {
               retval.modifiers = new ArrayList<Declaration.Modifier>(); 
            }
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:566:3: ( exportationModifier )*
            loop42:
            do {
                int alt42=2;
                alt42 = dfa42.predict(input);
                switch (alt42) {
            	case 1 :
            	    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:567:4: exportationModifier
            	    {
            	    pushFollow(FOLLOW_exportationModifier_in_exportationModifiers1584);
            	    exportationModifier81=exportationModifier();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, exportationModifier81.getTree());
            	    if ( state.backtracking==0 ) {
            	       
            	      				retval.modifiers.addAll((exportationModifier81!=null?exportationModifier81.modifiers:null)); 
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop42;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "exportationModifiers"

    public static class exportationModifier_return extends ParserRuleReturnScope {
        public List<Modifier> modifiers;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "exportationModifier"
    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:573:1: exportationModifier returns [List<Modifier> modifiers] : IDENTIFIER ({...}? | {...}? '(' extendedDeclModifiers ')' ) ;
    public final ObjCppParser.exportationModifier_return exportationModifier() throws RecognitionException {
        ObjCppParser.exportationModifier_return retval = new ObjCppParser.exportationModifier_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        Token IDENTIFIER82=null;
        Token char_literal83=null;
        Token char_literal85=null;
        ObjCppParser.extendedDeclModifiers_return extendedDeclModifiers84 = null;


        Object IDENTIFIER82_tree=null;
        Object char_literal83_tree=null;
        Object char_literal85_tree=null;

        try {
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:574:2: ( IDENTIFIER ({...}? | {...}? '(' extendedDeclModifiers ')' ) )
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:574:5: IDENTIFIER ({...}? | {...}? '(' extendedDeclModifiers ')' )
            {
            root_0 = (Object)adaptor.nil();

            if ( state.backtracking==0 ) {
               retval.modifiers = new ArrayList<Declaration.Modifier>(); 
            }
            IDENTIFIER82=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_exportationModifier1613); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IDENTIFIER82_tree = (Object)adaptor.create(IDENTIFIER82);
            adaptor.addChild(root_0, IDENTIFIER82_tree);
            }
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:575:14: ({...}? | {...}? '(' extendedDeclModifiers ')' )
            int alt43=2;
            alt43 = dfa43.predict(input);
            switch (alt43) {
                case 1 :
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:576:4: {...}?
                    {
                    if ( !(( 	Declaration.getModifier((IDENTIFIER82!=null?IDENTIFIER82.getText():null)) != null ||
                    				Declaration.getExportationModifier((IDENTIFIER82!=null?IDENTIFIER82.getText():null)) != null
                    			)) ) {
                        if (state.backtracking>0) {state.failed=true; return retval;}
                        throw new FailedPredicateException(input, "exportationModifier", " \tDeclaration.getModifier($IDENTIFIER.text) != null ||\n\t\t\t\tDeclaration.getExportationModifier($IDENTIFIER.text) != null\n\t\t\t");
                    }
                    if ( state.backtracking==0 ) {

                      				Modifier mod = Declaration.getModifier((IDENTIFIER82!=null?IDENTIFIER82.getText():null));
                      				if (mod == null)
                      					mod = Declaration.getExportationModifier((IDENTIFIER82!=null?IDENTIFIER82.getText():null));
                      				retval.modifiers.add(mod);
                      			
                    }

                    }
                    break;
                case 2 :
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:584:4: {...}? '(' extendedDeclModifiers ')'
                    {
                    if ( !(( (IDENTIFIER82!=null?IDENTIFIER82.getText():null).equals("__declspec") || (IDENTIFIER82!=null?IDENTIFIER82.getText():null).equals("__attribute__") )) ) {
                        if (state.backtracking>0) {state.failed=true; return retval;}
                        throw new FailedPredicateException(input, "exportationModifier", " $IDENTIFIER.text.equals(\"__declspec\") || $IDENTIFIER.text.equals(\"__attribute__\") ");
                    }
                    char_literal83=(Token)match(input,35,FOLLOW_35_in_exportationModifier1635); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal83_tree = (Object)adaptor.create(char_literal83);
                    adaptor.addChild(root_0, char_literal83_tree);
                    }
                    pushFollow(FOLLOW_extendedDeclModifiers_in_exportationModifier1637);
                    extendedDeclModifiers84=extendedDeclModifiers();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, extendedDeclModifiers84.getTree());
                    char_literal85=(Token)match(input,36,FOLLOW_36_in_exportationModifier1639); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal85_tree = (Object)adaptor.create(char_literal85);
                    adaptor.addChild(root_0, char_literal85_tree);
                    }
                    if ( state.backtracking==0 ) {

                      				retval.modifiers.addAll((extendedDeclModifiers84!=null?extendedDeclModifiers84.modifiers:null));
                      			
                    }

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "exportationModifier"

    public static class extendedDeclModifiers_return extends ParserRuleReturnScope {
        public List<Function.Modifier> modifiers;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "extendedDeclModifiers"
    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:592:1: extendedDeclModifiers returns [List<Function.Modifier> modifiers] : (i= IDENTIFIER ({...}?) )* ;
    public final ObjCppParser.extendedDeclModifiers_return extendedDeclModifiers() throws RecognitionException {
        ObjCppParser.extendedDeclModifiers_return retval = new ObjCppParser.extendedDeclModifiers_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        Token i=null;

        Object i_tree=null;

        try {
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:593:2: ( (i= IDENTIFIER ({...}?) )* )
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:593:4: (i= IDENTIFIER ({...}?) )*
            {
            root_0 = (Object)adaptor.nil();

            if ( state.backtracking==0 ) {
               retval.modifiers = new ArrayList<Declaration.Modifier>(); 
            }
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:594:3: (i= IDENTIFIER ({...}?) )*
            loop44:
            do {
                int alt44=2;
                int LA44_0 = input.LA(1);

                if ( (LA44_0==IDENTIFIER) ) {
                    alt44=1;
                }


                switch (alt44) {
            	case 1 :
            	    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:595:4: i= IDENTIFIER ({...}?)
            	    {
            	    i=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_extendedDeclModifiers1672); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    i_tree = (Object)adaptor.create(i);
            	    adaptor.addChild(root_0, i_tree);
            	    }
            	    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:596:4: ({...}?)
            	    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:597:5: {...}?
            	    {
            	    if ( !(( Declaration.getExtendedModifier((i!=null?i.getText():null)) != null )) ) {
            	        if (state.backtracking>0) {state.failed=true; return retval;}
            	        throw new FailedPredicateException(input, "extendedDeclModifiers", " Declaration.getExtendedModifier($IDENTIFIER.text) != null ");
            	    }
            	    if ( state.backtracking==0 ) {

            	      					retval.modifiers.add(Declaration.getExtendedModifier((i!=null?i.getText():null)));
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop44;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "extendedDeclModifiers"

    public static class argDef_return extends ParserRuleReturnScope {
        public Arg arg;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "argDef"
    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:607:1: argDef returns [Arg arg] : ( typeRef ( IDENTIFIER ( arrayTypeMutator )? )? ( '=' expression )? | '...' );
    public final ObjCppParser.argDef_return argDef() throws RecognitionException {
        ObjCppParser.argDef_return retval = new ObjCppParser.argDef_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        Token IDENTIFIER87=null;
        Token char_literal89=null;
        Token string_literal91=null;
        ObjCppParser.typeRef_return typeRef86 = null;

        ObjCppParser.arrayTypeMutator_return arrayTypeMutator88 = null;

        ObjCppParser.expression_return expression90 = null;


        Object IDENTIFIER87_tree=null;
        Object char_literal89_tree=null;
        Object string_literal91_tree=null;

        try {
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:608:2: ( typeRef ( IDENTIFIER ( arrayTypeMutator )? )? ( '=' expression )? | '...' )
            int alt48=2;
            alt48 = dfa48.predict(input);
            switch (alt48) {
                case 1 :
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:608:4: typeRef ( IDENTIFIER ( arrayTypeMutator )? )? ( '=' expression )?
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_typeRef_in_argDef1711);
                    typeRef86=typeRef();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, typeRef86.getTree());
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:608:12: ( IDENTIFIER ( arrayTypeMutator )? )?
                    int alt46=2;
                    int LA46_0 = input.LA(1);

                    if ( (LA46_0==IDENTIFIER) ) {
                        alt46=1;
                    }
                    switch (alt46) {
                        case 1 :
                            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:608:13: IDENTIFIER ( arrayTypeMutator )?
                            {
                            IDENTIFIER87=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_argDef1714); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            IDENTIFIER87_tree = (Object)adaptor.create(IDENTIFIER87);
                            adaptor.addChild(root_0, IDENTIFIER87_tree);
                            }
                            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:608:24: ( arrayTypeMutator )?
                            int alt45=2;
                            int LA45_0 = input.LA(1);

                            if ( (LA45_0==57) ) {
                                alt45=1;
                            }
                            switch (alt45) {
                                case 1 :
                                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:0:0: arrayTypeMutator
                                    {
                                    pushFollow(FOLLOW_arrayTypeMutator_in_argDef1716);
                                    arrayTypeMutator88=arrayTypeMutator();

                                    state._fsp--;
                                    if (state.failed) return retval;
                                    if ( state.backtracking==0 ) adaptor.addChild(root_0, arrayTypeMutator88.getTree());

                                    }
                                    break;

                            }


                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {
                       
                      			TypeRef type = (arrayTypeMutator88!=null?input.toString(arrayTypeMutator88.start,arrayTypeMutator88.stop):null) == null ?
                      				(typeRef86!=null?typeRef86.type:null) :
                      				(arrayTypeMutator88!=null?arrayTypeMutator88.mutator:null).mutateType((typeRef86!=null?typeRef86.type:null));
                      			retval.arg = new Arg((IDENTIFIER87!=null?IDENTIFIER87.getText():null), type); 
                      		
                    }
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:614:3: ( '=' expression )?
                    int alt47=2;
                    int LA47_0 = input.LA(1);

                    if ( (LA47_0==30) ) {
                        alt47=1;
                    }
                    switch (alt47) {
                        case 1 :
                            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:614:4: '=' expression
                            {
                            char_literal89=(Token)match(input,30,FOLLOW_30_in_argDef1727); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            char_literal89_tree = (Object)adaptor.create(char_literal89);
                            adaptor.addChild(root_0, char_literal89_tree);
                            }
                            pushFollow(FOLLOW_expression_in_argDef1729);
                            expression90=expression();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression90.getTree());
                            if ( state.backtracking==0 ) {

                              			retval.arg.setDefaultValue((expression90!=null?expression90.expr:null));
                              		
                            }

                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:618:3: '...'
                    {
                    root_0 = (Object)adaptor.nil();

                    string_literal91=(Token)match(input,45,FOLLOW_45_in_argDef1743); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal91_tree = (Object)adaptor.create(string_literal91);
                    adaptor.addChild(root_0, string_literal91_tree);
                    }
                    if ( state.backtracking==0 ) {
                       
                      			retval.arg = Arg.createVarArgs(); 
                      		
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "argDef"

    public static class varStorage_return extends ParserRuleReturnScope {
        public VariableStorage storage;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "varStorage"
    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:623:1: varStorage returns [VariableStorage storage] : ( ( 'const' | '__const' ) | '*' | '&' | '^' )* ( IDENTIFIER )? ( '[' ( expression )? ']' )* ;
    public final ObjCppParser.varStorage_return varStorage() throws RecognitionException {
        ObjCppParser.varStorage_return retval = new ObjCppParser.varStorage_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        Token set92=null;
        Token char_literal93=null;
        Token char_literal94=null;
        Token char_literal95=null;
        Token IDENTIFIER96=null;
        Token char_literal97=null;
        Token char_literal99=null;
        ObjCppParser.expression_return expression98 = null;


        Object set92_tree=null;
        Object char_literal93_tree=null;
        Object char_literal94_tree=null;
        Object char_literal95_tree=null;
        Object IDENTIFIER96_tree=null;
        Object char_literal97_tree=null;
        Object char_literal99_tree=null;

        try {
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:624:2: ( ( ( 'const' | '__const' ) | '*' | '&' | '^' )* ( IDENTIFIER )? ( '[' ( expression )? ']' )* )
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:624:4: ( ( 'const' | '__const' ) | '*' | '&' | '^' )* ( IDENTIFIER )? ( '[' ( expression )? ']' )*
            {
            root_0 = (Object)adaptor.nil();

            if ( state.backtracking==0 ) {

              			retval.storage = new VariableStorage();
              		
            }
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:627:3: ( ( 'const' | '__const' ) | '*' | '&' | '^' )*
            loop49:
            do {
                int alt49=5;
                alt49 = dfa49.predict(input);
                switch (alt49) {
            	case 1 :
            	    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:628:4: ( 'const' | '__const' )
            	    {
            	    set92=(Token)input.LT(1);
            	    if ( (input.LA(1)>=52 && input.LA(1)<=53) ) {
            	        input.consume();
            	        if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set92));
            	        state.errorRecovery=false;state.failed=false;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return retval;}
            	        MismatchedSetException mse = new MismatchedSetException(null,input);
            	        throw mse;
            	    }

            	    if ( state.backtracking==0 ) {
            	       retval.storage.addStorageModifier(StorageModifier.Const); 
            	    }

            	    }
            	    break;
            	case 2 :
            	    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:629:4: '*'
            	    {
            	    char_literal93=(Token)match(input,54,FOLLOW_54_in_varStorage1785); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal93_tree = (Object)adaptor.create(char_literal93);
            	    adaptor.addChild(root_0, char_literal93_tree);
            	    }
            	    if ( state.backtracking==0 ) {
            	       retval.storage.addStorageModifier(StorageModifier.Pointer); 
            	    }

            	    }
            	    break;
            	case 3 :
            	    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:630:4: '&'
            	    {
            	    char_literal94=(Token)match(input,55,FOLLOW_55_in_varStorage1795); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal94_tree = (Object)adaptor.create(char_literal94);
            	    adaptor.addChild(root_0, char_literal94_tree);
            	    }
            	    if ( state.backtracking==0 ) {
            	       retval.storage.addStorageModifier(StorageModifier.Reference); 
            	    }

            	    }
            	    break;
            	case 4 :
            	    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:631:4: '^'
            	    {
            	    char_literal95=(Token)match(input,56,FOLLOW_56_in_varStorage1805); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal95_tree = (Object)adaptor.create(char_literal95);
            	    adaptor.addChild(root_0, char_literal95_tree);
            	    }
            	    if ( state.backtracking==0 ) {
            	       retval.storage.addStorageModifier(StorageModifier.DotNetPointer); 
            	    }

            	    }
            	    break;

            	default :
            	    break loop49;
                }
            } while (true);

            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:633:3: ( IDENTIFIER )?
            int alt50=2;
            alt50 = dfa50.predict(input);
            switch (alt50) {
                case 1 :
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:0:0: IDENTIFIER
                    {
                    IDENTIFIER96=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_varStorage1817); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    IDENTIFIER96_tree = (Object)adaptor.create(IDENTIFIER96);
                    adaptor.addChild(root_0, IDENTIFIER96_tree);
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			retval.storage.setName((IDENTIFIER96!=null?IDENTIFIER96.getText():null)); 
              		
            }
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:636:3: ( '[' ( expression )? ']' )*
            loop52:
            do {
                int alt52=2;
                alt52 = dfa52.predict(input);
                switch (alt52) {
            	case 1 :
            	    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:637:4: '[' ( expression )? ']'
            	    {
            	    char_literal97=(Token)match(input,57,FOLLOW_57_in_varStorage1830); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal97_tree = (Object)adaptor.create(char_literal97);
            	    adaptor.addChild(root_0, char_literal97_tree);
            	    }
            	    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:637:8: ( expression )?
            	    int alt51=2;
            	    alt51 = dfa51.predict(input);
            	    switch (alt51) {
            	        case 1 :
            	            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:0:0: expression
            	            {
            	            pushFollow(FOLLOW_expression_in_varStorage1832);
            	            expression98=expression();

            	            state._fsp--;
            	            if (state.failed) return retval;
            	            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression98.getTree());

            	            }
            	            break;

            	    }

            	    char_literal99=(Token)match(input,58,FOLLOW_58_in_varStorage1835); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal99_tree = (Object)adaptor.create(char_literal99);
            	    adaptor.addChild(root_0, char_literal99_tree);
            	    }
            	    if ( state.backtracking==0 ) {

            	      				if ((expression98!=null?input.toString(expression98.start,expression98.stop):null) == null)
            	      					retval.storage.addDimension(new EmptyArraySize());//storage.addStorageModifier(StorageModifier.Pointer);
            	      				else 
            	      					retval.storage.addDimension((expression98!=null?expression98.expr:null));//(expression98!=null?input.toString(expression98.start,expression98.stop):null) != null ? (expression98!=null?expression98.expr:null) : null);
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop52;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "varStorage"

    public static class varDecl_return extends ParserRuleReturnScope {
        public StoredDeclarations decl;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "varDecl"
    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:646:1: varDecl returns [StoredDeclarations decl] : tr= plainTypeRef varStoragesWithInit ';' ;
    public final ObjCppParser.varDecl_return varDecl() throws RecognitionException {
        ObjCppParser.varDecl_return retval = new ObjCppParser.varDecl_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        Token char_literal101=null;
        ObjCppParser.plainTypeRef_return tr = null;

        ObjCppParser.varStoragesWithInit_return varStoragesWithInit100 = null;


        Object char_literal101_tree=null;

        try {
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:647:2: (tr= plainTypeRef varStoragesWithInit ';' )
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:648:3: tr= plainTypeRef varStoragesWithInit ';'
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_plainTypeRef_in_varDecl1862);
            tr=plainTypeRef();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, tr.getTree());
            if ( state.backtracking==0 ) {

              			retval.decl = mark(new VariablesDeclaration(), (tr!=null?tr.type:null).getElementLine());
              			retval.decl.setValueType((tr!=null?tr.type:null));
              		
            }
            pushFollow(FOLLOW_varStoragesWithInit_in_varDecl1868);
            varStoragesWithInit100=varStoragesWithInit();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, varStoragesWithInit100.getTree());
            if ( state.backtracking==0 ) {

              			if ((varStoragesWithInit100!=null?varStoragesWithInit100.storages:null).size() == 1) {
              				VariableStorage first = (varStoragesWithInit100!=null?varStoragesWithInit100.storages:null).get(0);
              				if (first.toString().length() == 0 && ((tr!=null?tr.type:null) instanceof FunctionSignature)) {
              					FunctionSignature fs = (FunctionSignature)(tr!=null?tr.type:null);
              					first.setName(fs.getFunction().getName());
              				}
              			}
              			for (VariableStorage s : (varStoragesWithInit100!=null?varStoragesWithInit100.storages:null))
              				retval.decl.addVariableStorage(s);
              		
            }
            char_literal101=(Token)match(input,29,FOLLOW_29_in_varDecl1874); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal101_tree = (Object)adaptor.create(char_literal101);
            adaptor.addChild(root_0, char_literal101_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "varDecl"

    public static class varStoragesWithInit_return extends ParserRuleReturnScope {
        public List<VariableStorage> storages;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "varStoragesWithInit"
    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:666:1: varStoragesWithInit returns [List<VariableStorage> storages] : v1= varStorage ( '=' e1= expression )? ( ',' vx= varStorage ( '=' ex= expression )? )* ;
    public final ObjCppParser.varStoragesWithInit_return varStoragesWithInit() throws RecognitionException {
        ObjCppParser.varStoragesWithInit_return retval = new ObjCppParser.varStoragesWithInit_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        Token char_literal102=null;
        Token char_literal103=null;
        Token char_literal104=null;
        ObjCppParser.varStorage_return v1 = null;

        ObjCppParser.expression_return e1 = null;

        ObjCppParser.varStorage_return vx = null;

        ObjCppParser.expression_return ex = null;


        Object char_literal102_tree=null;
        Object char_literal103_tree=null;
        Object char_literal104_tree=null;

        try {
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:667:2: (v1= varStorage ( '=' e1= expression )? ( ',' vx= varStorage ( '=' ex= expression )? )* )
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:667:4: v1= varStorage ( '=' e1= expression )? ( ',' vx= varStorage ( '=' ex= expression )? )*
            {
            root_0 = (Object)adaptor.nil();

            if ( state.backtracking==0 ) {
               retval.storages = new ArrayList<VariableStorage>(); 
            }
            pushFollow(FOLLOW_varStorage_in_varStoragesWithInit1895);
            v1=varStorage();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, v1.getTree());
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:668:17: ( '=' e1= expression )?
            int alt53=2;
            alt53 = dfa53.predict(input);
            switch (alt53) {
                case 1 :
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:668:18: '=' e1= expression
                    {
                    char_literal102=(Token)match(input,30,FOLLOW_30_in_varStoragesWithInit1898); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal102_tree = (Object)adaptor.create(char_literal102);
                    adaptor.addChild(root_0, char_literal102_tree);
                    }
                    pushFollow(FOLLOW_expression_in_varStoragesWithInit1902);
                    e1=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, e1.getTree());
                    if ( state.backtracking==0 ) {
                       (v1!=null?v1.storage:null).setDefaultValue((e1!=null?e1.expr:null)); 
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			retval.storages.add((v1!=null?v1.storage:null));
              		
            }
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:671:3: ( ',' vx= varStorage ( '=' ex= expression )? )*
            loop55:
            do {
                int alt55=2;
                alt55 = dfa55.predict(input);
                switch (alt55) {
            	case 1 :
            	    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:672:4: ',' vx= varStorage ( '=' ex= expression )?
            	    {
            	    char_literal103=(Token)match(input,28,FOLLOW_28_in_varStoragesWithInit1917); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal103_tree = (Object)adaptor.create(char_literal103);
            	    adaptor.addChild(root_0, char_literal103_tree);
            	    }
            	    pushFollow(FOLLOW_varStorage_in_varStoragesWithInit1921);
            	    vx=varStorage();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, vx.getTree());
            	    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:672:22: ( '=' ex= expression )?
            	    int alt54=2;
            	    alt54 = dfa54.predict(input);
            	    switch (alt54) {
            	        case 1 :
            	            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:672:23: '=' ex= expression
            	            {
            	            char_literal104=(Token)match(input,30,FOLLOW_30_in_varStoragesWithInit1924); if (state.failed) return retval;
            	            if ( state.backtracking==0 ) {
            	            char_literal104_tree = (Object)adaptor.create(char_literal104);
            	            adaptor.addChild(root_0, char_literal104_tree);
            	            }
            	            pushFollow(FOLLOW_expression_in_varStoragesWithInit1928);
            	            ex=expression();

            	            state._fsp--;
            	            if (state.failed) return retval;
            	            if ( state.backtracking==0 ) adaptor.addChild(root_0, ex.getTree());
            	            if ( state.backtracking==0 ) {
            	               (vx!=null?vx.storage:null).setDefaultValue((ex!=null?ex.expr:null)); 
            	            }

            	            }
            	            break;

            	    }

            	    if ( state.backtracking==0 ) {

            	      				retval.storages.add((vx!=null?vx.storage:null));
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop55;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "varStoragesWithInit"

    public static class typeDef_return extends ParserRuleReturnScope {
        public TypeDef declarations;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "typeDef"
    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:678:1: typeDef returns [TypeDef declarations] : t= 'typedef' plainTypeRef v1= varStorage ( ',' vx= varStorage )* ';' ;
    public final ObjCppParser.typeDef_return typeDef() throws RecognitionException {
        ObjCppParser.typeDef_return retval = new ObjCppParser.typeDef_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        Token t=null;
        Token char_literal106=null;
        Token char_literal107=null;
        ObjCppParser.varStorage_return v1 = null;

        ObjCppParser.varStorage_return vx = null;

        ObjCppParser.plainTypeRef_return plainTypeRef105 = null;


        Object t_tree=null;
        Object char_literal106_tree=null;
        Object char_literal107_tree=null;

        try {
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:679:2: (t= 'typedef' plainTypeRef v1= varStorage ( ',' vx= varStorage )* ';' )
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:680:3: t= 'typedef' plainTypeRef v1= varStorage ( ',' vx= varStorage )* ';'
            {
            root_0 = (Object)adaptor.nil();

            t=(Token)match(input,59,FOLLOW_59_in_typeDef1960); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            t_tree = (Object)adaptor.create(t);
            adaptor.addChild(root_0, t_tree);
            }
            pushFollow(FOLLOW_plainTypeRef_in_typeDef1965);
            plainTypeRef105=plainTypeRef();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, plainTypeRef105.getTree());
            if ( state.backtracking==0 ) {

              			retval.declarations = mark(new TypeDef(), getLine(t));
              			retval.declarations.setCommentBefore(getCommentBefore(t.getTokenIndex()));
              			retval.declarations.setValueType((plainTypeRef105!=null?plainTypeRef105.type:null));
              		
            }
            pushFollow(FOLLOW_varStorage_in_typeDef1973);
            v1=varStorage();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, v1.getTree());
            if ( state.backtracking==0 ) {
               retval.declarations.addVariableStorage((v1!=null?v1.storage:null)); 
            }
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:687:3: ( ',' vx= varStorage )*
            loop56:
            do {
                int alt56=2;
                int LA56_0 = input.LA(1);

                if ( (LA56_0==28) ) {
                    alt56=1;
                }


                switch (alt56) {
            	case 1 :
            	    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:687:4: ',' vx= varStorage
            	    {
            	    char_literal106=(Token)match(input,28,FOLLOW_28_in_typeDef1980); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal106_tree = (Object)adaptor.create(char_literal106);
            	    adaptor.addChild(root_0, char_literal106_tree);
            	    }
            	    pushFollow(FOLLOW_varStorage_in_typeDef1984);
            	    vx=varStorage();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, vx.getTree());
            	    if ( state.backtracking==0 ) {
            	       retval.declarations.addVariableStorage((vx!=null?vx.storage:null)); 
            	    }

            	    }
            	    break;

            	default :
            	    break loop56;
                }
            } while (true);

            char_literal107=(Token)match(input,29,FOLLOW_29_in_typeDef1992); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal107_tree = (Object)adaptor.create(char_literal107);
            adaptor.addChild(root_0, char_literal107_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "typeDef"

    public static class typeMutator_return extends ParserRuleReturnScope {
        public TypeMutator mutator;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "typeMutator"
    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:691:1: typeMutator returns [TypeMutator mutator] : ( ( 'const' | '__const' ) '*' | '*' | '&' | '[' ']' );
    public final ObjCppParser.typeMutator_return typeMutator() throws RecognitionException {
        ObjCppParser.typeMutator_return retval = new ObjCppParser.typeMutator_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        Token set108=null;
        Token char_literal109=null;
        Token char_literal110=null;
        Token char_literal111=null;
        Token char_literal112=null;
        Token char_literal113=null;

        Object set108_tree=null;
        Object char_literal109_tree=null;
        Object char_literal110_tree=null;
        Object char_literal111_tree=null;
        Object char_literal112_tree=null;
        Object char_literal113_tree=null;

        try {
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:692:2: ( ( 'const' | '__const' ) '*' | '*' | '&' | '[' ']' )
            int alt57=4;
            switch ( input.LA(1) ) {
            case 52:
            case 53:
                {
                alt57=1;
                }
                break;
            case 54:
                {
                alt57=2;
                }
                break;
            case 55:
                {
                alt57=3;
                }
                break;
            case 57:
                {
                alt57=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 57, 0, input);

                throw nvae;
            }

            switch (alt57) {
                case 1 :
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:692:4: ( 'const' | '__const' ) '*'
                    {
                    root_0 = (Object)adaptor.nil();

                    set108=(Token)input.LT(1);
                    if ( (input.LA(1)>=52 && input.LA(1)<=53) ) {
                        input.consume();
                        if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set108));
                        state.errorRecovery=false;state.failed=false;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return retval;}
                        MismatchedSetException mse = new MismatchedSetException(null,input);
                        throw mse;
                    }

                    char_literal109=(Token)match(input,54,FOLLOW_54_in_typeMutator2016); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal109_tree = (Object)adaptor.create(char_literal109);
                    adaptor.addChild(root_0, char_literal109_tree);
                    }
                    if ( state.backtracking==0 ) {
                       retval.mutator = TypeMutator.CONST_STAR; 
                    }

                    }
                    break;
                case 2 :
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:693:3: '*'
                    {
                    root_0 = (Object)adaptor.nil();

                    char_literal110=(Token)match(input,54,FOLLOW_54_in_typeMutator2024); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal110_tree = (Object)adaptor.create(char_literal110);
                    adaptor.addChild(root_0, char_literal110_tree);
                    }
                    if ( state.backtracking==0 ) {
                       retval.mutator = TypeMutator.STAR; 
                    }

                    }
                    break;
                case 3 :
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:694:3: '&'
                    {
                    root_0 = (Object)adaptor.nil();

                    char_literal111=(Token)match(input,55,FOLLOW_55_in_typeMutator2032); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal111_tree = (Object)adaptor.create(char_literal111);
                    adaptor.addChild(root_0, char_literal111_tree);
                    }
                    if ( state.backtracking==0 ) {
                       retval.mutator = TypeMutator.AMPERSTAND; 
                    }

                    }
                    break;
                case 4 :
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:695:3: '[' ']'
                    {
                    root_0 = (Object)adaptor.nil();

                    char_literal112=(Token)match(input,57,FOLLOW_57_in_typeMutator2041); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal112_tree = (Object)adaptor.create(char_literal112);
                    adaptor.addChild(root_0, char_literal112_tree);
                    }
                    char_literal113=(Token)match(input,58,FOLLOW_58_in_typeMutator2043); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal113_tree = (Object)adaptor.create(char_literal113);
                    adaptor.addChild(root_0, char_literal113_tree);
                    }
                    if ( state.backtracking==0 ) {
                       retval.mutator = TypeMutator.BRACKETS; 
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "typeMutator"

    public static class arrayTypeMutator_return extends ParserRuleReturnScope {
        public TypeMutator mutator;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "arrayTypeMutator"
    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:698:1: arrayTypeMutator returns [TypeMutator mutator] : '[' expression ']' ;
    public final ObjCppParser.arrayTypeMutator_return arrayTypeMutator() throws RecognitionException {
        ObjCppParser.arrayTypeMutator_return retval = new ObjCppParser.arrayTypeMutator_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        Token char_literal114=null;
        Token char_literal116=null;
        ObjCppParser.expression_return expression115 = null;


        Object char_literal114_tree=null;
        Object char_literal116_tree=null;

        try {
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:699:2: ( '[' expression ']' )
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:699:4: '[' expression ']'
            {
            root_0 = (Object)adaptor.nil();

            char_literal114=(Token)match(input,57,FOLLOW_57_in_arrayTypeMutator2061); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal114_tree = (Object)adaptor.create(char_literal114);
            adaptor.addChild(root_0, char_literal114_tree);
            }
            pushFollow(FOLLOW_expression_in_arrayTypeMutator2067);
            expression115=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression115.getTree());
            if ( state.backtracking==0 ) {

              				retval.mutator = TypeMutator.array((expression115!=null?expression115.expr:null)); 
              			
            }
            char_literal116=(Token)match(input,58,FOLLOW_58_in_arrayTypeMutator2076); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal116_tree = (Object)adaptor.create(char_literal116);
            adaptor.addChild(root_0, char_literal116_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "arrayTypeMutator"

    public static class typeRefCore_return extends ParserRuleReturnScope {
        public TypeRef type;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "typeRefCore"
    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:706:1: typeRefCore returns [TypeRef type] : (ct= ( 'const' | '__const' ) )? (mod= ( 'typename' | 'struct' | 'class' ) tr= typeRef | ( primitiveTypeRef | IDENTIFIER ( | '<' (t1= typeRef ( ',' tx= typeRef )* )? '>' ) ) ) ;
    public final ObjCppParser.typeRefCore_return typeRefCore() throws RecognitionException {
        ObjCppParser.typeRefCore_return retval = new ObjCppParser.typeRefCore_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        Token ct=null;
        Token mod=null;
        Token IDENTIFIER118=null;
        Token char_literal119=null;
        Token char_literal120=null;
        Token char_literal121=null;
        ObjCppParser.typeRef_return tr = null;

        ObjCppParser.typeRef_return t1 = null;

        ObjCppParser.typeRef_return tx = null;

        ObjCppParser.primitiveTypeRef_return primitiveTypeRef117 = null;


        Object ct_tree=null;
        Object mod_tree=null;
        Object IDENTIFIER118_tree=null;
        Object char_literal119_tree=null;
        Object char_literal120_tree=null;
        Object char_literal121_tree=null;

        try {
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:707:2: ( (ct= ( 'const' | '__const' ) )? (mod= ( 'typename' | 'struct' | 'class' ) tr= typeRef | ( primitiveTypeRef | IDENTIFIER ( | '<' (t1= typeRef ( ',' tx= typeRef )* )? '>' ) ) ) )
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:707:4: (ct= ( 'const' | '__const' ) )? (mod= ( 'typename' | 'struct' | 'class' ) tr= typeRef | ( primitiveTypeRef | IDENTIFIER ( | '<' (t1= typeRef ( ',' tx= typeRef )* )? '>' ) ) )
            {
            root_0 = (Object)adaptor.nil();

            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:707:6: (ct= ( 'const' | '__const' ) )?
            int alt58=2;
            int LA58_0 = input.LA(1);

            if ( ((LA58_0>=52 && LA58_0<=53)) ) {
                alt58=1;
            }
            switch (alt58) {
                case 1 :
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:0:0: ct= ( 'const' | '__const' )
                    {
                    ct=(Token)input.LT(1);
                    if ( (input.LA(1)>=52 && input.LA(1)<=53) ) {
                        input.consume();
                        if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(ct));
                        state.errorRecovery=false;state.failed=false;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return retval;}
                        MismatchedSetException mse = new MismatchedSetException(null,input);
                        throw mse;
                    }


                    }
                    break;

            }

            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:708:3: (mod= ( 'typename' | 'struct' | 'class' ) tr= typeRef | ( primitiveTypeRef | IDENTIFIER ( | '<' (t1= typeRef ( ',' tx= typeRef )* )? '>' ) ) )
            int alt63=2;
            int LA63_0 = input.LA(1);

            if ( ((LA63_0>=46 && LA63_0<=47)||LA63_0==60) ) {
                alt63=1;
            }
            else if ( ((LA63_0>=IDENTIFIER && LA63_0<=LONG)||(LA63_0>=62 && LA63_0<=75)) ) {
                alt63=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 63, 0, input);

                throw nvae;
            }
            switch (alt63) {
                case 1 :
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:709:4: mod= ( 'typename' | 'struct' | 'class' ) tr= typeRef
                    {
                    mod=(Token)input.LT(1);
                    if ( (input.LA(1)>=46 && input.LA(1)<=47)||input.LA(1)==60 ) {
                        input.consume();
                        if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(mod));
                        state.errorRecovery=false;state.failed=false;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return retval;}
                        MismatchedSetException mse = new MismatchedSetException(null,input);
                        throw mse;
                    }

                    pushFollow(FOLLOW_typeRef_in_typeRefCore2127);
                    tr=typeRef();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, tr.getTree());
                    if ( state.backtracking==0 ) {
                       
                      				(retval.type = (tr!=null?tr.type:null)).addModifier((mod!=null?mod.getText():null)); 
                      			
                    }

                    }
                    break;
                case 2 :
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:712:5: ( primitiveTypeRef | IDENTIFIER ( | '<' (t1= typeRef ( ',' tx= typeRef )* )? '>' ) )
                    {
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:712:5: ( primitiveTypeRef | IDENTIFIER ( | '<' (t1= typeRef ( ',' tx= typeRef )* )? '>' ) )
                    int alt62=2;
                    int LA62_0 = input.LA(1);

                    if ( (LA62_0==LONG||(LA62_0>=62 && LA62_0<=75)) ) {
                        alt62=1;
                    }
                    else if ( (LA62_0==IDENTIFIER) ) {
                        alt62=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 62, 0, input);

                        throw nvae;
                    }
                    switch (alt62) {
                        case 1 :
                            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:713:5: primitiveTypeRef
                            {
                            pushFollow(FOLLOW_primitiveTypeRef_in_typeRefCore2144);
                            primitiveTypeRef117=primitiveTypeRef();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, primitiveTypeRef117.getTree());
                            if ( state.backtracking==0 ) {
                               retval.type = (primitiveTypeRef117!=null?primitiveTypeRef117.type:null); 
                            }

                            }
                            break;
                        case 2 :
                            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:714:5: IDENTIFIER ( | '<' (t1= typeRef ( ',' tx= typeRef )* )? '>' )
                            {
                            IDENTIFIER118=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_typeRefCore2155); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            IDENTIFIER118_tree = (Object)adaptor.create(IDENTIFIER118);
                            adaptor.addChild(root_0, IDENTIFIER118_tree);
                            }
                            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:714:16: ( | '<' (t1= typeRef ( ',' tx= typeRef )* )? '>' )
                            int alt61=2;
                            alt61 = dfa61.predict(input);
                            switch (alt61) {
                                case 1 :
                                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:715:6: 
                                    {
                                    if ( state.backtracking==0 ) {
                                       retval.type = new SimpleTypeRef((IDENTIFIER118!=null?IDENTIFIER118.getText():null)); 
                                    }

                                    }
                                    break;
                                case 2 :
                                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:716:6: '<' (t1= typeRef ( ',' tx= typeRef )* )? '>'
                                    {
                                    char_literal119=(Token)match(input,37,FOLLOW_37_in_typeRefCore2173); if (state.failed) return retval;
                                    if ( state.backtracking==0 ) {
                                    char_literal119_tree = (Object)adaptor.create(char_literal119);
                                    adaptor.addChild(root_0, char_literal119_tree);
                                    }
                                    if ( state.backtracking==0 ) {
                                       retval.type = new TemplateRef((IDENTIFIER118!=null?IDENTIFIER118.getText():null)); 
                                    }
                                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:717:7: (t1= typeRef ( ',' tx= typeRef )* )?
                                    int alt60=2;
                                    alt60 = dfa60.predict(input);
                                    switch (alt60) {
                                        case 1 :
                                            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:718:8: t1= typeRef ( ',' tx= typeRef )*
                                            {
                                            pushFollow(FOLLOW_typeRef_in_typeRefCore2194);
                                            t1=typeRef();

                                            state._fsp--;
                                            if (state.failed) return retval;
                                            if ( state.backtracking==0 ) adaptor.addChild(root_0, t1.getTree());
                                            if ( state.backtracking==0 ) {
                                               ((TemplateRef)retval.type).addParameter((t1!=null?t1.type:null)); 
                                            }
                                            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:719:8: ( ',' tx= typeRef )*
                                            loop59:
                                            do {
                                                int alt59=2;
                                                int LA59_0 = input.LA(1);

                                                if ( (LA59_0==28) ) {
                                                    alt59=1;
                                                }


                                                switch (alt59) {
                                            	case 1 :
                                            	    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:720:9: ',' tx= typeRef
                                            	    {
                                            	    char_literal120=(Token)match(input,28,FOLLOW_28_in_typeRefCore2215); if (state.failed) return retval;
                                            	    if ( state.backtracking==0 ) {
                                            	    char_literal120_tree = (Object)adaptor.create(char_literal120);
                                            	    adaptor.addChild(root_0, char_literal120_tree);
                                            	    }
                                            	    pushFollow(FOLLOW_typeRef_in_typeRefCore2228);
                                            	    tx=typeRef();

                                            	    state._fsp--;
                                            	    if (state.failed) return retval;
                                            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, tx.getTree());
                                            	    if ( state.backtracking==0 ) {
                                            	       ((TemplateRef)retval.type).addParameter((tx!=null?tx.type:null)); 
                                            	    }

                                            	    }
                                            	    break;

                                            	default :
                                            	    break loop59;
                                                }
                                            } while (true);


                                            }
                                            break;

                                    }

                                    char_literal121=(Token)match(input,38,FOLLOW_38_in_typeRefCore2256); if (state.failed) return retval;
                                    if ( state.backtracking==0 ) {
                                    char_literal121_tree = (Object)adaptor.create(char_literal121);
                                    adaptor.addChild(root_0, char_literal121_tree);
                                    }

                                    }
                                    break;

                            }

                            if ( state.backtracking==0 ) {

                              					retval.type = mark(retval.type, getLine(IDENTIFIER118));
                              				
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               
              			if ((ct!=null?ct.getText():null) != null) 
              				retval.type.addModifier("const", 0); 
              		
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "typeRefCore"

    public static class templateDef_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "templateDef"
    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:735:1: templateDef : ( 'template' '<' ( templateArgDecl ( ',' templateArgDecl )* )? '>' structDef | functionDefinition );
    public final ObjCppParser.templateDef_return templateDef() throws RecognitionException {
        ObjCppParser.templateDef_return retval = new ObjCppParser.templateDef_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        Token string_literal122=null;
        Token char_literal123=null;
        Token char_literal125=null;
        Token char_literal127=null;
        ObjCppParser.templateArgDecl_return templateArgDecl124 = null;

        ObjCppParser.templateArgDecl_return templateArgDecl126 = null;

        ObjCppParser.structDef_return structDef128 = null;

        ObjCppParser.functionDefinition_return functionDefinition129 = null;


        Object string_literal122_tree=null;
        Object char_literal123_tree=null;
        Object char_literal125_tree=null;
        Object char_literal127_tree=null;

        try {
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:736:2: ( 'template' '<' ( templateArgDecl ( ',' templateArgDecl )* )? '>' structDef | functionDefinition )
            int alt66=2;
            alt66 = dfa66.predict(input);
            switch (alt66) {
                case 1 :
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:736:4: 'template' '<' ( templateArgDecl ( ',' templateArgDecl )* )? '>' structDef
                    {
                    root_0 = (Object)adaptor.nil();

                    string_literal122=(Token)match(input,61,FOLLOW_61_in_templateDef2288); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal122_tree = (Object)adaptor.create(string_literal122);
                    adaptor.addChild(root_0, string_literal122_tree);
                    }
                    char_literal123=(Token)match(input,37,FOLLOW_37_in_templateDef2290); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal123_tree = (Object)adaptor.create(char_literal123);
                    adaptor.addChild(root_0, char_literal123_tree);
                    }
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:736:19: ( templateArgDecl ( ',' templateArgDecl )* )?
                    int alt65=2;
                    int LA65_0 = input.LA(1);

                    if ( (LA65_0==LONG||LA65_0==47||LA65_0==60||(LA65_0>=62 && LA65_0<=75)) ) {
                        alt65=1;
                    }
                    switch (alt65) {
                        case 1 :
                            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:736:20: templateArgDecl ( ',' templateArgDecl )*
                            {
                            pushFollow(FOLLOW_templateArgDecl_in_templateDef2293);
                            templateArgDecl124=templateArgDecl();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, templateArgDecl124.getTree());
                            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:736:36: ( ',' templateArgDecl )*
                            loop64:
                            do {
                                int alt64=2;
                                int LA64_0 = input.LA(1);

                                if ( (LA64_0==28) ) {
                                    alt64=1;
                                }


                                switch (alt64) {
                            	case 1 :
                            	    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:736:37: ',' templateArgDecl
                            	    {
                            	    char_literal125=(Token)match(input,28,FOLLOW_28_in_templateDef2296); if (state.failed) return retval;
                            	    if ( state.backtracking==0 ) {
                            	    char_literal125_tree = (Object)adaptor.create(char_literal125);
                            	    adaptor.addChild(root_0, char_literal125_tree);
                            	    }
                            	    pushFollow(FOLLOW_templateArgDecl_in_templateDef2298);
                            	    templateArgDecl126=templateArgDecl();

                            	    state._fsp--;
                            	    if (state.failed) return retval;
                            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, templateArgDecl126.getTree());

                            	    }
                            	    break;

                            	default :
                            	    break loop64;
                                }
                            } while (true);


                            }
                            break;

                    }

                    char_literal127=(Token)match(input,38,FOLLOW_38_in_templateDef2305); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal127_tree = (Object)adaptor.create(char_literal127);
                    adaptor.addChild(root_0, char_literal127_tree);
                    }
                    pushFollow(FOLLOW_structDef_in_templateDef2309);
                    structDef128=structDef();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, structDef128.getTree());

                    }
                    break;
                case 2 :
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:737:15: functionDefinition
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_functionDefinition_in_templateDef2313);
                    functionDefinition129=functionDefinition();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, functionDefinition129.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "templateDef"

    public static class templateArgDecl_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "templateArgDecl"
    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:740:1: templateArgDecl : ( primitiveTypeRef ( '=' constant ) | ( 'typename' | 'class' ) IDENTIFIER ( '=' typeRef ) );
    public final ObjCppParser.templateArgDecl_return templateArgDecl() throws RecognitionException {
        ObjCppParser.templateArgDecl_return retval = new ObjCppParser.templateArgDecl_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        Token char_literal131=null;
        Token set133=null;
        Token IDENTIFIER134=null;
        Token char_literal135=null;
        ObjCppParser.primitiveTypeRef_return primitiveTypeRef130 = null;

        ObjCppParser.constant_return constant132 = null;

        ObjCppParser.typeRef_return typeRef136 = null;


        Object char_literal131_tree=null;
        Object set133_tree=null;
        Object IDENTIFIER134_tree=null;
        Object char_literal135_tree=null;

        try {
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:741:2: ( primitiveTypeRef ( '=' constant ) | ( 'typename' | 'class' ) IDENTIFIER ( '=' typeRef ) )
            int alt67=2;
            int LA67_0 = input.LA(1);

            if ( (LA67_0==LONG||(LA67_0>=62 && LA67_0<=75)) ) {
                alt67=1;
            }
            else if ( (LA67_0==47||LA67_0==60) ) {
                alt67=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 67, 0, input);

                throw nvae;
            }
            switch (alt67) {
                case 1 :
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:741:4: primitiveTypeRef ( '=' constant )
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_primitiveTypeRef_in_templateArgDecl2325);
                    primitiveTypeRef130=primitiveTypeRef();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, primitiveTypeRef130.getTree());
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:741:21: ( '=' constant )
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:741:22: '=' constant
                    {
                    char_literal131=(Token)match(input,30,FOLLOW_30_in_templateArgDecl2328); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal131_tree = (Object)adaptor.create(char_literal131);
                    adaptor.addChild(root_0, char_literal131_tree);
                    }
                    pushFollow(FOLLOW_constant_in_templateArgDecl2330);
                    constant132=constant();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, constant132.getTree());

                    }


                    }
                    break;
                case 2 :
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:742:3: ( 'typename' | 'class' ) IDENTIFIER ( '=' typeRef )
                    {
                    root_0 = (Object)adaptor.nil();

                    set133=(Token)input.LT(1);
                    if ( input.LA(1)==47||input.LA(1)==60 ) {
                        input.consume();
                        if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set133));
                        state.errorRecovery=false;state.failed=false;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return retval;}
                        MismatchedSetException mse = new MismatchedSetException(null,input);
                        throw mse;
                    }

                    IDENTIFIER134=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_templateArgDecl2345); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    IDENTIFIER134_tree = (Object)adaptor.create(IDENTIFIER134);
                    adaptor.addChild(root_0, IDENTIFIER134_tree);
                    }
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:742:37: ( '=' typeRef )
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:742:38: '=' typeRef
                    {
                    char_literal135=(Token)match(input,30,FOLLOW_30_in_templateArgDecl2348); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal135_tree = (Object)adaptor.create(char_literal135);
                    adaptor.addChild(root_0, char_literal135_tree);
                    }
                    pushFollow(FOLLOW_typeRef_in_templateArgDecl2350);
                    typeRef136=typeRef();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, typeRef136.getTree());

                    }


                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "templateArgDecl"

    public static class functionSignatureSuffix_return extends ParserRuleReturnScope {
        public FunctionSignature signature;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "functionSignatureSuffix"
    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:745:1: functionSignatureSuffix returns [FunctionSignature signature] : tk= '(' exportationModifiers '*' ( IDENTIFIER )? ')' '(' (a1= argDef ( ',' ax= argDef )* )? ')' ;
    public final ObjCppParser.functionSignatureSuffix_return functionSignatureSuffix() throws RecognitionException {
        ObjCppParser.functionSignatureSuffix_return retval = new ObjCppParser.functionSignatureSuffix_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        Token tk=null;
        Token char_literal138=null;
        Token IDENTIFIER139=null;
        Token char_literal140=null;
        Token char_literal141=null;
        Token char_literal142=null;
        Token char_literal143=null;
        ObjCppParser.argDef_return a1 = null;

        ObjCppParser.argDef_return ax = null;

        ObjCppParser.exportationModifiers_return exportationModifiers137 = null;


        Object tk_tree=null;
        Object char_literal138_tree=null;
        Object IDENTIFIER139_tree=null;
        Object char_literal140_tree=null;
        Object char_literal141_tree=null;
        Object char_literal142_tree=null;
        Object char_literal143_tree=null;

        try {
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:746:2: (tk= '(' exportationModifiers '*' ( IDENTIFIER )? ')' '(' (a1= argDef ( ',' ax= argDef )* )? ')' )
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:746:4: tk= '(' exportationModifiers '*' ( IDENTIFIER )? ')' '(' (a1= argDef ( ',' ax= argDef )* )? ')'
            {
            root_0 = (Object)adaptor.nil();

            tk=(Token)match(input,35,FOLLOW_35_in_functionSignatureSuffix2369); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            tk_tree = (Object)adaptor.create(tk);
            adaptor.addChild(root_0, tk_tree);
            }
            pushFollow(FOLLOW_exportationModifiers_in_functionSignatureSuffix2371);
            exportationModifiers137=exportationModifiers();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, exportationModifiers137.getTree());
            char_literal138=(Token)match(input,54,FOLLOW_54_in_functionSignatureSuffix2373); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal138_tree = (Object)adaptor.create(char_literal138);
            adaptor.addChild(root_0, char_literal138_tree);
            }
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:746:36: ( IDENTIFIER )?
            int alt68=2;
            int LA68_0 = input.LA(1);

            if ( (LA68_0==IDENTIFIER) ) {
                alt68=1;
            }
            switch (alt68) {
                case 1 :
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:0:0: IDENTIFIER
                    {
                    IDENTIFIER139=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_functionSignatureSuffix2375); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    IDENTIFIER139_tree = (Object)adaptor.create(IDENTIFIER139);
                    adaptor.addChild(root_0, IDENTIFIER139_tree);
                    }

                    }
                    break;

            }

            char_literal140=(Token)match(input,36,FOLLOW_36_in_functionSignatureSuffix2378); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal140_tree = (Object)adaptor.create(char_literal140);
            adaptor.addChild(root_0, char_literal140_tree);
            }
            if ( state.backtracking==0 ) {
               
              			retval.signature = mark(new FunctionSignature(new Function((IDENTIFIER139!=null?IDENTIFIER139.getText():null), null)), getLine(tk));
              			retval.signature.getFunction().setType(Function.Type.CFunction);
              			retval.signature.getFunction().addModifiers((exportationModifiers137!=null?exportationModifiers137.modifiers:null));
              		
            }
            char_literal141=(Token)match(input,35,FOLLOW_35_in_functionSignatureSuffix2384); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal141_tree = (Object)adaptor.create(char_literal141);
            adaptor.addChild(root_0, char_literal141_tree);
            }
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:751:7: (a1= argDef ( ',' ax= argDef )* )?
            int alt70=2;
            alt70 = dfa70.predict(input);
            switch (alt70) {
                case 1 :
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:752:4: a1= argDef ( ',' ax= argDef )*
                    {
                    pushFollow(FOLLOW_argDef_in_functionSignatureSuffix2393);
                    a1=argDef();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, a1.getTree());
                    if ( state.backtracking==0 ) {
                       
                      				if (!(a1!=null?input.toString(a1.start,a1.stop):null).equals("void"))
                      					((FunctionSignature)retval.signature).getFunction().addArg((a1!=null?a1.arg:null)); 
                      			
                    }
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:756:4: ( ',' ax= argDef )*
                    loop69:
                    do {
                        int alt69=2;
                        int LA69_0 = input.LA(1);

                        if ( (LA69_0==28) ) {
                            alt69=1;
                        }


                        switch (alt69) {
                    	case 1 :
                    	    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:757:5: ',' ax= argDef
                    	    {
                    	    char_literal142=(Token)match(input,28,FOLLOW_28_in_functionSignatureSuffix2406); if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) {
                    	    char_literal142_tree = (Object)adaptor.create(char_literal142);
                    	    adaptor.addChild(root_0, char_literal142_tree);
                    	    }
                    	    pushFollow(FOLLOW_argDef_in_functionSignatureSuffix2415);
                    	    ax=argDef();

                    	    state._fsp--;
                    	    if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) adaptor.addChild(root_0, ax.getTree());
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      					((FunctionSignature)retval.signature).getFunction().addArg((ax!=null?ax.arg:null)); 
                    	      				
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop69;
                        }
                    } while (true);


                    }
                    break;

            }

            char_literal143=(Token)match(input,36,FOLLOW_36_in_functionSignatureSuffix2430); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal143_tree = (Object)adaptor.create(char_literal143);
            adaptor.addChild(root_0, char_literal143_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "functionSignatureSuffix"

    public static class plainTypeRef_return extends ParserRuleReturnScope {
        public TypeRef type;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "plainTypeRef"
    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:765:1: plainTypeRef returns [TypeRef type] : ( structCore | enumCore | typeRefCore ( functionSignatureSuffix )? );
    public final ObjCppParser.plainTypeRef_return plainTypeRef() throws RecognitionException {
        ObjCppParser.plainTypeRef_return retval = new ObjCppParser.plainTypeRef_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        ObjCppParser.structCore_return structCore144 = null;

        ObjCppParser.enumCore_return enumCore145 = null;

        ObjCppParser.typeRefCore_return typeRefCore146 = null;

        ObjCppParser.functionSignatureSuffix_return functionSignatureSuffix147 = null;



        try {
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:766:2: ( structCore | enumCore | typeRefCore ( functionSignatureSuffix )? )
            int alt72=3;
            alt72 = dfa72.predict(input);
            switch (alt72) {
                case 1 :
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:767:3: structCore
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_structCore_in_plainTypeRef2448);
                    structCore144=structCore();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, structCore144.getTree());
                    if ( state.backtracking==0 ) {
                       retval.type = mark(new StructTypeRef((structCore144!=null?structCore144.struct:null)), (structCore144!=null?structCore144.struct:null).getElementLine()); 
                    }

                    }
                    break;
                case 2 :
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:768:3: enumCore
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_enumCore_in_plainTypeRef2456);
                    enumCore145=enumCore();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, enumCore145.getTree());
                    if ( state.backtracking==0 ) {
                       retval.type = mark(new EnumTypeRef((enumCore145!=null?enumCore145.e:null)), (enumCore145!=null?enumCore145.e:null).getElementLine()); 
                    }

                    }
                    break;
                case 3 :
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:769:3: typeRefCore ( functionSignatureSuffix )?
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_typeRefCore_in_plainTypeRef2464);
                    typeRefCore146=typeRefCore();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, typeRefCore146.getTree());
                    if ( state.backtracking==0 ) {
                       retval.type = (typeRefCore146!=null?typeRefCore146.type:null); 
                    }
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:770:3: ( functionSignatureSuffix )?
                    int alt71=2;
                    alt71 = dfa71.predict(input);
                    switch (alt71) {
                        case 1 :
                            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:771:4: functionSignatureSuffix
                            {
                            pushFollow(FOLLOW_functionSignatureSuffix_in_plainTypeRef2475);
                            functionSignatureSuffix147=functionSignatureSuffix();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, functionSignatureSuffix147.getTree());
                            if ( state.backtracking==0 ) {
                               
                              				(functionSignatureSuffix147!=null?functionSignatureSuffix147.signature:null).getFunction().setValueType(retval.type); 
                              				retval.type = (functionSignatureSuffix147!=null?functionSignatureSuffix147.signature:null);
                              			
                            }

                            }
                            break;

                    }


                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "plainTypeRef"

    public static class typeRef_return extends ParserRuleReturnScope {
        public TypeRef type;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "typeRef"
    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:778:1: typeRef returns [TypeRef type] : plainTypeRef ( typeMutator )* ;
    public final ObjCppParser.typeRef_return typeRef() throws RecognitionException {
        ObjCppParser.typeRef_return retval = new ObjCppParser.typeRef_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        ObjCppParser.plainTypeRef_return plainTypeRef148 = null;

        ObjCppParser.typeMutator_return typeMutator149 = null;



        try {
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:779:2: ( plainTypeRef ( typeMutator )* )
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:780:3: plainTypeRef ( typeMutator )*
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_plainTypeRef_in_typeRef2501);
            plainTypeRef148=plainTypeRef();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, plainTypeRef148.getTree());
            if ( state.backtracking==0 ) {

              			retval.type = (plainTypeRef148!=null?plainTypeRef148.type:null);
              		
            }
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:783:3: ( typeMutator )*
            loop73:
            do {
                int alt73=2;
                alt73 = dfa73.predict(input);
                switch (alt73) {
            	case 1 :
            	    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:784:4: typeMutator
            	    {
            	    pushFollow(FOLLOW_typeMutator_in_typeRef2512);
            	    typeMutator149=typeMutator();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, typeMutator149.getTree());
            	    if ( state.backtracking==0 ) {

            	      				retval.type = (typeMutator149!=null?typeMutator149.mutator:null).mutateType(retval.type);
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop73;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "typeRef"

    public static class primSignModifier_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "primSignModifier"
    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:790:1: primSignModifier : ( 'signed' | 'unsigned' | '__signed' | '__unsigned' );
    public final ObjCppParser.primSignModifier_return primSignModifier() throws RecognitionException {
        ObjCppParser.primSignModifier_return retval = new ObjCppParser.primSignModifier_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        Token set150=null;

        Object set150_tree=null;

        try {
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:791:2: ( 'signed' | 'unsigned' | '__signed' | '__unsigned' )
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:
            {
            root_0 = (Object)adaptor.nil();

            set150=(Token)input.LT(1);
            if ( (input.LA(1)>=62 && input.LA(1)<=65) ) {
                input.consume();
                if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set150));
                state.errorRecovery=false;state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "primSignModifier"

    public static class primSizeModifier_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "primSizeModifier"
    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:793:1: primSizeModifier : ( 'long' | 'short' );
    public final ObjCppParser.primSizeModifier_return primSizeModifier() throws RecognitionException {
        ObjCppParser.primSizeModifier_return retval = new ObjCppParser.primSizeModifier_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        Token set151=null;

        Object set151_tree=null;

        try {
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:794:2: ( 'long' | 'short' )
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:
            {
            root_0 = (Object)adaptor.nil();

            set151=(Token)input.LT(1);
            if ( input.LA(1)==LONG||input.LA(1)==66 ) {
                input.consume();
                if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set151));
                state.errorRecovery=false;state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "primSizeModifier"

    public static class primitiveTypeName_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "primitiveTypeName"
    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:796:1: primitiveTypeName : ( 'long' | 'int' | 'short' | 'double' | 'float' | 'char' | 'void' | '__int8' | '__int16' | '__int32' | '__int64' );
    public final ObjCppParser.primitiveTypeName_return primitiveTypeName() throws RecognitionException {
        ObjCppParser.primitiveTypeName_return retval = new ObjCppParser.primitiveTypeName_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        Token set152=null;

        Object set152_tree=null;

        try {
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:797:2: ( 'long' | 'int' | 'short' | 'double' | 'float' | 'char' | 'void' | '__int8' | '__int16' | '__int32' | '__int64' )
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:
            {
            root_0 = (Object)adaptor.nil();

            set152=(Token)input.LT(1);
            if ( input.LA(1)==LONG||(input.LA(1)>=66 && input.LA(1)<=75) ) {
                input.consume();
                if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set152));
                state.errorRecovery=false;state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "primitiveTypeName"

    public static class primitiveTypeRef_return extends ParserRuleReturnScope {
        public TypeRef type;
        public int line;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "primitiveTypeRef"
    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:811:1: primitiveTypeRef returns [TypeRef type, int line] : ( (mod1= primSignModifier )? (mod2= primSizeModifier (mod3= primSizeModifier )? )? name= primitiveTypeName | mod= primSignModifier ) ;
    public final ObjCppParser.primitiveTypeRef_return primitiveTypeRef() throws RecognitionException {
        ObjCppParser.primitiveTypeRef_return retval = new ObjCppParser.primitiveTypeRef_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        ObjCppParser.primSignModifier_return mod1 = null;

        ObjCppParser.primSizeModifier_return mod2 = null;

        ObjCppParser.primSizeModifier_return mod3 = null;

        ObjCppParser.primitiveTypeName_return name = null;

        ObjCppParser.primSignModifier_return mod = null;



        try {
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:812:2: ( ( (mod1= primSignModifier )? (mod2= primSizeModifier (mod3= primSizeModifier )? )? name= primitiveTypeName | mod= primSignModifier ) )
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:812:4: ( (mod1= primSignModifier )? (mod2= primSizeModifier (mod3= primSizeModifier )? )? name= primitiveTypeName | mod= primSignModifier )
            {
            root_0 = (Object)adaptor.nil();

            if ( state.backtracking==0 ) {
               retval.line = getLine(); 
            }
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:813:3: ( (mod1= primSignModifier )? (mod2= primSizeModifier (mod3= primSizeModifier )? )? name= primitiveTypeName | mod= primSignModifier )
            int alt77=2;
            alt77 = dfa77.predict(input);
            switch (alt77) {
                case 1 :
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:813:5: (mod1= primSignModifier )? (mod2= primSizeModifier (mod3= primSizeModifier )? )? name= primitiveTypeName
                    {
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:813:9: (mod1= primSignModifier )?
                    int alt74=2;
                    int LA74_0 = input.LA(1);

                    if ( ((LA74_0>=62 && LA74_0<=65)) ) {
                        alt74=1;
                    }
                    switch (alt74) {
                        case 1 :
                            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:0:0: mod1= primSignModifier
                            {
                            pushFollow(FOLLOW_primSignModifier_in_primitiveTypeRef2656);
                            mod1=primSignModifier();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, mod1.getTree());

                            }
                            break;

                    }

                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:815:4: (mod2= primSizeModifier (mod3= primSizeModifier )? )?
                    int alt76=2;
                    alt76 = dfa76.predict(input);
                    switch (alt76) {
                        case 1 :
                            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:815:5: mod2= primSizeModifier (mod3= primSizeModifier )?
                            {
                            pushFollow(FOLLOW_primSizeModifier_in_primitiveTypeRef2669);
                            mod2=primSizeModifier();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, mod2.getTree());
                            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:816:8: (mod3= primSizeModifier )?
                            int alt75=2;
                            alt75 = dfa75.predict(input);
                            switch (alt75) {
                                case 1 :
                                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:0:0: mod3= primSizeModifier
                                    {
                                    pushFollow(FOLLOW_primSizeModifier_in_primitiveTypeRef2676);
                                    mod3=primSizeModifier();

                                    state._fsp--;
                                    if (state.failed) return retval;
                                    if ( state.backtracking==0 ) adaptor.addChild(root_0, mod3.getTree());

                                    }
                                    break;

                            }


                            }
                            break;

                    }

                    pushFollow(FOLLOW_primitiveTypeName_in_primitiveTypeRef2686);
                    name=primitiveTypeName();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, name.getTree());
                    if ( state.backtracking==0 ) {

                      				retval.type = mark(new Primitive((name!=null?input.toString(name.start,name.stop):null)), retval.line);
                      				retval.type.addModifier((mod1!=null?input.toString(mod1.start,mod1.stop):null));
                      				retval.type.addModifier((mod2!=null?input.toString(mod2.start,mod2.stop):null));
                      				retval.type.addModifier((mod3!=null?input.toString(mod3.start,mod3.stop):null));
                      			
                    }

                    }
                    break;
                case 2 :
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:824:4: mod= primSignModifier
                    {
                    pushFollow(FOLLOW_primSignModifier_in_primitiveTypeRef2700);
                    mod=primSignModifier();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, mod.getTree());
                    if ( state.backtracking==0 ) {

                      				retval.type = mark(new Primitive("int"), retval.line);
                      				retval.type.addModifier((mod!=null?input.toString(mod.start,mod.stop):null));
                      			
                    }

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "primitiveTypeRef"

    public static class objCMethodCall_return extends ParserRuleReturnScope {
        public FunctionCall expr;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "objCMethodCall"
    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:831:1: objCMethodCall returns [FunctionCall expr] : '[' target= expression methodName= IDENTIFIER ( ':' arg1= expression (selx= IDENTIFIER ':' argx= expression )* )? ']' ;
    public final ObjCppParser.objCMethodCall_return objCMethodCall() throws RecognitionException {
        ObjCppParser.objCMethodCall_return retval = new ObjCppParser.objCMethodCall_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        Token methodName=null;
        Token selx=null;
        Token char_literal153=null;
        Token char_literal154=null;
        Token char_literal155=null;
        Token char_literal156=null;
        ObjCppParser.expression_return target = null;

        ObjCppParser.expression_return arg1 = null;

        ObjCppParser.expression_return argx = null;


        Object methodName_tree=null;
        Object selx_tree=null;
        Object char_literal153_tree=null;
        Object char_literal154_tree=null;
        Object char_literal155_tree=null;
        Object char_literal156_tree=null;

        try {
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:832:2: ( '[' target= expression methodName= IDENTIFIER ( ':' arg1= expression (selx= IDENTIFIER ':' argx= expression )* )? ']' )
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:833:3: '[' target= expression methodName= IDENTIFIER ( ':' arg1= expression (selx= IDENTIFIER ':' argx= expression )* )? ']'
            {
            root_0 = (Object)adaptor.nil();

            char_literal153=(Token)match(input,57,FOLLOW_57_in_objCMethodCall2723); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal153_tree = (Object)adaptor.create(char_literal153);
            adaptor.addChild(root_0, char_literal153_tree);
            }
            pushFollow(FOLLOW_expression_in_objCMethodCall2727);
            target=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, target.getTree());
            methodName=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_objCMethodCall2731); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            methodName_tree = (Object)adaptor.create(methodName);
            adaptor.addChild(root_0, methodName_tree);
            }
            if ( state.backtracking==0 ) {

              			retval.expr = new FunctionCall((methodName!=null?methodName.getText():null));
              			retval.expr.setTarget((target!=null?target.expr:null));
              			retval.expr.setMemberRefStyle(MemberRefStyle.SquareBrackets);
              		
            }
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:838:3: ( ':' arg1= expression (selx= IDENTIFIER ':' argx= expression )* )?
            int alt79=2;
            int LA79_0 = input.LA(1);

            if ( (LA79_0==34) ) {
                alt79=1;
            }
            switch (alt79) {
                case 1 :
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:839:4: ':' arg1= expression (selx= IDENTIFIER ':' argx= expression )*
                    {
                    char_literal154=(Token)match(input,34,FOLLOW_34_in_objCMethodCall2742); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal154_tree = (Object)adaptor.create(char_literal154);
                    adaptor.addChild(root_0, char_literal154_tree);
                    }
                    pushFollow(FOLLOW_expression_in_objCMethodCall2746);
                    arg1=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, arg1.getTree());
                    if ( state.backtracking==0 ) {

                      				retval.expr.addArgument(null, (arg1!=null?arg1.expr:null));
                      			
                    }
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:842:4: (selx= IDENTIFIER ':' argx= expression )*
                    loop78:
                    do {
                        int alt78=2;
                        int LA78_0 = input.LA(1);

                        if ( (LA78_0==IDENTIFIER) ) {
                            alt78=1;
                        }


                        switch (alt78) {
                    	case 1 :
                    	    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:843:5: selx= IDENTIFIER ':' argx= expression
                    	    {
                    	    selx=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_objCMethodCall2761); if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) {
                    	    selx_tree = (Object)adaptor.create(selx);
                    	    adaptor.addChild(root_0, selx_tree);
                    	    }
                    	    char_literal155=(Token)match(input,34,FOLLOW_34_in_objCMethodCall2763); if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) {
                    	    char_literal155_tree = (Object)adaptor.create(char_literal155);
                    	    adaptor.addChild(root_0, char_literal155_tree);
                    	    }
                    	    pushFollow(FOLLOW_expression_in_objCMethodCall2767);
                    	    argx=expression();

                    	    state._fsp--;
                    	    if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) adaptor.addChild(root_0, argx.getTree());
                    	    if ( state.backtracking==0 ) {

                    	      					retval.expr.addArgument((selx!=null?selx.getText():null), (argx!=null?argx.expr:null));
                    	      				
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop78;
                        }
                    } while (true);


                    }
                    break;

            }

            char_literal156=(Token)match(input,58,FOLLOW_58_in_objCMethodCall2784); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal156_tree = (Object)adaptor.create(char_literal156);
            adaptor.addChild(root_0, char_literal156_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "objCMethodCall"

    public static class functionCall_return extends ParserRuleReturnScope {
        public FunctionCall expr;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "functionCall"
    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:851:1: functionCall returns [FunctionCall expr] : ( 'sizeof' '(' typeRef ')' | IDENTIFIER '(' (a1= expression ( ',' ax= expression )* )? ')' );
    public final ObjCppParser.functionCall_return functionCall() throws RecognitionException {
        ObjCppParser.functionCall_return retval = new ObjCppParser.functionCall_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        Token string_literal157=null;
        Token char_literal158=null;
        Token char_literal160=null;
        Token IDENTIFIER161=null;
        Token char_literal162=null;
        Token char_literal163=null;
        Token char_literal164=null;
        ObjCppParser.expression_return a1 = null;

        ObjCppParser.expression_return ax = null;

        ObjCppParser.typeRef_return typeRef159 = null;


        Object string_literal157_tree=null;
        Object char_literal158_tree=null;
        Object char_literal160_tree=null;
        Object IDENTIFIER161_tree=null;
        Object char_literal162_tree=null;
        Object char_literal163_tree=null;
        Object char_literal164_tree=null;

        try {
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:852:2: ( 'sizeof' '(' typeRef ')' | IDENTIFIER '(' (a1= expression ( ',' ax= expression )* )? ')' )
            int alt82=2;
            int LA82_0 = input.LA(1);

            if ( (LA82_0==76) ) {
                alt82=1;
            }
            else if ( (LA82_0==IDENTIFIER) ) {
                alt82=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 82, 0, input);

                throw nvae;
            }
            switch (alt82) {
                case 1 :
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:853:3: 'sizeof' '(' typeRef ')'
                    {
                    root_0 = (Object)adaptor.nil();

                    string_literal157=(Token)match(input,76,FOLLOW_76_in_functionCall2804); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal157_tree = (Object)adaptor.create(string_literal157);
                    adaptor.addChild(root_0, string_literal157_tree);
                    }
                    char_literal158=(Token)match(input,35,FOLLOW_35_in_functionCall2806); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal158_tree = (Object)adaptor.create(char_literal158);
                    adaptor.addChild(root_0, char_literal158_tree);
                    }
                    pushFollow(FOLLOW_typeRef_in_functionCall2808);
                    typeRef159=typeRef();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, typeRef159.getTree());
                    char_literal160=(Token)match(input,36,FOLLOW_36_in_functionCall2810); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal160_tree = (Object)adaptor.create(char_literal160);
                    adaptor.addChild(root_0, char_literal160_tree);
                    }
                    if ( state.backtracking==0 ) {

                      			retval.expr = new FunctionCall("sizeof");
                      			retval.expr.addArgument(new TypeRefExpression((typeRef159!=null?typeRef159.type:null)));
                      		
                    }

                    }
                    break;
                case 2 :
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:857:3: IDENTIFIER '(' (a1= expression ( ',' ax= expression )* )? ')'
                    {
                    root_0 = (Object)adaptor.nil();

                    IDENTIFIER161=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_functionCall2818); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    IDENTIFIER161_tree = (Object)adaptor.create(IDENTIFIER161);
                    adaptor.addChild(root_0, IDENTIFIER161_tree);
                    }
                    char_literal162=(Token)match(input,35,FOLLOW_35_in_functionCall2820); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal162_tree = (Object)adaptor.create(char_literal162);
                    adaptor.addChild(root_0, char_literal162_tree);
                    }
                    if ( state.backtracking==0 ) {

                      			retval.expr = new FunctionCall((IDENTIFIER161!=null?IDENTIFIER161.getText():null));
                      		
                    }
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:860:3: (a1= expression ( ',' ax= expression )* )?
                    int alt81=2;
                    alt81 = dfa81.predict(input);
                    switch (alt81) {
                        case 1 :
                            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:861:4: a1= expression ( ',' ax= expression )*
                            {
                            pushFollow(FOLLOW_expression_in_functionCall2833);
                            a1=expression();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, a1.getTree());
                            if ( state.backtracking==0 ) {

                              				retval.expr.addArgument((a1!=null?a1.expr:null));
                              			
                            }
                            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:864:4: ( ',' ax= expression )*
                            loop80:
                            do {
                                int alt80=2;
                                int LA80_0 = input.LA(1);

                                if ( (LA80_0==28) ) {
                                    alt80=1;
                                }


                                switch (alt80) {
                            	case 1 :
                            	    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:864:6: ',' ax= expression
                            	    {
                            	    char_literal163=(Token)match(input,28,FOLLOW_28_in_functionCall2842); if (state.failed) return retval;
                            	    if ( state.backtracking==0 ) {
                            	    char_literal163_tree = (Object)adaptor.create(char_literal163);
                            	    adaptor.addChild(root_0, char_literal163_tree);
                            	    }
                            	    pushFollow(FOLLOW_expression_in_functionCall2851);
                            	    ax=expression();

                            	    state._fsp--;
                            	    if (state.failed) return retval;
                            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, ax.getTree());
                            	    if ( state.backtracking==0 ) {

                            	      					retval.expr.addArgument((ax!=null?ax.expr:null));
                            	      				
                            	    }

                            	    }
                            	    break;

                            	default :
                            	    break loop80;
                                }
                            } while (true);


                            }
                            break;

                    }

                    char_literal164=(Token)match(input,36,FOLLOW_36_in_functionCall2869); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal164_tree = (Object)adaptor.create(char_literal164);
                    adaptor.addChild(root_0, char_literal164_tree);
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "functionCall"

    public static class expression_return extends ParserRuleReturnScope {
        public Expression expr;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "expression"
    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:873:1: expression returns [Expression expr] : (id= IDENTIFIER | fc1= functionCall | objCMethodCall | prefixOp= ( '!' | '~' ) opd= expression | '(' (par= expression ')' | typeRef ')' casted= expression ) | constant | '{' expression '}' ) (bop= ( '+' | '-' | '*' | '/' | '%' | '<<' | '>>>' | '>>' | '^' | '||' | '|' | '&&' | '&' | '<=' | '>=' | '<' | '>' | '==' | '!=' ) opd2= expression | '=' val= expression | '.' fieldName= IDENTIFIER | refStyle= ( ':' ':' | '-' '>' | '.' ) fc2= functionCall | '?' xif= expression ':' xelse= expression )* ;
    public final ObjCppParser.expression_return expression() throws RecognitionException {
        ObjCppParser.expression_return retval = new ObjCppParser.expression_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        Token id=null;
        Token prefixOp=null;
        Token bop=null;
        Token fieldName=null;
        Token refStyle=null;
        Token char_literal166=null;
        Token char_literal167=null;
        Token char_literal169=null;
        Token char_literal171=null;
        Token char_literal173=null;
        Token char_literal174=null;
        Token char_literal175=null;
        Token char_literal176=null;
        Token char_literal177=null;
        Token char_literal178=null;
        Token char_literal179=null;
        Token char_literal180=null;
        Token char_literal181=null;
        Token char_literal182=null;
        ObjCppParser.functionCall_return fc1 = null;

        ObjCppParser.expression_return opd = null;

        ObjCppParser.expression_return par = null;

        ObjCppParser.expression_return casted = null;

        ObjCppParser.expression_return opd2 = null;

        ObjCppParser.expression_return val = null;

        ObjCppParser.functionCall_return fc2 = null;

        ObjCppParser.expression_return xif = null;

        ObjCppParser.expression_return xelse = null;

        ObjCppParser.objCMethodCall_return objCMethodCall165 = null;

        ObjCppParser.typeRef_return typeRef168 = null;

        ObjCppParser.constant_return constant170 = null;

        ObjCppParser.expression_return expression172 = null;


        Object id_tree=null;
        Object prefixOp_tree=null;
        Object bop_tree=null;
        Object fieldName_tree=null;
        Object refStyle_tree=null;
        Object char_literal166_tree=null;
        Object char_literal167_tree=null;
        Object char_literal169_tree=null;
        Object char_literal171_tree=null;
        Object char_literal173_tree=null;
        Object char_literal174_tree=null;
        Object char_literal175_tree=null;
        Object char_literal176_tree=null;
        Object char_literal177_tree=null;
        Object char_literal178_tree=null;
        Object char_literal179_tree=null;
        Object char_literal180_tree=null;
        Object char_literal181_tree=null;
        Object char_literal182_tree=null;

        try {
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:874:2: ( (id= IDENTIFIER | fc1= functionCall | objCMethodCall | prefixOp= ( '!' | '~' ) opd= expression | '(' (par= expression ')' | typeRef ')' casted= expression ) | constant | '{' expression '}' ) (bop= ( '+' | '-' | '*' | '/' | '%' | '<<' | '>>>' | '>>' | '^' | '||' | '|' | '&&' | '&' | '<=' | '>=' | '<' | '>' | '==' | '!=' ) opd2= expression | '=' val= expression | '.' fieldName= IDENTIFIER | refStyle= ( ':' ':' | '-' '>' | '.' ) fc2= functionCall | '?' xif= expression ':' xelse= expression )* )
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:874:4: (id= IDENTIFIER | fc1= functionCall | objCMethodCall | prefixOp= ( '!' | '~' ) opd= expression | '(' (par= expression ')' | typeRef ')' casted= expression ) | constant | '{' expression '}' ) (bop= ( '+' | '-' | '*' | '/' | '%' | '<<' | '>>>' | '>>' | '^' | '||' | '|' | '&&' | '&' | '<=' | '>=' | '<' | '>' | '==' | '!=' ) opd2= expression | '=' val= expression | '.' fieldName= IDENTIFIER | refStyle= ( ':' ':' | '-' '>' | '.' ) fc2= functionCall | '?' xif= expression ':' xelse= expression )*
            {
            root_0 = (Object)adaptor.nil();

            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:874:4: (id= IDENTIFIER | fc1= functionCall | objCMethodCall | prefixOp= ( '!' | '~' ) opd= expression | '(' (par= expression ')' | typeRef ')' casted= expression ) | constant | '{' expression '}' )
            int alt84=7;
            alt84 = dfa84.predict(input);
            switch (alt84) {
                case 1 :
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:875:4: id= IDENTIFIER
                    {
                    id=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_expression2891); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    id_tree = (Object)adaptor.create(id);
                    adaptor.addChild(root_0, id_tree);
                    }
                    if ( state.backtracking==0 ) {

                      				retval.expr = new VariableRef((id!=null?id.getText():null));
                      			
                    }

                    }
                    break;
                case 2 :
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:878:4: fc1= functionCall
                    {
                    pushFollow(FOLLOW_functionCall_in_expression2902);
                    fc1=functionCall();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, fc1.getTree());
                    if ( state.backtracking==0 ) {
                       
                      				retval.expr = (fc1!=null?fc1.expr:null); 
                      			
                    }

                    }
                    break;
                case 3 :
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:881:4: objCMethodCall
                    {
                    pushFollow(FOLLOW_objCMethodCall_in_expression2911);
                    objCMethodCall165=objCMethodCall();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, objCMethodCall165.getTree());
                    if ( state.backtracking==0 ) {
                       
                      				retval.expr = (objCMethodCall165!=null?objCMethodCall165.expr:null); 
                      			
                    }

                    }
                    break;
                case 4 :
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:884:4: prefixOp= ( '!' | '~' ) opd= expression
                    {
                    prefixOp=(Token)input.LT(1);
                    if ( (input.LA(1)>=77 && input.LA(1)<=78) ) {
                        input.consume();
                        if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(prefixOp));
                        state.errorRecovery=false;state.failed=false;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return retval;}
                        MismatchedSetException mse = new MismatchedSetException(null,input);
                        throw mse;
                    }

                    pushFollow(FOLLOW_expression_in_expression2932);
                    opd=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, opd.getTree());
                    if ( state.backtracking==0 ) {

                      				retval.expr = new UnaryOp(Expression.getUnaryOperator((prefixOp!=null?prefixOp.getText():null)), (opd!=null?opd.expr:null));
                      			
                    }

                    }
                    break;
                case 5 :
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:887:4: '(' (par= expression ')' | typeRef ')' casted= expression )
                    {
                    char_literal166=(Token)match(input,35,FOLLOW_35_in_expression2941); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal166_tree = (Object)adaptor.create(char_literal166);
                    adaptor.addChild(root_0, char_literal166_tree);
                    }
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:887:8: (par= expression ')' | typeRef ')' casted= expression )
                    int alt83=2;
                    alt83 = dfa83.predict(input);
                    switch (alt83) {
                        case 1 :
                            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:888:5: par= expression ')'
                            {
                            pushFollow(FOLLOW_expression_in_expression2951);
                            par=expression();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, par.getTree());
                            char_literal167=(Token)match(input,36,FOLLOW_36_in_expression2953); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            char_literal167_tree = (Object)adaptor.create(char_literal167);
                            adaptor.addChild(root_0, char_literal167_tree);
                            }
                            if ( state.backtracking==0 ) {

                              					retval.expr = (par!=null?par.expr:null);
                              					if (retval.expr != null)
                              						retval.expr.setParenthesis(true);
                              				
                            }

                            }
                            break;
                        case 2 :
                            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:893:5: typeRef ')' casted= expression
                            {
                            pushFollow(FOLLOW_typeRef_in_expression2963);
                            typeRef168=typeRef();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, typeRef168.getTree());
                            char_literal169=(Token)match(input,36,FOLLOW_36_in_expression2965); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            char_literal169_tree = (Object)adaptor.create(char_literal169);
                            adaptor.addChild(root_0, char_literal169_tree);
                            }
                            pushFollow(FOLLOW_expression_in_expression2969);
                            casted=expression();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, casted.getTree());
                            if ( state.backtracking==0 ) {

                              					retval.expr = new Cast((typeRef168!=null?typeRef168.type:null), (casted!=null?casted.expr:null));
                              				
                            }

                            }
                            break;

                    }


                    }
                    break;
                case 6 :
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:897:4: constant
                    {
                    pushFollow(FOLLOW_constant_in_expression2984);
                    constant170=constant();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, constant170.getTree());
                    if ( state.backtracking==0 ) {
                       retval.expr = (constant170!=null?constant170.constant:null); 
                    }

                    }
                    break;
                case 7 :
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:898:4: '{' expression '}'
                    {
                    char_literal171=(Token)match(input,24,FOLLOW_24_in_expression2993); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal171_tree = (Object)adaptor.create(char_literal171);
                    adaptor.addChild(root_0, char_literal171_tree);
                    }
                    pushFollow(FOLLOW_expression_in_expression2995);
                    expression172=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression172.getTree());
                    char_literal173=(Token)match(input,25,FOLLOW_25_in_expression2997); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal173_tree = (Object)adaptor.create(char_literal173);
                    adaptor.addChild(root_0, char_literal173_tree);
                    }

                    }
                    break;

            }

            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:900:3: (bop= ( '+' | '-' | '*' | '/' | '%' | '<<' | '>>>' | '>>' | '^' | '||' | '|' | '&&' | '&' | '<=' | '>=' | '<' | '>' | '==' | '!=' ) opd2= expression | '=' val= expression | '.' fieldName= IDENTIFIER | refStyle= ( ':' ':' | '-' '>' | '.' ) fc2= functionCall | '?' xif= expression ':' xelse= expression )*
            loop86:
            do {
                int alt86=6;
                alt86 = dfa86.predict(input);
                switch (alt86) {
            	case 1 :
            	    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:901:4: bop= ( '+' | '-' | '*' | '/' | '%' | '<<' | '>>>' | '>>' | '^' | '||' | '|' | '&&' | '&' | '<=' | '>=' | '<' | '>' | '==' | '!=' ) opd2= expression
            	    {
            	    bop=(Token)input.LT(1);
            	    if ( (input.LA(1)>=37 && input.LA(1)<=38)||(input.LA(1)>=43 && input.LA(1)<=44)||(input.LA(1)>=54 && input.LA(1)<=56)||(input.LA(1)>=79 && input.LA(1)<=90) ) {
            	        input.consume();
            	        if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(bop));
            	        state.errorRecovery=false;state.failed=false;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return retval;}
            	        MismatchedSetException mse = new MismatchedSetException(null,input);
            	        throw mse;
            	    }

            	    pushFollow(FOLLOW_expression_in_expression3107);
            	    opd2=expression();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, opd2.getTree());
            	    if ( state.backtracking==0 ) {

            	      				retval.expr = new BinaryOp(getBinaryOperator((bop!=null?bop.getText():null)), retval.expr, (opd2!=null?opd2.expr:null));
            	      			
            	    }

            	    }
            	    break;
            	case 2 :
            	    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:908:4: '=' val= expression
            	    {
            	    char_literal174=(Token)match(input,30,FOLLOW_30_in_expression3116); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal174_tree = (Object)adaptor.create(char_literal174);
            	    adaptor.addChild(root_0, char_literal174_tree);
            	    }
            	    pushFollow(FOLLOW_expression_in_expression3120);
            	    val=expression();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, val.getTree());
            	    if ( state.backtracking==0 ) {

            	      				retval.expr = new Assignment(retval.expr, (val!=null?val.expr:null));
            	      			
            	    }

            	    }
            	    break;
            	case 3 :
            	    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:911:4: '.' fieldName= IDENTIFIER
            	    {
            	    char_literal175=(Token)match(input,91,FOLLOW_91_in_expression3129); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal175_tree = (Object)adaptor.create(char_literal175);
            	    adaptor.addChild(root_0, char_literal175_tree);
            	    }
            	    fieldName=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_expression3133); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    fieldName_tree = (Object)adaptor.create(fieldName);
            	    adaptor.addChild(root_0, fieldName_tree);
            	    }
            	    if ( state.backtracking==0 ) {

            	      				retval.expr = new FieldRef(retval.expr, (fieldName!=null?fieldName.getText():null), MemberRefStyle.Dot);
            	      			
            	    }

            	    }
            	    break;
            	case 4 :
            	    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:914:4: refStyle= ( ':' ':' | '-' '>' | '.' ) fc2= functionCall
            	    {
            	    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:914:13: ( ':' ':' | '-' '>' | '.' )
            	    int alt85=3;
            	    switch ( input.LA(1) ) {
            	    case 34:
            	        {
            	        alt85=1;
            	        }
            	        break;
            	    case 44:
            	        {
            	        alt85=2;
            	        }
            	        break;
            	    case 91:
            	        {
            	        alt85=3;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return retval;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 85, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt85) {
            	        case 1 :
            	            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:914:14: ':' ':'
            	            {
            	            char_literal176=(Token)match(input,34,FOLLOW_34_in_expression3145); if (state.failed) return retval;
            	            if ( state.backtracking==0 ) {
            	            char_literal176_tree = (Object)adaptor.create(char_literal176);
            	            adaptor.addChild(root_0, char_literal176_tree);
            	            }
            	            char_literal177=(Token)match(input,34,FOLLOW_34_in_expression3147); if (state.failed) return retval;
            	            if ( state.backtracking==0 ) {
            	            char_literal177_tree = (Object)adaptor.create(char_literal177);
            	            adaptor.addChild(root_0, char_literal177_tree);
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:914:24: '-' '>'
            	            {
            	            char_literal178=(Token)match(input,44,FOLLOW_44_in_expression3151); if (state.failed) return retval;
            	            if ( state.backtracking==0 ) {
            	            char_literal178_tree = (Object)adaptor.create(char_literal178);
            	            adaptor.addChild(root_0, char_literal178_tree);
            	            }
            	            char_literal179=(Token)match(input,38,FOLLOW_38_in_expression3153); if (state.failed) return retval;
            	            if ( state.backtracking==0 ) {
            	            char_literal179_tree = (Object)adaptor.create(char_literal179);
            	            adaptor.addChild(root_0, char_literal179_tree);
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:914:34: '.'
            	            {
            	            char_literal180=(Token)match(input,91,FOLLOW_91_in_expression3157); if (state.failed) return retval;
            	            if ( state.backtracking==0 ) {
            	            char_literal180_tree = (Object)adaptor.create(char_literal180);
            	            adaptor.addChild(root_0, char_literal180_tree);
            	            }

            	            }
            	            break;

            	    }

            	    pushFollow(FOLLOW_functionCall_in_expression3162);
            	    fc2=functionCall();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, fc2.getTree());
            	    if ( state.backtracking==0 ) {

            	      				if ((fc2!=null?fc2.expr:null) != null) {
            	      					(fc2!=null?fc2.expr:null).setTarget(retval.expr);
            	      					(fc2!=null?fc2.expr:null).setMemberRefStyle(parseMemberRefStyle((refStyle!=null?refStyle.getText():null)));
            	      					retval.expr = (fc2!=null?fc2.expr:null);
            	      				}
            	      			
            	    }

            	    }
            	    break;
            	case 5 :
            	    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:921:4: '?' xif= expression ':' xelse= expression
            	    {
            	    char_literal181=(Token)match(input,92,FOLLOW_92_in_expression3171); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal181_tree = (Object)adaptor.create(char_literal181);
            	    adaptor.addChild(root_0, char_literal181_tree);
            	    }
            	    pushFollow(FOLLOW_expression_in_expression3175);
            	    xif=expression();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, xif.getTree());
            	    char_literal182=(Token)match(input,34,FOLLOW_34_in_expression3177); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal182_tree = (Object)adaptor.create(char_literal182);
            	    adaptor.addChild(root_0, char_literal182_tree);
            	    }
            	    pushFollow(FOLLOW_expression_in_expression3181);
            	    xelse=expression();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, xelse.getTree());
            	    if ( state.backtracking==0 ) {

            	      				//TODO
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop86;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "expression"

    public static class statementsBlock_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "statementsBlock"
    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:928:1: statementsBlock : '{' ( statement )* '}' ;
    public final ObjCppParser.statementsBlock_return statementsBlock() throws RecognitionException {
        ObjCppParser.statementsBlock_return retval = new ObjCppParser.statementsBlock_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        Token char_literal183=null;
        Token char_literal185=null;
        ObjCppParser.statement_return statement184 = null;


        Object char_literal183_tree=null;
        Object char_literal185_tree=null;

        try {
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:929:2: ( '{' ( statement )* '}' )
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:929:4: '{' ( statement )* '}'
            {
            root_0 = (Object)adaptor.nil();

            char_literal183=(Token)match(input,24,FOLLOW_24_in_statementsBlock3202); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal183_tree = (Object)adaptor.create(char_literal183);
            adaptor.addChild(root_0, char_literal183_tree);
            }
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:929:8: ( statement )*
            loop87:
            do {
                int alt87=2;
                alt87 = dfa87.predict(input);
                switch (alt87) {
            	case 1 :
            	    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:0:0: statement
            	    {
            	    pushFollow(FOLLOW_statement_in_statementsBlock3204);
            	    statement184=statement();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, statement184.getTree());

            	    }
            	    break;

            	default :
            	    break loop87;
                }
            } while (true);

            char_literal185=(Token)match(input,25,FOLLOW_25_in_statementsBlock3207); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal185_tree = (Object)adaptor.create(char_literal185);
            adaptor.addChild(root_0, char_literal185_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "statementsBlock"

    public static class statement_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "statement"
    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:931:1: statement : ( statementsBlock | declaration | expression ( '=' expression )? ';' | 'return' expression ';' | 'if' '(' expression ')' statement ( 'else' statement )? | 'while' '(' expression ')' statement | 'do' statement 'while' '(' expression ')' ';' | 'for' '(' ( statement )? ';' ( expression )? ';' ( statement )? ')' statement | 'switch' '(' expression ')' '{' ( 'case' expression ':' | statement )* '}' | ';' | IDENTIFIER {...}? '(' varDecl ':' expression ')' statement );
    public final ObjCppParser.statement_return statement() throws RecognitionException {
        ObjCppParser.statement_return retval = new ObjCppParser.statement_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        Token char_literal189=null;
        Token char_literal191=null;
        Token string_literal192=null;
        Token char_literal194=null;
        Token string_literal195=null;
        Token char_literal196=null;
        Token char_literal198=null;
        Token string_literal200=null;
        Token string_literal202=null;
        Token char_literal203=null;
        Token char_literal205=null;
        Token string_literal207=null;
        Token string_literal209=null;
        Token char_literal210=null;
        Token char_literal212=null;
        Token char_literal213=null;
        Token string_literal214=null;
        Token char_literal215=null;
        Token char_literal217=null;
        Token char_literal219=null;
        Token char_literal221=null;
        Token string_literal223=null;
        Token char_literal224=null;
        Token char_literal226=null;
        Token char_literal227=null;
        Token string_literal228=null;
        Token char_literal230=null;
        Token char_literal232=null;
        Token char_literal233=null;
        Token IDENTIFIER234=null;
        Token char_literal235=null;
        Token char_literal237=null;
        Token char_literal239=null;
        ObjCppParser.statementsBlock_return statementsBlock186 = null;

        ObjCppParser.declaration_return declaration187 = null;

        ObjCppParser.expression_return expression188 = null;

        ObjCppParser.expression_return expression190 = null;

        ObjCppParser.expression_return expression193 = null;

        ObjCppParser.expression_return expression197 = null;

        ObjCppParser.statement_return statement199 = null;

        ObjCppParser.statement_return statement201 = null;

        ObjCppParser.expression_return expression204 = null;

        ObjCppParser.statement_return statement206 = null;

        ObjCppParser.statement_return statement208 = null;

        ObjCppParser.expression_return expression211 = null;

        ObjCppParser.statement_return statement216 = null;

        ObjCppParser.expression_return expression218 = null;

        ObjCppParser.statement_return statement220 = null;

        ObjCppParser.statement_return statement222 = null;

        ObjCppParser.expression_return expression225 = null;

        ObjCppParser.expression_return expression229 = null;

        ObjCppParser.statement_return statement231 = null;

        ObjCppParser.varDecl_return varDecl236 = null;

        ObjCppParser.expression_return expression238 = null;

        ObjCppParser.statement_return statement240 = null;


        Object char_literal189_tree=null;
        Object char_literal191_tree=null;
        Object string_literal192_tree=null;
        Object char_literal194_tree=null;
        Object string_literal195_tree=null;
        Object char_literal196_tree=null;
        Object char_literal198_tree=null;
        Object string_literal200_tree=null;
        Object string_literal202_tree=null;
        Object char_literal203_tree=null;
        Object char_literal205_tree=null;
        Object string_literal207_tree=null;
        Object string_literal209_tree=null;
        Object char_literal210_tree=null;
        Object char_literal212_tree=null;
        Object char_literal213_tree=null;
        Object string_literal214_tree=null;
        Object char_literal215_tree=null;
        Object char_literal217_tree=null;
        Object char_literal219_tree=null;
        Object char_literal221_tree=null;
        Object string_literal223_tree=null;
        Object char_literal224_tree=null;
        Object char_literal226_tree=null;
        Object char_literal227_tree=null;
        Object string_literal228_tree=null;
        Object char_literal230_tree=null;
        Object char_literal232_tree=null;
        Object char_literal233_tree=null;
        Object IDENTIFIER234_tree=null;
        Object char_literal235_tree=null;
        Object char_literal237_tree=null;
        Object char_literal239_tree=null;

        try {
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:932:2: ( statementsBlock | declaration | expression ( '=' expression )? ';' | 'return' expression ';' | 'if' '(' expression ')' statement ( 'else' statement )? | 'while' '(' expression ')' statement | 'do' statement 'while' '(' expression ')' ';' | 'for' '(' ( statement )? ';' ( expression )? ';' ( statement )? ')' statement | 'switch' '(' expression ')' '{' ( 'case' expression ':' | statement )* '}' | ';' | IDENTIFIER {...}? '(' varDecl ':' expression ')' statement )
            int alt94=11;
            alt94 = dfa94.predict(input);
            switch (alt94) {
                case 1 :
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:933:3: statementsBlock
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_statementsBlock_in_statement3220);
                    statementsBlock186=statementsBlock();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, statementsBlock186.getTree());

                    }
                    break;
                case 2 :
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:934:3: declaration
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_declaration_in_statement3226);
                    declaration187=declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, declaration187.getTree());

                    }
                    break;
                case 3 :
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:935:3: expression ( '=' expression )? ';'
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_expression_in_statement3232);
                    expression188=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression188.getTree());
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:935:14: ( '=' expression )?
                    int alt88=2;
                    int LA88_0 = input.LA(1);

                    if ( (LA88_0==30) ) {
                        alt88=1;
                    }
                    switch (alt88) {
                        case 1 :
                            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:935:15: '=' expression
                            {
                            char_literal189=(Token)match(input,30,FOLLOW_30_in_statement3235); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            char_literal189_tree = (Object)adaptor.create(char_literal189);
                            adaptor.addChild(root_0, char_literal189_tree);
                            }
                            pushFollow(FOLLOW_expression_in_statement3237);
                            expression190=expression();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression190.getTree());

                            }
                            break;

                    }

                    char_literal191=(Token)match(input,29,FOLLOW_29_in_statement3242); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal191_tree = (Object)adaptor.create(char_literal191);
                    adaptor.addChild(root_0, char_literal191_tree);
                    }

                    }
                    break;
                case 4 :
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:936:3: 'return' expression ';'
                    {
                    root_0 = (Object)adaptor.nil();

                    string_literal192=(Token)match(input,93,FOLLOW_93_in_statement3248); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal192_tree = (Object)adaptor.create(string_literal192);
                    adaptor.addChild(root_0, string_literal192_tree);
                    }
                    pushFollow(FOLLOW_expression_in_statement3250);
                    expression193=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression193.getTree());
                    char_literal194=(Token)match(input,29,FOLLOW_29_in_statement3252); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal194_tree = (Object)adaptor.create(char_literal194);
                    adaptor.addChild(root_0, char_literal194_tree);
                    }

                    }
                    break;
                case 5 :
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:937:3: 'if' '(' expression ')' statement ( 'else' statement )?
                    {
                    root_0 = (Object)adaptor.nil();

                    string_literal195=(Token)match(input,94,FOLLOW_94_in_statement3258); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal195_tree = (Object)adaptor.create(string_literal195);
                    adaptor.addChild(root_0, string_literal195_tree);
                    }
                    char_literal196=(Token)match(input,35,FOLLOW_35_in_statement3260); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal196_tree = (Object)adaptor.create(char_literal196);
                    adaptor.addChild(root_0, char_literal196_tree);
                    }
                    pushFollow(FOLLOW_expression_in_statement3262);
                    expression197=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression197.getTree());
                    char_literal198=(Token)match(input,36,FOLLOW_36_in_statement3264); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal198_tree = (Object)adaptor.create(char_literal198);
                    adaptor.addChild(root_0, char_literal198_tree);
                    }
                    pushFollow(FOLLOW_statement_in_statement3266);
                    statement199=statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, statement199.getTree());
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:937:37: ( 'else' statement )?
                    int alt89=2;
                    alt89 = dfa89.predict(input);
                    switch (alt89) {
                        case 1 :
                            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:937:38: 'else' statement
                            {
                            string_literal200=(Token)match(input,95,FOLLOW_95_in_statement3269); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            string_literal200_tree = (Object)adaptor.create(string_literal200);
                            adaptor.addChild(root_0, string_literal200_tree);
                            }
                            pushFollow(FOLLOW_statement_in_statement3271);
                            statement201=statement();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, statement201.getTree());

                            }
                            break;

                    }


                    }
                    break;
                case 6 :
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:938:3: 'while' '(' expression ')' statement
                    {
                    root_0 = (Object)adaptor.nil();

                    string_literal202=(Token)match(input,96,FOLLOW_96_in_statement3279); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal202_tree = (Object)adaptor.create(string_literal202);
                    adaptor.addChild(root_0, string_literal202_tree);
                    }
                    char_literal203=(Token)match(input,35,FOLLOW_35_in_statement3281); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal203_tree = (Object)adaptor.create(char_literal203);
                    adaptor.addChild(root_0, char_literal203_tree);
                    }
                    pushFollow(FOLLOW_expression_in_statement3283);
                    expression204=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression204.getTree());
                    char_literal205=(Token)match(input,36,FOLLOW_36_in_statement3285); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal205_tree = (Object)adaptor.create(char_literal205);
                    adaptor.addChild(root_0, char_literal205_tree);
                    }
                    pushFollow(FOLLOW_statement_in_statement3287);
                    statement206=statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, statement206.getTree());

                    }
                    break;
                case 7 :
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:939:3: 'do' statement 'while' '(' expression ')' ';'
                    {
                    root_0 = (Object)adaptor.nil();

                    string_literal207=(Token)match(input,97,FOLLOW_97_in_statement3293); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal207_tree = (Object)adaptor.create(string_literal207);
                    adaptor.addChild(root_0, string_literal207_tree);
                    }
                    pushFollow(FOLLOW_statement_in_statement3295);
                    statement208=statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, statement208.getTree());
                    string_literal209=(Token)match(input,96,FOLLOW_96_in_statement3297); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal209_tree = (Object)adaptor.create(string_literal209);
                    adaptor.addChild(root_0, string_literal209_tree);
                    }
                    char_literal210=(Token)match(input,35,FOLLOW_35_in_statement3299); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal210_tree = (Object)adaptor.create(char_literal210);
                    adaptor.addChild(root_0, char_literal210_tree);
                    }
                    pushFollow(FOLLOW_expression_in_statement3301);
                    expression211=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression211.getTree());
                    char_literal212=(Token)match(input,36,FOLLOW_36_in_statement3303); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal212_tree = (Object)adaptor.create(char_literal212);
                    adaptor.addChild(root_0, char_literal212_tree);
                    }
                    char_literal213=(Token)match(input,29,FOLLOW_29_in_statement3305); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal213_tree = (Object)adaptor.create(char_literal213);
                    adaptor.addChild(root_0, char_literal213_tree);
                    }

                    }
                    break;
                case 8 :
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:940:3: 'for' '(' ( statement )? ';' ( expression )? ';' ( statement )? ')' statement
                    {
                    root_0 = (Object)adaptor.nil();

                    string_literal214=(Token)match(input,98,FOLLOW_98_in_statement3311); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal214_tree = (Object)adaptor.create(string_literal214);
                    adaptor.addChild(root_0, string_literal214_tree);
                    }
                    char_literal215=(Token)match(input,35,FOLLOW_35_in_statement3313); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal215_tree = (Object)adaptor.create(char_literal215);
                    adaptor.addChild(root_0, char_literal215_tree);
                    }
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:940:13: ( statement )?
                    int alt90=2;
                    alt90 = dfa90.predict(input);
                    switch (alt90) {
                        case 1 :
                            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:0:0: statement
                            {
                            pushFollow(FOLLOW_statement_in_statement3315);
                            statement216=statement();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, statement216.getTree());

                            }
                            break;

                    }

                    char_literal217=(Token)match(input,29,FOLLOW_29_in_statement3318); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal217_tree = (Object)adaptor.create(char_literal217);
                    adaptor.addChild(root_0, char_literal217_tree);
                    }
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:940:28: ( expression )?
                    int alt91=2;
                    alt91 = dfa91.predict(input);
                    switch (alt91) {
                        case 1 :
                            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:0:0: expression
                            {
                            pushFollow(FOLLOW_expression_in_statement3320);
                            expression218=expression();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression218.getTree());

                            }
                            break;

                    }

                    char_literal219=(Token)match(input,29,FOLLOW_29_in_statement3323); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal219_tree = (Object)adaptor.create(char_literal219);
                    adaptor.addChild(root_0, char_literal219_tree);
                    }
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:940:44: ( statement )?
                    int alt92=2;
                    alt92 = dfa92.predict(input);
                    switch (alt92) {
                        case 1 :
                            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:0:0: statement
                            {
                            pushFollow(FOLLOW_statement_in_statement3325);
                            statement220=statement();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, statement220.getTree());

                            }
                            break;

                    }

                    char_literal221=(Token)match(input,36,FOLLOW_36_in_statement3328); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal221_tree = (Object)adaptor.create(char_literal221);
                    adaptor.addChild(root_0, char_literal221_tree);
                    }
                    pushFollow(FOLLOW_statement_in_statement3330);
                    statement222=statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, statement222.getTree());

                    }
                    break;
                case 9 :
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:941:3: 'switch' '(' expression ')' '{' ( 'case' expression ':' | statement )* '}'
                    {
                    root_0 = (Object)adaptor.nil();

                    string_literal223=(Token)match(input,99,FOLLOW_99_in_statement3336); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal223_tree = (Object)adaptor.create(string_literal223);
                    adaptor.addChild(root_0, string_literal223_tree);
                    }
                    char_literal224=(Token)match(input,35,FOLLOW_35_in_statement3338); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal224_tree = (Object)adaptor.create(char_literal224);
                    adaptor.addChild(root_0, char_literal224_tree);
                    }
                    pushFollow(FOLLOW_expression_in_statement3340);
                    expression225=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression225.getTree());
                    char_literal226=(Token)match(input,36,FOLLOW_36_in_statement3342); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal226_tree = (Object)adaptor.create(char_literal226);
                    adaptor.addChild(root_0, char_literal226_tree);
                    }
                    char_literal227=(Token)match(input,24,FOLLOW_24_in_statement3344); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal227_tree = (Object)adaptor.create(char_literal227);
                    adaptor.addChild(root_0, char_literal227_tree);
                    }
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:942:3: ( 'case' expression ':' | statement )*
                    loop93:
                    do {
                        int alt93=3;
                        alt93 = dfa93.predict(input);
                        switch (alt93) {
                    	case 1 :
                    	    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:942:5: 'case' expression ':'
                    	    {
                    	    string_literal228=(Token)match(input,100,FOLLOW_100_in_statement3350); if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) {
                    	    string_literal228_tree = (Object)adaptor.create(string_literal228);
                    	    adaptor.addChild(root_0, string_literal228_tree);
                    	    }
                    	    pushFollow(FOLLOW_expression_in_statement3352);
                    	    expression229=expression();

                    	    state._fsp--;
                    	    if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression229.getTree());
                    	    char_literal230=(Token)match(input,34,FOLLOW_34_in_statement3354); if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) {
                    	    char_literal230_tree = (Object)adaptor.create(char_literal230);
                    	    adaptor.addChild(root_0, char_literal230_tree);
                    	    }

                    	    }
                    	    break;
                    	case 2 :
                    	    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:943:4: statement
                    	    {
                    	    pushFollow(FOLLOW_statement_in_statement3361);
                    	    statement231=statement();

                    	    state._fsp--;
                    	    if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) adaptor.addChild(root_0, statement231.getTree());

                    	    }
                    	    break;

                    	default :
                    	    break loop93;
                        }
                    } while (true);

                    char_literal232=(Token)match(input,25,FOLLOW_25_in_statement3370); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal232_tree = (Object)adaptor.create(char_literal232);
                    adaptor.addChild(root_0, char_literal232_tree);
                    }

                    }
                    break;
                case 10 :
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:946:3: ';'
                    {
                    root_0 = (Object)adaptor.nil();

                    char_literal233=(Token)match(input,29,FOLLOW_29_in_statement3376); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal233_tree = (Object)adaptor.create(char_literal233);
                    adaptor.addChild(root_0, char_literal233_tree);
                    }

                    }
                    break;
                case 11 :
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:947:3: IDENTIFIER {...}? '(' varDecl ':' expression ')' statement
                    {
                    root_0 = (Object)adaptor.nil();

                    IDENTIFIER234=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_statement3382); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    IDENTIFIER234_tree = (Object)adaptor.create(IDENTIFIER234);
                    adaptor.addChild(root_0, IDENTIFIER234_tree);
                    }
                    if ( !(( (IDENTIFIER234!=null?IDENTIFIER234.getText():null).equals("foreach") )) ) {
                        if (state.backtracking>0) {state.failed=true; return retval;}
                        throw new FailedPredicateException(input, "statement", " $IDENTIFIER.text.equals(\"foreach\") ");
                    }
                    char_literal235=(Token)match(input,35,FOLLOW_35_in_statement3386); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal235_tree = (Object)adaptor.create(char_literal235);
                    adaptor.addChild(root_0, char_literal235_tree);
                    }
                    pushFollow(FOLLOW_varDecl_in_statement3388);
                    varDecl236=varDecl();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, varDecl236.getTree());
                    char_literal237=(Token)match(input,34,FOLLOW_34_in_statement3390); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal237_tree = (Object)adaptor.create(char_literal237);
                    adaptor.addChild(root_0, char_literal237_tree);
                    }
                    pushFollow(FOLLOW_expression_in_statement3392);
                    expression238=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression238.getTree());
                    char_literal239=(Token)match(input,36,FOLLOW_36_in_statement3394); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal239_tree = (Object)adaptor.create(char_literal239);
                    adaptor.addChild(root_0, char_literal239_tree);
                    }
                    pushFollow(FOLLOW_statement_in_statement3396);
                    statement240=statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, statement240.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "statement"

    public static class constant_return extends ParserRuleReturnScope {
        public Constant constant;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "constant"
    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:950:1: constant returns [Constant constant] : ( DECIMAL_NUMBER | HEXADECIMAL_NUMBER | OCTAL_NUMBER | CHARACTER | FLOAT_NUMBER | CHARACTER | STRING );
    public final ObjCppParser.constant_return constant() throws RecognitionException {
        ObjCppParser.constant_return retval = new ObjCppParser.constant_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        Token DECIMAL_NUMBER241=null;
        Token HEXADECIMAL_NUMBER242=null;
        Token OCTAL_NUMBER243=null;
        Token CHARACTER244=null;
        Token FLOAT_NUMBER245=null;
        Token CHARACTER246=null;
        Token STRING247=null;

        Object DECIMAL_NUMBER241_tree=null;
        Object HEXADECIMAL_NUMBER242_tree=null;
        Object OCTAL_NUMBER243_tree=null;
        Object CHARACTER244_tree=null;
        Object FLOAT_NUMBER245_tree=null;
        Object CHARACTER246_tree=null;
        Object STRING247_tree=null;

        try {
            // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:951:2: ( DECIMAL_NUMBER | HEXADECIMAL_NUMBER | OCTAL_NUMBER | CHARACTER | FLOAT_NUMBER | CHARACTER | STRING )
            int alt95=7;
            alt95 = dfa95.predict(input);
            switch (alt95) {
                case 1 :
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:951:4: DECIMAL_NUMBER
                    {
                    root_0 = (Object)adaptor.nil();

                    DECIMAL_NUMBER241=(Token)match(input,DECIMAL_NUMBER,FOLLOW_DECIMAL_NUMBER_in_constant3412); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    DECIMAL_NUMBER241_tree = (Object)adaptor.create(DECIMAL_NUMBER241);
                    adaptor.addChild(root_0, DECIMAL_NUMBER241_tree);
                    }
                    if ( state.backtracking==0 ) {
                       retval.constant =  Constant.parseDecimal((DECIMAL_NUMBER241!=null?DECIMAL_NUMBER241.getText():null)); 
                    }

                    }
                    break;
                case 2 :
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:952:3: HEXADECIMAL_NUMBER
                    {
                    root_0 = (Object)adaptor.nil();

                    HEXADECIMAL_NUMBER242=(Token)match(input,HEXADECIMAL_NUMBER,FOLLOW_HEXADECIMAL_NUMBER_in_constant3420); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    HEXADECIMAL_NUMBER242_tree = (Object)adaptor.create(HEXADECIMAL_NUMBER242);
                    adaptor.addChild(root_0, HEXADECIMAL_NUMBER242_tree);
                    }
                    if ( state.backtracking==0 ) {
                       retval.constant = Constant.parseHex((HEXADECIMAL_NUMBER242!=null?HEXADECIMAL_NUMBER242.getText():null)); 
                    }

                    }
                    break;
                case 3 :
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:953:3: OCTAL_NUMBER
                    {
                    root_0 = (Object)adaptor.nil();

                    OCTAL_NUMBER243=(Token)match(input,OCTAL_NUMBER,FOLLOW_OCTAL_NUMBER_in_constant3428); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    OCTAL_NUMBER243_tree = (Object)adaptor.create(OCTAL_NUMBER243);
                    adaptor.addChild(root_0, OCTAL_NUMBER243_tree);
                    }
                    if ( state.backtracking==0 ) {
                       retval.constant = Constant.parseOctal((OCTAL_NUMBER243!=null?OCTAL_NUMBER243.getText():null)); 
                    }

                    }
                    break;
                case 4 :
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:954:3: CHARACTER
                    {
                    root_0 = (Object)adaptor.nil();

                    CHARACTER244=(Token)match(input,CHARACTER,FOLLOW_CHARACTER_in_constant3436); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    CHARACTER244_tree = (Object)adaptor.create(CHARACTER244);
                    adaptor.addChild(root_0, CHARACTER244_tree);
                    }
                    if ( state.backtracking==0 ) {
                       retval.constant =  Constant.parseCharOrStringInteger((CHARACTER244!=null?CHARACTER244.getText():null)); 
                    }

                    }
                    break;
                case 5 :
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:955:3: FLOAT_NUMBER
                    {
                    root_0 = (Object)adaptor.nil();

                    FLOAT_NUMBER245=(Token)match(input,FLOAT_NUMBER,FOLLOW_FLOAT_NUMBER_in_constant3444); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    FLOAT_NUMBER245_tree = (Object)adaptor.create(FLOAT_NUMBER245);
                    adaptor.addChild(root_0, FLOAT_NUMBER245_tree);
                    }
                    if ( state.backtracking==0 ) {
                       retval.constant = Constant.parseFloat((FLOAT_NUMBER245!=null?FLOAT_NUMBER245.getText():null)); 
                    }

                    }
                    break;
                case 6 :
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:956:3: CHARACTER
                    {
                    root_0 = (Object)adaptor.nil();

                    CHARACTER246=(Token)match(input,CHARACTER,FOLLOW_CHARACTER_in_constant3452); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    CHARACTER246_tree = (Object)adaptor.create(CHARACTER246);
                    adaptor.addChild(root_0, CHARACTER246_tree);
                    }
                    if ( state.backtracking==0 ) {
                       retval.constant =  Constant.parseChar((CHARACTER246!=null?CHARACTER246.getText():null)); 
                    }

                    }
                    break;
                case 7 :
                    // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:957:3: STRING
                    {
                    root_0 = (Object)adaptor.nil();

                    STRING247=(Token)match(input,STRING,FOLLOW_STRING_in_constant3460); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    STRING247_tree = (Object)adaptor.create(STRING247);
                    adaptor.addChild(root_0, STRING247_tree);
                    }
                    if ( state.backtracking==0 ) {
                       retval.constant =  Constant.parseString((STRING247!=null?STRING247.getText():null)); 
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "constant"

    // $ANTLR start synpred7_ObjCpp
    public final void synpred7_ObjCpp_fragment() throws RecognitionException {   
        // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:214:5: ( functionDeclaration )
        // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:214:5: functionDeclaration
        {
        pushFollow(FOLLOW_functionDeclaration_in_synpred7_ObjCpp255);
        functionDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred7_ObjCpp

    // $ANTLR start synpred8_ObjCpp
    public final void synpred8_ObjCpp_fragment() throws RecognitionException {   
        // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:217:5: ( varDecl )
        // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:217:5: varDecl
        {
        pushFollow(FOLLOW_varDecl_in_synpred8_ObjCpp265);
        varDecl();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred8_ObjCpp

    // $ANTLR start synpred12_ObjCpp
    public final void synpred12_ObjCpp_fragment() throws RecognitionException {   
        // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:229:5: ( enumDecl )
        // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:229:5: enumDecl
        {
        pushFollow(FOLLOW_enumDecl_in_synpred12_ObjCpp305);
        enumDecl();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred12_ObjCpp

    // $ANTLR start synpred13_ObjCpp
    public final void synpred13_ObjCpp_fragment() throws RecognitionException {   
        // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:232:5: ( structDef )
        // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:232:5: structDef
        {
        pushFollow(FOLLOW_structDef_in_synpred13_ObjCpp315);
        structDef();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred13_ObjCpp

    // $ANTLR start synpred33_ObjCpp
    public final void synpred33_ObjCpp_fragment() throws RecognitionException {   
        // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:388:7: ( varDecl )
        // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:388:7: varDecl
        {
        pushFollow(FOLLOW_varDecl_in_synpred33_ObjCpp909);
        varDecl();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred33_ObjCpp

    // $ANTLR start synpred45_ObjCpp
    public final void synpred45_ObjCpp_fragment() throws RecognitionException {   
        // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:470:4: ( varStoragesWithInit )
        // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:470:4: varStoragesWithInit
        {
        pushFollow(FOLLOW_varStoragesWithInit_in_synpred45_ObjCpp1217);
        varStoragesWithInit();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred45_ObjCpp

    // $ANTLR start synpred48_ObjCpp
    public final void synpred48_ObjCpp_fragment() throws RecognitionException {   
        // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:489:6: ( exportationModifiers )
        // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:489:6: exportationModifiers
        {
        pushFollow(FOLLOW_exportationModifiers_in_synpred48_ObjCpp1273);
        exportationModifiers();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred48_ObjCpp

    // $ANTLR start synpred54_ObjCpp
    public final void synpred54_ObjCpp_fragment() throws RecognitionException {   
        ObjCppParser.typeRef_return returnTypeRef = null;


        // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:517:16: (returnTypeRef= typeRef )
        // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:517:16: returnTypeRef= typeRef
        {
        pushFollow(FOLLOW_typeRef_in_synpred54_ObjCpp1395);
        returnTypeRef=typeRef();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred54_ObjCpp

    // $ANTLR start synpred61_ObjCpp
    public final void synpred61_ObjCpp_fragment() throws RecognitionException {   
        // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:567:4: ( exportationModifier )
        // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:567:4: exportationModifier
        {
        pushFollow(FOLLOW_exportationModifier_in_synpred61_ObjCpp1584);
        exportationModifier();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred61_ObjCpp

    // $ANTLR start synpred69_ObjCpp
    public final void synpred69_ObjCpp_fragment() throws RecognitionException {   
        // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:628:4: ( ( 'const' | '__const' ) )
        // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:628:4: ( 'const' | '__const' )
        {
        if ( (input.LA(1)>=52 && input.LA(1)<=53) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred69_ObjCpp

    // $ANTLR start synpred70_ObjCpp
    public final void synpred70_ObjCpp_fragment() throws RecognitionException {   
        // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:629:4: ( '*' )
        // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:629:4: '*'
        {
        match(input,54,FOLLOW_54_in_synpred70_ObjCpp1785); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred70_ObjCpp

    // $ANTLR start synpred71_ObjCpp
    public final void synpred71_ObjCpp_fragment() throws RecognitionException {   
        // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:630:4: ( '&' )
        // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:630:4: '&'
        {
        match(input,55,FOLLOW_55_in_synpred71_ObjCpp1795); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred71_ObjCpp

    // $ANTLR start synpred72_ObjCpp
    public final void synpred72_ObjCpp_fragment() throws RecognitionException {   
        // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:631:4: ( '^' )
        // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:631:4: '^'
        {
        match(input,56,FOLLOW_56_in_synpred72_ObjCpp1805); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred72_ObjCpp

    // $ANTLR start synpred73_ObjCpp
    public final void synpred73_ObjCpp_fragment() throws RecognitionException {   
        // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:633:3: ( IDENTIFIER )
        // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:633:3: IDENTIFIER
        {
        match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_synpred73_ObjCpp1817); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred73_ObjCpp

    // $ANTLR start synpred75_ObjCpp
    public final void synpred75_ObjCpp_fragment() throws RecognitionException {   
        // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:637:4: ( '[' ( expression )? ']' )
        // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:637:4: '[' ( expression )? ']'
        {
        match(input,57,FOLLOW_57_in_synpred75_ObjCpp1830); if (state.failed) return ;
        // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:637:8: ( expression )?
        int alt114=2;
        alt114 = dfa114.predict(input);
        switch (alt114) {
            case 1 :
                // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:0:0: expression
                {
                pushFollow(FOLLOW_expression_in_synpred75_ObjCpp1832);
                expression();

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }

        match(input,58,FOLLOW_58_in_synpred75_ObjCpp1835); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred75_ObjCpp

    // $ANTLR start synpred76_ObjCpp
    public final void synpred76_ObjCpp_fragment() throws RecognitionException {   
        ObjCppParser.expression_return e1 = null;


        // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:668:18: ( '=' e1= expression )
        // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:668:18: '=' e1= expression
        {
        match(input,30,FOLLOW_30_in_synpred76_ObjCpp1898); if (state.failed) return ;
        pushFollow(FOLLOW_expression_in_synpred76_ObjCpp1902);
        e1=expression();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred76_ObjCpp

    // $ANTLR start synpred77_ObjCpp
    public final void synpred77_ObjCpp_fragment() throws RecognitionException {   
        ObjCppParser.expression_return ex = null;


        // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:672:23: ( '=' ex= expression )
        // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:672:23: '=' ex= expression
        {
        match(input,30,FOLLOW_30_in_synpred77_ObjCpp1924); if (state.failed) return ;
        pushFollow(FOLLOW_expression_in_synpred77_ObjCpp1928);
        ex=expression();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred77_ObjCpp

    // $ANTLR start synpred78_ObjCpp
    public final void synpred78_ObjCpp_fragment() throws RecognitionException {   
        ObjCppParser.varStorage_return vx = null;

        ObjCppParser.expression_return ex = null;


        // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:672:4: ( ',' vx= varStorage ( '=' ex= expression )? )
        // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:672:4: ',' vx= varStorage ( '=' ex= expression )?
        {
        match(input,28,FOLLOW_28_in_synpred78_ObjCpp1917); if (state.failed) return ;
        pushFollow(FOLLOW_varStorage_in_synpred78_ObjCpp1921);
        vx=varStorage();

        state._fsp--;
        if (state.failed) return ;
        // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:672:22: ( '=' ex= expression )?
        int alt115=2;
        int LA115_0 = input.LA(1);

        if ( (LA115_0==30) ) {
            alt115=1;
        }
        switch (alt115) {
            case 1 :
                // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:672:23: '=' ex= expression
                {
                match(input,30,FOLLOW_30_in_synpred78_ObjCpp1924); if (state.failed) return ;
                pushFollow(FOLLOW_expression_in_synpred78_ObjCpp1928);
                ex=expression();

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }


        }
    }
    // $ANTLR end synpred78_ObjCpp

    // $ANTLR start synpred102_ObjCpp
    public final void synpred102_ObjCpp_fragment() throws RecognitionException {   
        // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:767:3: ( structCore )
        // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:767:3: structCore
        {
        pushFollow(FOLLOW_structCore_in_synpred102_ObjCpp2448);
        structCore();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred102_ObjCpp

    // $ANTLR start synpred104_ObjCpp
    public final void synpred104_ObjCpp_fragment() throws RecognitionException {   
        // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:771:4: ( functionSignatureSuffix )
        // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:771:4: functionSignatureSuffix
        {
        pushFollow(FOLLOW_functionSignatureSuffix_in_synpred104_ObjCpp2475);
        functionSignatureSuffix();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred104_ObjCpp

    // $ANTLR start synpred105_ObjCpp
    public final void synpred105_ObjCpp_fragment() throws RecognitionException {   
        // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:784:4: ( typeMutator )
        // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:784:4: typeMutator
        {
        pushFollow(FOLLOW_typeMutator_in_synpred105_ObjCpp2512);
        typeMutator();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred105_ObjCpp

    // $ANTLR start synpred134_ObjCpp
    public final void synpred134_ObjCpp_fragment() throws RecognitionException {   
        ObjCppParser.expression_return par = null;


        // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:888:5: (par= expression ')' )
        // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:888:5: par= expression ')'
        {
        pushFollow(FOLLOW_expression_in_synpred134_ObjCpp2951);
        par=expression();

        state._fsp--;
        if (state.failed) return ;
        match(input,36,FOLLOW_36_in_synpred134_ObjCpp2953); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred134_ObjCpp

    // $ANTLR start synpred155_ObjCpp
    public final void synpred155_ObjCpp_fragment() throws RecognitionException {   
        Token bop=null;
        ObjCppParser.expression_return opd2 = null;


        // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:901:4: (bop= ( '+' | '-' | '*' | '/' | '%' | '<<' | '>>>' | '>>' | '^' | '||' | '|' | '&&' | '&' | '<=' | '>=' | '<' | '>' | '==' | '!=' ) opd2= expression )
        // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:901:4: bop= ( '+' | '-' | '*' | '/' | '%' | '<<' | '>>>' | '>>' | '^' | '||' | '|' | '&&' | '&' | '<=' | '>=' | '<' | '>' | '==' | '!=' ) opd2= expression
        {
        bop=(Token)input.LT(1);
        if ( (input.LA(1)>=37 && input.LA(1)<=38)||(input.LA(1)>=43 && input.LA(1)<=44)||(input.LA(1)>=54 && input.LA(1)<=56)||(input.LA(1)>=79 && input.LA(1)<=90) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }

        pushFollow(FOLLOW_expression_in_synpred155_ObjCpp3107);
        opd2=expression();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred155_ObjCpp

    // $ANTLR start synpred156_ObjCpp
    public final void synpred156_ObjCpp_fragment() throws RecognitionException {   
        ObjCppParser.expression_return val = null;


        // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:908:4: ( '=' val= expression )
        // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:908:4: '=' val= expression
        {
        match(input,30,FOLLOW_30_in_synpred156_ObjCpp3116); if (state.failed) return ;
        pushFollow(FOLLOW_expression_in_synpred156_ObjCpp3120);
        val=expression();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred156_ObjCpp

    // $ANTLR start synpred157_ObjCpp
    public final void synpred157_ObjCpp_fragment() throws RecognitionException {   
        Token fieldName=null;

        // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:911:4: ( '.' fieldName= IDENTIFIER )
        // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:911:4: '.' fieldName= IDENTIFIER
        {
        match(input,91,FOLLOW_91_in_synpred157_ObjCpp3129); if (state.failed) return ;
        fieldName=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_synpred157_ObjCpp3133); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred157_ObjCpp

    // $ANTLR start synpred160_ObjCpp
    public final void synpred160_ObjCpp_fragment() throws RecognitionException {   
        Token refStyle=null;
        ObjCppParser.functionCall_return fc2 = null;


        // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:914:4: (refStyle= ( ':' ':' | '-' '>' | '.' ) fc2= functionCall )
        // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:914:4: refStyle= ( ':' ':' | '-' '>' | '.' ) fc2= functionCall
        {
        // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:914:13: ( ':' ':' | '-' '>' | '.' )
        int alt128=3;
        switch ( input.LA(1) ) {
        case 34:
            {
            alt128=1;
            }
            break;
        case 44:
            {
            alt128=2;
            }
            break;
        case 91:
            {
            alt128=3;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 128, 0, input);

            throw nvae;
        }

        switch (alt128) {
            case 1 :
                // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:914:14: ':' ':'
                {
                match(input,34,FOLLOW_34_in_synpred160_ObjCpp3145); if (state.failed) return ;
                match(input,34,FOLLOW_34_in_synpred160_ObjCpp3147); if (state.failed) return ;

                }
                break;
            case 2 :
                // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:914:24: '-' '>'
                {
                match(input,44,FOLLOW_44_in_synpred160_ObjCpp3151); if (state.failed) return ;
                match(input,38,FOLLOW_38_in_synpred160_ObjCpp3153); if (state.failed) return ;

                }
                break;
            case 3 :
                // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:914:34: '.'
                {
                match(input,91,FOLLOW_91_in_synpred160_ObjCpp3157); if (state.failed) return ;

                }
                break;

        }

        pushFollow(FOLLOW_functionCall_in_synpred160_ObjCpp3162);
        fc2=functionCall();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred160_ObjCpp

    // $ANTLR start synpred161_ObjCpp
    public final void synpred161_ObjCpp_fragment() throws RecognitionException {   
        ObjCppParser.expression_return xif = null;

        ObjCppParser.expression_return xelse = null;


        // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:921:4: ( '?' xif= expression ':' xelse= expression )
        // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:921:4: '?' xif= expression ':' xelse= expression
        {
        match(input,92,FOLLOW_92_in_synpred161_ObjCpp3171); if (state.failed) return ;
        pushFollow(FOLLOW_expression_in_synpred161_ObjCpp3175);
        xif=expression();

        state._fsp--;
        if (state.failed) return ;
        match(input,34,FOLLOW_34_in_synpred161_ObjCpp3177); if (state.failed) return ;
        pushFollow(FOLLOW_expression_in_synpred161_ObjCpp3181);
        xelse=expression();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred161_ObjCpp

    // $ANTLR start synpred163_ObjCpp
    public final void synpred163_ObjCpp_fragment() throws RecognitionException {   
        // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:933:3: ( statementsBlock )
        // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:933:3: statementsBlock
        {
        pushFollow(FOLLOW_statementsBlock_in_synpred163_ObjCpp3220);
        statementsBlock();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred163_ObjCpp

    // $ANTLR start synpred164_ObjCpp
    public final void synpred164_ObjCpp_fragment() throws RecognitionException {   
        // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:934:3: ( declaration )
        // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:934:3: declaration
        {
        pushFollow(FOLLOW_declaration_in_synpred164_ObjCpp3226);
        declaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred164_ObjCpp

    // $ANTLR start synpred166_ObjCpp
    public final void synpred166_ObjCpp_fragment() throws RecognitionException {   
        // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:935:3: ( expression ( '=' expression )? ';' )
        // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:935:3: expression ( '=' expression )? ';'
        {
        pushFollow(FOLLOW_expression_in_synpred166_ObjCpp3232);
        expression();

        state._fsp--;
        if (state.failed) return ;
        // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:935:14: ( '=' expression )?
        int alt129=2;
        int LA129_0 = input.LA(1);

        if ( (LA129_0==30) ) {
            alt129=1;
        }
        switch (alt129) {
            case 1 :
                // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:935:15: '=' expression
                {
                match(input,30,FOLLOW_30_in_synpred166_ObjCpp3235); if (state.failed) return ;
                pushFollow(FOLLOW_expression_in_synpred166_ObjCpp3237);
                expression();

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }

        match(input,29,FOLLOW_29_in_synpred166_ObjCpp3242); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred166_ObjCpp

    // $ANTLR start synpred168_ObjCpp
    public final void synpred168_ObjCpp_fragment() throws RecognitionException {   
        // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:937:38: ( 'else' statement )
        // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:937:38: 'else' statement
        {
        match(input,95,FOLLOW_95_in_synpred168_ObjCpp3269); if (state.failed) return ;
        pushFollow(FOLLOW_statement_in_synpred168_ObjCpp3271);
        statement();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred168_ObjCpp

    // $ANTLR start synpred172_ObjCpp
    public final void synpred172_ObjCpp_fragment() throws RecognitionException {   
        // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:940:13: ( statement )
        // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:940:13: statement
        {
        pushFollow(FOLLOW_statement_in_synpred172_ObjCpp3315);
        statement();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred172_ObjCpp

    // $ANTLR start synpred183_ObjCpp
    public final void synpred183_ObjCpp_fragment() throws RecognitionException {   
        // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:954:3: ( CHARACTER )
        // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:954:3: CHARACTER
        {
        match(input,CHARACTER,FOLLOW_CHARACTER_in_synpred183_ObjCpp3436); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred183_ObjCpp

    // $ANTLR start synpred185_ObjCpp
    public final void synpred185_ObjCpp_fragment() throws RecognitionException {   
        // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:956:3: ( CHARACTER )
        // /Users/ochafik/Prog/Java/resources/com/ochafik/lang/grammar/objcpp/ObjCpp.g:956:3: CHARACTER
        {
        match(input,CHARACTER,FOLLOW_CHARACTER_in_synpred185_ObjCpp3452); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred185_ObjCpp

    // Delegated rules

    public final boolean synpred71_ObjCpp() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred71_ObjCpp_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred78_ObjCpp() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred78_ObjCpp_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred104_ObjCpp() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred104_ObjCpp_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred33_ObjCpp() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred33_ObjCpp_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred160_ObjCpp() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred160_ObjCpp_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred164_ObjCpp() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred164_ObjCpp_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred12_ObjCpp() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred12_ObjCpp_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred105_ObjCpp() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred105_ObjCpp_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred183_ObjCpp() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred183_ObjCpp_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred163_ObjCpp() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred163_ObjCpp_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred156_ObjCpp() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred156_ObjCpp_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred172_ObjCpp() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred172_ObjCpp_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred75_ObjCpp() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred75_ObjCpp_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred13_ObjCpp() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred13_ObjCpp_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred168_ObjCpp() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred168_ObjCpp_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred69_ObjCpp() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred69_ObjCpp_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred61_ObjCpp() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred61_ObjCpp_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred155_ObjCpp() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred155_ObjCpp_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred45_ObjCpp() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred45_ObjCpp_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred73_ObjCpp() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred73_ObjCpp_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred54_ObjCpp() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred54_ObjCpp_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred8_ObjCpp() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred8_ObjCpp_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred166_ObjCpp() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred166_ObjCpp_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred72_ObjCpp() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred72_ObjCpp_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred7_ObjCpp() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred7_ObjCpp_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred48_ObjCpp() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred48_ObjCpp_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred76_ObjCpp() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred76_ObjCpp_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred102_ObjCpp() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred102_ObjCpp_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred161_ObjCpp() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred161_ObjCpp_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred185_ObjCpp() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred185_ObjCpp_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred157_ObjCpp() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred157_ObjCpp_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred70_ObjCpp() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred70_ObjCpp_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred77_ObjCpp() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred77_ObjCpp_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred134_ObjCpp() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred134_ObjCpp_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA1 dfa1 = new DFA1(this);
    protected DFA2 dfa2 = new DFA2(this);
    protected DFA3 dfa3 = new DFA3(this);
    protected DFA4 dfa4 = new DFA4(this);
    protected DFA7 dfa7 = new DFA7(this);
    protected DFA6 dfa6 = new DFA6(this);
    protected DFA5 dfa5 = new DFA5(this);
    protected DFA18 dfa18 = new DFA18(this);
    protected DFA23 dfa23 = new DFA23(this);
    protected DFA22 dfa22 = new DFA22(this);
    protected DFA27 dfa27 = new DFA27(this);
    protected DFA32 dfa32 = new DFA32(this);
    protected DFA36 dfa36 = new DFA36(this);
    protected DFA37 dfa37 = new DFA37(this);
    protected DFA39 dfa39 = new DFA39(this);
    protected DFA42 dfa42 = new DFA42(this);
    protected DFA43 dfa43 = new DFA43(this);
    protected DFA48 dfa48 = new DFA48(this);
    protected DFA49 dfa49 = new DFA49(this);
    protected DFA50 dfa50 = new DFA50(this);
    protected DFA52 dfa52 = new DFA52(this);
    protected DFA51 dfa51 = new DFA51(this);
    protected DFA53 dfa53 = new DFA53(this);
    protected DFA55 dfa55 = new DFA55(this);
    protected DFA54 dfa54 = new DFA54(this);
    protected DFA61 dfa61 = new DFA61(this);
    protected DFA60 dfa60 = new DFA60(this);
    protected DFA66 dfa66 = new DFA66(this);
    protected DFA70 dfa70 = new DFA70(this);
    protected DFA72 dfa72 = new DFA72(this);
    protected DFA71 dfa71 = new DFA71(this);
    protected DFA73 dfa73 = new DFA73(this);
    protected DFA77 dfa77 = new DFA77(this);
    protected DFA76 dfa76 = new DFA76(this);
    protected DFA75 dfa75 = new DFA75(this);
    protected DFA81 dfa81 = new DFA81(this);
    protected DFA84 dfa84 = new DFA84(this);
    protected DFA83 dfa83 = new DFA83(this);
    protected DFA86 dfa86 = new DFA86(this);
    protected DFA87 dfa87 = new DFA87(this);
    protected DFA94 dfa94 = new DFA94(this);
    protected DFA89 dfa89 = new DFA89(this);
    protected DFA90 dfa90 = new DFA90(this);
    protected DFA91 dfa91 = new DFA91(this);
    protected DFA92 dfa92 = new DFA92(this);
    protected DFA93 dfa93 = new DFA93(this);
    protected DFA95 dfa95 = new DFA95(this);
    protected DFA114 dfa114 = new DFA114(this);
    static final String DFA1_eotS =
        "\22\uffff";
    static final String DFA1_eofS =
        "\1\2\21\uffff";
    static final String DFA1_minS =
        "\1\4\21\uffff";
    static final String DFA1_maxS =
        "\1\113\21\uffff";
    static final String DFA1_acceptS =
        "\1\uffff\1\1\1\2\17\uffff";
    static final String DFA1_specialS =
        "\22\uffff}>";
    static final String[] DFA1_transitionS = {
            "\1\2\1\1\2\2\17\uffff\1\2\2\uffff\2\2\3\uffff\3\2\14\uffff\3"+
            "\2\3\uffff\2\2\5\uffff\2\2\1\uffff\16\2",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA1_eot = DFA.unpackEncodedString(DFA1_eotS);
    static final short[] DFA1_eof = DFA.unpackEncodedString(DFA1_eofS);
    static final char[] DFA1_min = DFA.unpackEncodedStringToUnsignedChars(DFA1_minS);
    static final char[] DFA1_max = DFA.unpackEncodedStringToUnsignedChars(DFA1_maxS);
    static final short[] DFA1_accept = DFA.unpackEncodedString(DFA1_acceptS);
    static final short[] DFA1_special = DFA.unpackEncodedString(DFA1_specialS);
    static final short[][] DFA1_transition;

    static {
        int numStates = DFA1_transitionS.length;
        DFA1_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA1_transition[i] = DFA.unpackEncodedString(DFA1_transitionS[i]);
        }
    }

    class DFA1 extends DFA {

        public DFA1(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 1;
            this.eot = DFA1_eot;
            this.eof = DFA1_eof;
            this.min = DFA1_min;
            this.max = DFA1_max;
            this.accept = DFA1_accept;
            this.special = DFA1_special;
            this.transition = DFA1_transition;
        }
        public String getDescription() {
            return "158:3: (unescapedString= STRING )?";
        }
    }
    static final String DFA2_eotS =
        "\21\uffff";
    static final String DFA2_eofS =
        "\1\2\20\uffff";
    static final String DFA2_minS =
        "\1\4\20\uffff";
    static final String DFA2_maxS =
        "\1\113\20\uffff";
    static final String DFA2_acceptS =
        "\1\uffff\1\1\1\2\16\uffff";
    static final String DFA2_specialS =
        "\21\uffff}>";
    static final String[] DFA2_transitionS = {
            "\1\1\1\uffff\2\2\17\uffff\1\2\2\uffff\2\2\3\uffff\3\2\14\uffff"+
            "\3\2\3\uffff\2\2\5\uffff\2\2\1\uffff\16\2",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA2_eot = DFA.unpackEncodedString(DFA2_eotS);
    static final short[] DFA2_eof = DFA.unpackEncodedString(DFA2_eofS);
    static final char[] DFA2_min = DFA.unpackEncodedStringToUnsignedChars(DFA2_minS);
    static final char[] DFA2_max = DFA.unpackEncodedStringToUnsignedChars(DFA2_maxS);
    static final short[] DFA2_accept = DFA.unpackEncodedString(DFA2_acceptS);
    static final short[] DFA2_special = DFA.unpackEncodedString(DFA2_specialS);
    static final short[][] DFA2_transition;

    static {
        int numStates = DFA2_transitionS.length;
        DFA2_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA2_transition[i] = DFA.unpackEncodedString(DFA2_transitionS[i]);
        }
    }

    class DFA2 extends DFA {

        public DFA2(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 2;
            this.eot = DFA2_eot;
            this.eof = DFA2_eof;
            this.min = DFA2_min;
            this.max = DFA2_max;
            this.accept = DFA2_accept;
            this.special = DFA2_special;
            this.transition = DFA2_transition;
        }
        public String getDescription() {
            return "169:8: (depth= DECIMAL_NUMBER )?";
        }
    }
    static final String DFA3_eotS =
        "\20\uffff";
    static final String DFA3_eofS =
        "\1\1\17\uffff";
    static final String DFA3_minS =
        "\1\6\17\uffff";
    static final String DFA3_maxS =
        "\1\113\17\uffff";
    static final String DFA3_acceptS =
        "\1\uffff\1\3\1\1\14\uffff\1\2";
    static final String DFA3_specialS =
        "\20\uffff}>";
    static final String[] DFA3_transitionS = {
            "\2\2\17\uffff\1\17\2\uffff\2\2\3\uffff\3\2\14\uffff\3\2\3\uffff"+
            "\2\2\5\uffff\2\2\1\uffff\16\2",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA3_eot = DFA.unpackEncodedString(DFA3_eotS);
    static final short[] DFA3_eof = DFA.unpackEncodedString(DFA3_eofS);
    static final char[] DFA3_min = DFA.unpackEncodedStringToUnsignedChars(DFA3_minS);
    static final char[] DFA3_max = DFA.unpackEncodedStringToUnsignedChars(DFA3_maxS);
    static final short[] DFA3_accept = DFA.unpackEncodedString(DFA3_acceptS);
    static final short[] DFA3_special = DFA.unpackEncodedString(DFA3_specialS);
    static final short[][] DFA3_transition;

    static {
        int numStates = DFA3_transitionS.length;
        DFA3_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA3_transition[i] = DFA.unpackEncodedString(DFA3_transitionS[i]);
        }
    }

    class DFA3 extends DFA {

        public DFA3(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 3;
            this.eot = DFA3_eot;
            this.eof = DFA3_eof;
            this.min = DFA3_min;
            this.max = DFA3_max;
            this.accept = DFA3_accept;
            this.special = DFA3_special;
            this.transition = DFA3_transition;
        }
        public String getDescription() {
            return "()* loopback of 175:3: ( declaration | lineDirective )*";
        }
    }
    static final String DFA4_eotS =
        "\17\uffff";
    static final String DFA4_eofS =
        "\17\uffff";
    static final String DFA4_minS =
        "\1\6\16\uffff";
    static final String DFA4_maxS =
        "\1\113\16\uffff";
    static final String DFA4_acceptS =
        "\1\uffff\1\2\1\1\14\uffff";
    static final String DFA4_specialS =
        "\17\uffff}>";
    static final String[] DFA4_transitionS = {
            "\2\2\21\uffff\1\1\2\2\3\uffff\3\2\14\uffff\3\2\3\uffff\2\2\5"+
            "\uffff\2\2\1\uffff\16\2",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA4_eot = DFA.unpackEncodedString(DFA4_eotS);
    static final short[] DFA4_eof = DFA.unpackEncodedString(DFA4_eofS);
    static final char[] DFA4_min = DFA.unpackEncodedStringToUnsignedChars(DFA4_minS);
    static final char[] DFA4_max = DFA.unpackEncodedStringToUnsignedChars(DFA4_maxS);
    static final short[] DFA4_accept = DFA.unpackEncodedString(DFA4_acceptS);
    static final short[] DFA4_special = DFA.unpackEncodedString(DFA4_specialS);
    static final short[][] DFA4_transition;

    static {
        int numStates = DFA4_transitionS.length;
        DFA4_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA4_transition[i] = DFA.unpackEncodedString(DFA4_transitionS[i]);
        }
    }

    class DFA4 extends DFA {

        public DFA4(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 4;
            this.eot = DFA4_eot;
            this.eof = DFA4_eof;
            this.min = DFA4_min;
            this.max = DFA4_max;
            this.accept = DFA4_accept;
            this.special = DFA4_special;
            this.transition = DFA4_transition;
        }
        public String getDescription() {
            return "()* loopback of 190:4: (ed= declaration )*";
        }
    }
    static final String DFA7_eotS =
        "\45\uffff";
    static final String DFA7_eofS =
        "\45\uffff";
    static final String DFA7_minS =
        "\1\6\1\5\43\uffff";
    static final String DFA7_maxS =
        "\2\113\43\uffff";
    static final String DFA7_acceptS =
        "\2\uffff\1\2\26\uffff\1\1\13\uffff";
    static final String DFA7_specialS =
        "\45\uffff}>";
    static final String[] DFA7_transitionS = {
            "\1\1\1\2\22\uffff\2\2\3\uffff\3\2\14\uffff\3\2\3\uffff\2\2\5"+
            "\uffff\2\2\1\uffff\16\2",
            "\1\31\2\2\22\uffff\10\2\1\uffff\1\2\1\uffff\1\2\10\uffff\3"+
            "\2\3\uffff\6\2\1\uffff\2\2\1\uffff\16\2",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA7_eot = DFA.unpackEncodedString(DFA7_eotS);
    static final short[] DFA7_eof = DFA.unpackEncodedString(DFA7_eofS);
    static final char[] DFA7_min = DFA.unpackEncodedStringToUnsignedChars(DFA7_minS);
    static final char[] DFA7_max = DFA.unpackEncodedStringToUnsignedChars(DFA7_maxS);
    static final short[] DFA7_accept = DFA.unpackEncodedString(DFA7_acceptS);
    static final short[] DFA7_special = DFA.unpackEncodedString(DFA7_specialS);
    static final short[][] DFA7_transition;

    static {
        int numStates = DFA7_transitionS.length;
        DFA7_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA7_transition[i] = DFA.unpackEncodedString(DFA7_transitionS[i]);
        }
    }

    class DFA7 extends DFA {

        public DFA7(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 7;
            this.eot = DFA7_eot;
            this.eof = DFA7_eof;
            this.min = DFA7_min;
            this.max = DFA7_max;
            this.accept = DFA7_accept;
            this.special = DFA7_special;
            this.transition = DFA7_transition;
        }
        public String getDescription() {
            return "205:3: ( externDeclarations | exportationModifiers ( functionDeclaration | varDecl | objCClassDef | typeDef | forwardClassDecl | enumDecl | structDef | 'namespace' ns= IDENTIFIER '{' (subD= declaration )* '}' ) )";
        }
    }
    static final String DFA6_eotS =
        "\u0248\uffff";
    static final String DFA6_eofS =
        "\u0248\uffff";
    static final String DFA6_minS =
        "\12\6\4\uffff\12\6\1\30\25\6\1\4\1\6\4\uffff\10\6\1\uffff\1\6\1"+
        "\4\3\uffff\4\6\1\uffff\1\6\1\4\3\uffff\4\6\1\uffff\1\6\1\4\3\uffff"+
        "\1\6\44\0\4\uffff\10\0\4\uffff\6\0\4\uffff\5\0\1\uffff\1\0\3\uffff"+
        "\44\0\4\uffff\10\0\1\uffff\2\0\3\uffff\4\0\1\uffff\2\0\3\uffff\4"+
        "\0\1\uffff\2\0\3\uffff\71\0\4\uffff\10\0\4\uffff\6\0\4\uffff\5\0"+
        "\1\uffff\1\0\3\uffff\4\0\10\uffff\2\0\3\uffff\3\0\1\uffff\2\0\3"+
        "\uffff\3\0\1\uffff\1\0\22\uffff\6\0\1\uffff\2\0\3\uffff\4\0\1\uffff"+
        "\2\0\3\uffff\4\0\1\uffff\2\0\3\uffff\5\0\1\uffff\2\0\3\uffff\3\0"+
        "\10\uffff\5\0\4\uffff\5\0\12\uffff\1\0\14\uffff\3\0\10\uffff\5\0"+
        "\4\uffff\5\0\12\uffff\1\0\14\uffff\1\0\12\uffff\2\0\10\uffff\5\0"+
        "\4\uffff\5\0\12\uffff\1\0\14\uffff\12\0\2\uffff";
    static final String DFA6_maxS =
        "\2\113\1\30\1\113\1\30\3\113\2\71\4\uffff\1\113\1\30\1\113\1\30"+
        "\3\113\2\71\1\113\1\30\1\6\3\113\2\71\1\43\2\113\1\30\1\113\1\30"+
        "\3\113\2\71\1\66\3\71\1\116\1\71\4\uffff\1\113\1\71\1\113\1\71\1"+
        "\66\3\71\1\uffff\1\71\1\116\3\uffff\1\66\3\71\1\uffff\1\71\1\116"+
        "\3\uffff\1\113\3\71\1\uffff\1\71\1\116\3\uffff\1\113\44\0\4\uffff"+
        "\10\0\4\uffff\6\0\4\uffff\5\0\1\uffff\1\0\3\uffff\44\0\4\uffff\10"+
        "\0\1\uffff\2\0\3\uffff\4\0\1\uffff\2\0\3\uffff\4\0\1\uffff\2\0\3"+
        "\uffff\71\0\4\uffff\10\0\4\uffff\6\0\4\uffff\5\0\1\uffff\1\0\3\uffff"+
        "\4\0\10\uffff\2\0\3\uffff\3\0\1\uffff\2\0\3\uffff\3\0\1\uffff\1"+
        "\0\22\uffff\6\0\1\uffff\2\0\3\uffff\4\0\1\uffff\2\0\3\uffff\4\0"+
        "\1\uffff\2\0\3\uffff\5\0\1\uffff\2\0\3\uffff\3\0\10\uffff\5\0\4"+
        "\uffff\5\0\12\uffff\1\0\14\uffff\3\0\10\uffff\5\0\4\uffff\5\0\12"+
        "\uffff\1\0\14\uffff\1\0\12\uffff\2\0\10\uffff\5\0\4\uffff\5\0\12"+
        "\uffff\1\0\14\uffff\12\0\2\uffff";
    static final String DFA6_acceptS =
        "\12\uffff\1\3\1\4\1\5\1\10\42\uffff\1\2\u0140\uffff\1\1\u00d4\uffff"+
        "\1\7\1\6";
    static final String DFA6_specialS =
        "\127\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1"+
        "\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30"+
        "\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\42\1\43\4\uffff"+
        "\1\44\1\45\1\46\1\47\1\50\1\51\1\52\1\53\4\uffff\1\54\1\55\1\56"+
        "\1\57\1\60\1\61\4\uffff\1\62\1\63\1\64\1\65\1\66\1\uffff\1\67\3"+
        "\uffff\1\70\1\71\1\72\1\73\1\74\1\75\1\76\1\77\1\100\1\101\1\102"+
        "\1\103\1\104\1\105\1\106\1\107\1\110\1\111\1\112\1\113\1\114\1\115"+
        "\1\116\1\117\1\120\1\121\1\122\1\123\1\124\1\125\1\126\1\127\1\130"+
        "\1\131\1\132\1\133\4\uffff\1\134\1\135\1\136\1\137\1\140\1\141\1"+
        "\142\1\143\1\uffff\1\144\1\145\3\uffff\1\146\1\147\1\150\1\151\1"+
        "\uffff\1\152\1\153\3\uffff\1\154\1\155\1\156\1\157\1\uffff\1\160"+
        "\1\161\3\uffff\1\162\1\163\1\164\1\165\1\166\1\167\1\170\1\171\1"+
        "\172\1\173\1\174\1\175\1\176\1\177\1\u0080\1\u0081\1\u0082\1\u0083"+
        "\1\u0084\1\u0085\1\u0086\1\u0087\1\u0088\1\u0089\1\u008a\1\u008b"+
        "\1\u008c\1\u008d\1\u008e\1\u008f\1\u0090\1\u0091\1\u0092\1\u0093"+
        "\1\u0094\1\u0095\1\u0096\1\u0097\1\u0098\1\u0099\1\u009a\1\u009b"+
        "\1\u009c\1\u009d\1\u009e\1\u009f\1\u00a0\1\u00a1\1\u00a2\1\u00a3"+
        "\1\u00a4\1\u00a5\1\u00a6\1\u00a7\1\u00a8\1\u00a9\1\u00aa\4\uffff"+
        "\1\u00ab\1\u00ac\1\u00ad\1\u00ae\1\u00af\1\u00b0\1\u00b1\1\u00b2"+
        "\4\uffff\1\u00b3\1\u00b4\1\u00b5\1\u00b6\1\u00b7\1\u00b8\4\uffff"+
        "\1\u00b9\1\u00ba\1\u00bb\1\u00bc\1\u00bd\1\uffff\1\u00be\3\uffff"+
        "\1\u00bf\1\u00c0\1\u00c1\1\u00c2\10\uffff\1\u00c3\1\u00c4\3\uffff"+
        "\1\u00c5\1\u00c6\1\u00c7\1\uffff\1\u00c8\1\u00c9\3\uffff\1\u00ca"+
        "\1\u00cb\1\u00cc\1\uffff\1\u00cd\22\uffff\1\u00ce\1\u00cf\1\u00d0"+
        "\1\u00d1\1\u00d2\1\u00d3\1\uffff\1\u00d4\1\u00d5\3\uffff\1\u00d6"+
        "\1\u00d7\1\u00d8\1\u00d9\1\uffff\1\u00da\1\u00db\3\uffff\1\u00dc"+
        "\1\u00dd\1\u00de\1\u00df\1\uffff\1\u00e0\1\u00e1\3\uffff\1\u00e2"+
        "\1\u00e3\1\u00e4\1\u00e5\1\u00e6\1\uffff\1\u00e7\1\u00e8\3\uffff"+
        "\1\u00e9\1\u00ea\1\u00eb\10\uffff\1\u00ec\1\u00ed\1\u00ee\1\u00ef"+
        "\1\u00f0\4\uffff\1\u00f1\1\u00f2\1\u00f3\1\u00f4\1\u00f5\12\uffff"+
        "\1\u00f6\14\uffff\1\u00f7\1\u00f8\1\u00f9\10\uffff\1\u00fa\1\u00fb"+
        "\1\u00fc\1\u00fd\1\u00fe\4\uffff\1\u00ff\1\u0100\1\u0101\1\u0102"+
        "\1\u0103\12\uffff\1\u0104\14\uffff\1\u0105\12\uffff\1\u0106\1\u0107"+
        "\10\uffff\1\u0108\1\u0109\1\u010a\1\u010b\1\u010c\4\uffff\1\u010d"+
        "\1\u010e\1\u010f\1\u0110\1\u0111\12\uffff\1\u0112\14\uffff\1\u0113"+
        "\1\u0114\1\u0115\1\u0116\1\u0117\1\u0118\1\u0119\1\u011a\1\u011b"+
        "\1\u011c\2\uffff}>";
    static final String[] DFA6_transitionS = {
            "\1\11\1\7\22\uffff\1\15\1\14\3\uffff\1\2\2\12\14\uffff\2\1\1"+
            "\4\3\uffff\2\3\5\uffff\1\13\1\5\1\uffff\4\6\1\7\11\10",
            "\1\26\1\24\20\uffff\1\27\6\uffff\1\17\16\uffff\2\16\1\21\3"+
            "\uffff\2\20\6\uffff\1\22\1\uffff\4\23\1\24\11\25",
            "\1\30\21\uffff\1\31",
            "\1\36\1\34\46\uffff\2\32\14\uffff\1\32\1\uffff\4\33\1\34\11"+
            "\35",
            "\1\37\21\uffff\1\40",
            "\1\51\1\47\27\uffff\1\42\16\uffff\2\41\1\44\3\uffff\2\43\6"+
            "\uffff\1\45\1\uffff\4\46\1\47\11\50",
            "\1\57\1\64\24\uffff\3\60\4\uffff\1\52\20\uffff\2\53\1\54\1"+
            "\55\1\60\1\56\10\uffff\1\64\11\65",
            "\1\75\1\66\24\uffff\3\60\4\uffff\1\70\20\uffff\2\71\1\72\1"+
            "\73\1\60\1\76\10\uffff\1\66\11\67",
            "\1\107\25\uffff\3\60\4\uffff\1\102\20\uffff\2\103\1\104\1\105"+
            "\1\60\1\110",
            "\1\121\25\uffff\3\60\4\uffff\1\114\1\uffff\1\126\16\uffff\2"+
            "\115\1\116\1\117\1\60\1\122",
            "",
            "",
            "",
            "",
            "\1\127\1\137\20\uffff\1\130\6\uffff\1\132\16\uffff\2\131\1"+
            "\134\3\uffff\2\133\6\uffff\1\135\1\uffff\4\136\1\137\11\140",
            "\1\141\21\uffff\1\142",
            "\1\147\1\145\46\uffff\2\143\14\uffff\1\143\1\uffff\4\144\1"+
            "\145\11\146",
            "\1\150\21\uffff\1\151",
            "\1\162\1\160\27\uffff\1\153\16\uffff\2\152\1\155\3\uffff\2"+
            "\154\6\uffff\1\156\1\uffff\4\157\1\160\11\161",
            "\1\170\1\171\24\uffff\3\60\4\uffff\1\163\20\uffff\2\164\1\165"+
            "\1\166\1\60\1\167\10\uffff\1\171\11\172",
            "\1\u0086\1\177\24\uffff\3\60\4\uffff\1\u0081\20\uffff\2\u0082"+
            "\1\u0083\1\u0084\1\60\1\u0085\10\uffff\1\177\11\u0080",
            "\1\u0090\25\uffff\3\60\4\uffff\1\u008b\20\uffff\2\u008c\1\u008d"+
            "\1\u008e\1\60\1\u008f",
            "\1\u009b\21\uffff\1\u00a0\3\uffff\3\60\4\uffff\1\u0095\1\uffff"+
            "\1\u009f\16\uffff\2\u0096\1\u0097\1\u0098\1\60\1\u0099",
            "\1\u00a4\1\u00ab\21\uffff\1\u00b1\1\u00b0\1\u00af\3\uffff\1"+
            "\u00a6\2\u00ad\14\uffff\2\u00a5\1\u00a8\1\u00a1\1\u00a2\1\u00a3"+
            "\2\u00a7\5\uffff\1\u00ae\1\u00a9\1\uffff\4\u00aa\1\u00ab\11"+
            "\u00ac",
            "\1\u00b2",
            "\1\u00b3",
            "\1\u00bc\1\u00ba\27\uffff\1\u00b5\16\uffff\2\u00b4\1\u00b7"+
            "\3\uffff\2\u00b6\6\uffff\1\u00b8\1\uffff\4\u00b9\1\u00ba\11"+
            "\u00bb",
            "\1\u00c2\1\u00c7\24\uffff\3\60\4\uffff\1\u00bd\20\uffff\2\u00be"+
            "\1\u00bf\1\u00c0\1\60\1\u00c1\10\uffff\1\u00c7\11\u00c8",
            "\1\u00d0\1\u00c9\24\uffff\3\60\4\uffff\1\u00cb\20\uffff\2\u00cc"+
            "\1\u00cd\1\u00ce\1\60\1\u00d1\10\uffff\1\u00c9\11\u00ca",
            "\1\u00da\25\uffff\3\60\4\uffff\1\u00d5\20\uffff\2\u00d6\1\u00d7"+
            "\1\u00d8\1\60\1\u00db",
            "\1\u00e4\25\uffff\3\60\4\uffff\1\u00df\1\uffff\1\u00e9\16\uffff"+
            "\2\u00e0\1\u00e1\1\u00e2\1\60\1\u00e5",
            "\1\u00eb\21\uffff\1\u00ea\12\uffff\1\u00ec",
            "\1\u00f0\1\u00f7\21\uffff\1\u00fd\1\u00fc\1\u00fb\3\uffff\1"+
            "\u00f2\2\u00f9\14\uffff\2\u00f1\1\u00f4\1\u00ed\1\u00ee\1\u00ef"+
            "\2\u00f3\5\uffff\1\u00fa\1\u00f5\1\uffff\4\u00f6\1\u00f7\11"+
            "\u00f8",
            "\1\u00fe\1\u0106\20\uffff\1\u00ff\6\uffff\1\u0101\16\uffff"+
            "\2\u0100\1\u0103\3\uffff\2\u0102\6\uffff\1\u0104\1\uffff\4\u0105"+
            "\1\u0106\11\u0107",
            "\1\u0108\21\uffff\1\u0109",
            "\1\u010e\1\u010c\46\uffff\2\u010a\14\uffff\1\u010a\1\uffff"+
            "\4\u010b\1\u010c\11\u010d",
            "\1\u010f\21\uffff\1\u0110",
            "\1\u0119\1\u0117\27\uffff\1\u0112\16\uffff\2\u0111\1\u0114"+
            "\3\uffff\2\u0113\6\uffff\1\u0115\1\uffff\4\u0116\1\u0117\11"+
            "\u0118",
            "\1\u011f\1\u0120\24\uffff\3\60\4\uffff\1\u011a\20\uffff\2\u011b"+
            "\1\u011c\1\u011d\1\60\1\u011e\10\uffff\1\u0120\11\u0121",
            "\1\u012d\1\u0126\24\uffff\3\60\4\uffff\1\u0128\20\uffff\2\u0129"+
            "\1\u012a\1\u012b\1\60\1\u012c\10\uffff\1\u0126\11\u0127",
            "\1\u0137\25\uffff\3\60\4\uffff\1\u0132\20\uffff\2\u0133\1\u0134"+
            "\1\u0135\1\60\1\u0136",
            "\1\u0142\25\uffff\3\60\4\uffff\1\u013c\1\uffff\1\u0146\16\uffff"+
            "\2\u013d\1\u013e\1\u013f\1\60\1\u0140",
            "\1\u0147\57\uffff\1\u0148",
            "\1\60\25\uffff\3\60\25\uffff\2\60\1\u0149\3\60",
            "\1\u0152\25\uffff\3\60\25\uffff\2\u0157\1\u0158\1\u0159\1\60"+
            "\1\u0153",
            "\1\u015b\25\uffff\3\60\25\uffff\2\u0160\1\u0161\1\u0162\1\60"+
            "\1\u015c",
            "\3\60\1\uffff\4\60\14\uffff\1\60\12\uffff\1\60\25\uffff\1\60"+
            "\1\u0164\21\uffff\3\60",
            "\1\u0171\25\uffff\3\60\4\uffff\1\u0171\25\uffff\1\60",
            "",
            "",
            "",
            "",
            "\1\u017e\1\u0177\24\uffff\3\60\4\uffff\1\u0179\20\uffff\2\u017a"+
            "\1\u017b\1\u017c\1\60\1\u017f\10\uffff\1\u0177\11\u0178",
            "\1\u0188\25\uffff\3\60\4\uffff\1\u0183\20\uffff\2\u0184\1\u0185"+
            "\1\u0186\1\60\1\u0189",
            "\1\u0192\1\u0197\24\uffff\3\60\4\uffff\1\u018d\20\uffff\2\u018e"+
            "\1\u018f\1\u0190\1\60\1\u0193\10\uffff\12\u0197",
            "\1\u019d\25\uffff\3\60\4\uffff\1\u0198\20\uffff\2\u0199\1\u019a"+
            "\1\u019b\1\60\1\u019e",
            "\1\u01a2\57\uffff\1\u01a3",
            "\1\60\25\uffff\3\60\25\uffff\2\60\1\u01a4\3\60",
            "\1\u01ad\25\uffff\3\60\25\uffff\2\u01ae\1\u01af\1\u01b0\1\60"+
            "\1\u01b1",
            "\1\u01b6\25\uffff\3\60\25\uffff\2\u01b7\1\u01b8\1\u01b9\1\60"+
            "\1\u01ba",
            "",
            "\1\u0171\25\uffff\3\60\4\uffff\1\u0171\25\uffff\1\60",
            "\3\60\1\uffff\4\60\14\uffff\1\60\12\uffff\1\60\25\uffff\1\60"+
            "\1\u01c5\21\uffff\3\60",
            "",
            "",
            "",
            "\1\u01d2\57\uffff\1\u01d3",
            "\1\60\25\uffff\3\60\25\uffff\2\60\1\u01d4\3\60",
            "\1\u01dd\25\uffff\3\60\25\uffff\2\u01de\1\u01df\1\u01e0\1\60"+
            "\1\u01e1",
            "\1\u01e6\25\uffff\3\60\25\uffff\2\u01e7\1\u01e8\1\u01e9\1\60"+
            "\1\u01ea",
            "",
            "\1\u0171\25\uffff\3\60\4\uffff\1\u0171\25\uffff\1\60",
            "\3\60\1\uffff\4\60\14\uffff\1\60\12\uffff\1\60\25\uffff\1\60"+
            "\1\u01f5\21\uffff\3\60",
            "",
            "",
            "",
            "\1\u0202\1\u0171\27\uffff\1\u0171\4\uffff\1\u0171\10\uffff"+
            "\4\u0171\3\uffff\2\u0171\1\u020d\5\uffff\1\u0171\1\uffff\16"+
            "\u0171",
            "\1\60\25\uffff\3\60\25\uffff\2\60\1\u020e\3\60",
            "\1\u0217\25\uffff\3\60\25\uffff\2\u0218\1\u0219\1\u021a\1\60"+
            "\1\u021b",
            "\1\u0220\25\uffff\3\60\25\uffff\2\u0221\1\u0222\1\u0223\1\60"+
            "\1\u0224",
            "",
            "\1\u0171\25\uffff\3\60\4\uffff\1\u0171\25\uffff\1\60",
            "\3\60\1\uffff\4\60\14\uffff\1\60\12\uffff\1\60\25\uffff\1\60"+
            "\1\u022f\21\uffff\3\60",
            "",
            "",
            "",
            "\1\u0244\1\u0242\27\uffff\1\u023d\6\uffff\1\u0245\7\uffff\2"+
            "\u023c\1\u023f\3\uffff\2\u023e\6\uffff\1\u0240\1\uffff\4\u0241"+
            "\1\u0242\11\u0243",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };

    static final short[] DFA6_eot = DFA.unpackEncodedString(DFA6_eotS);
    static final short[] DFA6_eof = DFA.unpackEncodedString(DFA6_eofS);
    static final char[] DFA6_min = DFA.unpackEncodedStringToUnsignedChars(DFA6_minS);
    static final char[] DFA6_max = DFA.unpackEncodedStringToUnsignedChars(DFA6_maxS);
    static final short[] DFA6_accept = DFA.unpackEncodedString(DFA6_acceptS);
    static final short[] DFA6_special = DFA.unpackEncodedString(DFA6_specialS);
    static final short[][] DFA6_transition;

    static {
        int numStates = DFA6_transitionS.length;
        DFA6_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA6_transition[i] = DFA.unpackEncodedString(DFA6_transitionS[i]);
        }
    }

    class DFA6 extends DFA {

        public DFA6(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 6;
            this.eot = DFA6_eot;
            this.eof = DFA6_eof;
            this.min = DFA6_min;
            this.max = DFA6_max;
            this.accept = DFA6_accept;
            this.special = DFA6_special;
            this.transition = DFA6_transition;
        }
        public String getDescription() {
            return "212:4: ( functionDeclaration | varDecl | objCClassDef | typeDef | forwardClassDecl | enumDecl | structDef | 'namespace' ns= IDENTIFIER '{' (subD= declaration )* '}' )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA6_87 = input.LA(1);

                         
                        int index6_87 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_87);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA6_88 = input.LA(1);

                         
                        int index6_88 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_88);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA6_89 = input.LA(1);

                         
                        int index6_89 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_89);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA6_90 = input.LA(1);

                         
                        int index6_90 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_90);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA6_91 = input.LA(1);

                         
                        int index6_91 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_91);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA6_92 = input.LA(1);

                         
                        int index6_92 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_92);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA6_93 = input.LA(1);

                         
                        int index6_93 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_93);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA6_94 = input.LA(1);

                         
                        int index6_94 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_94);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA6_95 = input.LA(1);

                         
                        int index6_95 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_95);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA6_96 = input.LA(1);

                         
                        int index6_96 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_96);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA6_97 = input.LA(1);

                         
                        int index6_97 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_97);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA6_98 = input.LA(1);

                         
                        int index6_98 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_98);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA6_99 = input.LA(1);

                         
                        int index6_99 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_99);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA6_100 = input.LA(1);

                         
                        int index6_100 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_100);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA6_101 = input.LA(1);

                         
                        int index6_101 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_101);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA6_102 = input.LA(1);

                         
                        int index6_102 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_102);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA6_103 = input.LA(1);

                         
                        int index6_103 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_103);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA6_104 = input.LA(1);

                         
                        int index6_104 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_104);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA6_105 = input.LA(1);

                         
                        int index6_105 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_105);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA6_106 = input.LA(1);

                         
                        int index6_106 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_106);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA6_107 = input.LA(1);

                         
                        int index6_107 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_107);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA6_108 = input.LA(1);

                         
                        int index6_108 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_108);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA6_109 = input.LA(1);

                         
                        int index6_109 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_109);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA6_110 = input.LA(1);

                         
                        int index6_110 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_110);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA6_111 = input.LA(1);

                         
                        int index6_111 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_111);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA6_112 = input.LA(1);

                         
                        int index6_112 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_112);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA6_113 = input.LA(1);

                         
                        int index6_113 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_113);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA6_114 = input.LA(1);

                         
                        int index6_114 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_114);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA6_115 = input.LA(1);

                         
                        int index6_115 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_115);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA6_116 = input.LA(1);

                         
                        int index6_116 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_116);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA6_117 = input.LA(1);

                         
                        int index6_117 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_117);
                        if ( s>=0 ) return s;
                        break;
                    case 31 : 
                        int LA6_118 = input.LA(1);

                         
                        int index6_118 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_118);
                        if ( s>=0 ) return s;
                        break;
                    case 32 : 
                        int LA6_119 = input.LA(1);

                         
                        int index6_119 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_119);
                        if ( s>=0 ) return s;
                        break;
                    case 33 : 
                        int LA6_120 = input.LA(1);

                         
                        int index6_120 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_120);
                        if ( s>=0 ) return s;
                        break;
                    case 34 : 
                        int LA6_121 = input.LA(1);

                         
                        int index6_121 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_121);
                        if ( s>=0 ) return s;
                        break;
                    case 35 : 
                        int LA6_122 = input.LA(1);

                         
                        int index6_122 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_122);
                        if ( s>=0 ) return s;
                        break;
                    case 36 : 
                        int LA6_127 = input.LA(1);

                         
                        int index6_127 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_127);
                        if ( s>=0 ) return s;
                        break;
                    case 37 : 
                        int LA6_128 = input.LA(1);

                         
                        int index6_128 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_128);
                        if ( s>=0 ) return s;
                        break;
                    case 38 : 
                        int LA6_129 = input.LA(1);

                         
                        int index6_129 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_129);
                        if ( s>=0 ) return s;
                        break;
                    case 39 : 
                        int LA6_130 = input.LA(1);

                         
                        int index6_130 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_130);
                        if ( s>=0 ) return s;
                        break;
                    case 40 : 
                        int LA6_131 = input.LA(1);

                         
                        int index6_131 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_131);
                        if ( s>=0 ) return s;
                        break;
                    case 41 : 
                        int LA6_132 = input.LA(1);

                         
                        int index6_132 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_132);
                        if ( s>=0 ) return s;
                        break;
                    case 42 : 
                        int LA6_133 = input.LA(1);

                         
                        int index6_133 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_133);
                        if ( s>=0 ) return s;
                        break;
                    case 43 : 
                        int LA6_134 = input.LA(1);

                         
                        int index6_134 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_134);
                        if ( s>=0 ) return s;
                        break;
                    case 44 : 
                        int LA6_139 = input.LA(1);

                         
                        int index6_139 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_139);
                        if ( s>=0 ) return s;
                        break;
                    case 45 : 
                        int LA6_140 = input.LA(1);

                         
                        int index6_140 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_140);
                        if ( s>=0 ) return s;
                        break;
                    case 46 : 
                        int LA6_141 = input.LA(1);

                         
                        int index6_141 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_141);
                        if ( s>=0 ) return s;
                        break;
                    case 47 : 
                        int LA6_142 = input.LA(1);

                         
                        int index6_142 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_142);
                        if ( s>=0 ) return s;
                        break;
                    case 48 : 
                        int LA6_143 = input.LA(1);

                         
                        int index6_143 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_143);
                        if ( s>=0 ) return s;
                        break;
                    case 49 : 
                        int LA6_144 = input.LA(1);

                         
                        int index6_144 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_144);
                        if ( s>=0 ) return s;
                        break;
                    case 50 : 
                        int LA6_149 = input.LA(1);

                         
                        int index6_149 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                        else if ( (synpred13_ObjCpp()) ) {s = 582;}

                         
                        input.seek(index6_149);
                        if ( s>=0 ) return s;
                        break;
                    case 51 : 
                        int LA6_150 = input.LA(1);

                         
                        int index6_150 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_150);
                        if ( s>=0 ) return s;
                        break;
                    case 52 : 
                        int LA6_151 = input.LA(1);

                         
                        int index6_151 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_151);
                        if ( s>=0 ) return s;
                        break;
                    case 53 : 
                        int LA6_152 = input.LA(1);

                         
                        int index6_152 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_152);
                        if ( s>=0 ) return s;
                        break;
                    case 54 : 
                        int LA6_153 = input.LA(1);

                         
                        int index6_153 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_153);
                        if ( s>=0 ) return s;
                        break;
                    case 55 : 
                        int LA6_155 = input.LA(1);

                         
                        int index6_155 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                        else if ( (synpred13_ObjCpp()) ) {s = 582;}

                         
                        input.seek(index6_155);
                        if ( s>=0 ) return s;
                        break;
                    case 56 : 
                        int LA6_159 = input.LA(1);

                         
                        int index6_159 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_159);
                        if ( s>=0 ) return s;
                        break;
                    case 57 : 
                        int LA6_160 = input.LA(1);

                         
                        int index6_160 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                        else if ( (synpred13_ObjCpp()) ) {s = 582;}

                         
                        input.seek(index6_160);
                        if ( s>=0 ) return s;
                        break;
                    case 58 : 
                        int LA6_161 = input.LA(1);

                         
                        int index6_161 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                        else if ( (synpred13_ObjCpp()) ) {s = 582;}

                         
                        input.seek(index6_161);
                        if ( s>=0 ) return s;
                        break;
                    case 59 : 
                        int LA6_162 = input.LA(1);

                         
                        int index6_162 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                        else if ( (synpred13_ObjCpp()) ) {s = 582;}

                         
                        input.seek(index6_162);
                        if ( s>=0 ) return s;
                        break;
                    case 60 : 
                        int LA6_163 = input.LA(1);

                         
                        int index6_163 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                        else if ( (synpred13_ObjCpp()) ) {s = 582;}

                         
                        input.seek(index6_163);
                        if ( s>=0 ) return s;
                        break;
                    case 61 : 
                        int LA6_164 = input.LA(1);

                         
                        int index6_164 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                        else if ( (synpred13_ObjCpp()) ) {s = 582;}

                         
                        input.seek(index6_164);
                        if ( s>=0 ) return s;
                        break;
                    case 62 : 
                        int LA6_165 = input.LA(1);

                         
                        int index6_165 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                        else if ( (synpred13_ObjCpp()) ) {s = 582;}

                         
                        input.seek(index6_165);
                        if ( s>=0 ) return s;
                        break;
                    case 63 : 
                        int LA6_166 = input.LA(1);

                         
                        int index6_166 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                        else if ( (synpred13_ObjCpp()) ) {s = 582;}

                         
                        input.seek(index6_166);
                        if ( s>=0 ) return s;
                        break;
                    case 64 : 
                        int LA6_167 = input.LA(1);

                         
                        int index6_167 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                        else if ( (synpred13_ObjCpp()) ) {s = 582;}

                         
                        input.seek(index6_167);
                        if ( s>=0 ) return s;
                        break;
                    case 65 : 
                        int LA6_168 = input.LA(1);

                         
                        int index6_168 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                        else if ( (synpred13_ObjCpp()) ) {s = 582;}

                         
                        input.seek(index6_168);
                        if ( s>=0 ) return s;
                        break;
                    case 66 : 
                        int LA6_169 = input.LA(1);

                         
                        int index6_169 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                        else if ( (synpred13_ObjCpp()) ) {s = 582;}

                         
                        input.seek(index6_169);
                        if ( s>=0 ) return s;
                        break;
                    case 67 : 
                        int LA6_170 = input.LA(1);

                         
                        int index6_170 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                        else if ( (synpred13_ObjCpp()) ) {s = 582;}

                         
                        input.seek(index6_170);
                        if ( s>=0 ) return s;
                        break;
                    case 68 : 
                        int LA6_171 = input.LA(1);

                         
                        int index6_171 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                        else if ( (synpred13_ObjCpp()) ) {s = 582;}

                         
                        input.seek(index6_171);
                        if ( s>=0 ) return s;
                        break;
                    case 69 : 
                        int LA6_172 = input.LA(1);

                         
                        int index6_172 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                        else if ( (synpred13_ObjCpp()) ) {s = 582;}

                         
                        input.seek(index6_172);
                        if ( s>=0 ) return s;
                        break;
                    case 70 : 
                        int LA6_173 = input.LA(1);

                         
                        int index6_173 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                        else if ( (synpred13_ObjCpp()) ) {s = 582;}

                         
                        input.seek(index6_173);
                        if ( s>=0 ) return s;
                        break;
                    case 71 : 
                        int LA6_174 = input.LA(1);

                         
                        int index6_174 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                        else if ( (synpred13_ObjCpp()) ) {s = 582;}

                         
                        input.seek(index6_174);
                        if ( s>=0 ) return s;
                        break;
                    case 72 : 
                        int LA6_175 = input.LA(1);

                         
                        int index6_175 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                        else if ( (synpred13_ObjCpp()) ) {s = 582;}

                         
                        input.seek(index6_175);
                        if ( s>=0 ) return s;
                        break;
                    case 73 : 
                        int LA6_176 = input.LA(1);

                         
                        int index6_176 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                        else if ( (synpred13_ObjCpp()) ) {s = 582;}

                         
                        input.seek(index6_176);
                        if ( s>=0 ) return s;
                        break;
                    case 74 : 
                        int LA6_177 = input.LA(1);

                         
                        int index6_177 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                        else if ( (synpred13_ObjCpp()) ) {s = 582;}

                         
                        input.seek(index6_177);
                        if ( s>=0 ) return s;
                        break;
                    case 75 : 
                        int LA6_178 = input.LA(1);

                         
                        int index6_178 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                        else if ( (synpred12_ObjCpp()) ) {s = 583;}

                         
                        input.seek(index6_178);
                        if ( s>=0 ) return s;
                        break;
                    case 76 : 
                        int LA6_179 = input.LA(1);

                         
                        int index6_179 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                        else if ( (synpred12_ObjCpp()) ) {s = 583;}

                         
                        input.seek(index6_179);
                        if ( s>=0 ) return s;
                        break;
                    case 77 : 
                        int LA6_180 = input.LA(1);

                         
                        int index6_180 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_180);
                        if ( s>=0 ) return s;
                        break;
                    case 78 : 
                        int LA6_181 = input.LA(1);

                         
                        int index6_181 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_181);
                        if ( s>=0 ) return s;
                        break;
                    case 79 : 
                        int LA6_182 = input.LA(1);

                         
                        int index6_182 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_182);
                        if ( s>=0 ) return s;
                        break;
                    case 80 : 
                        int LA6_183 = input.LA(1);

                         
                        int index6_183 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_183);
                        if ( s>=0 ) return s;
                        break;
                    case 81 : 
                        int LA6_184 = input.LA(1);

                         
                        int index6_184 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_184);
                        if ( s>=0 ) return s;
                        break;
                    case 82 : 
                        int LA6_185 = input.LA(1);

                         
                        int index6_185 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_185);
                        if ( s>=0 ) return s;
                        break;
                    case 83 : 
                        int LA6_186 = input.LA(1);

                         
                        int index6_186 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_186);
                        if ( s>=0 ) return s;
                        break;
                    case 84 : 
                        int LA6_187 = input.LA(1);

                         
                        int index6_187 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_187);
                        if ( s>=0 ) return s;
                        break;
                    case 85 : 
                        int LA6_188 = input.LA(1);

                         
                        int index6_188 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_188);
                        if ( s>=0 ) return s;
                        break;
                    case 86 : 
                        int LA6_189 = input.LA(1);

                         
                        int index6_189 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_189);
                        if ( s>=0 ) return s;
                        break;
                    case 87 : 
                        int LA6_190 = input.LA(1);

                         
                        int index6_190 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_190);
                        if ( s>=0 ) return s;
                        break;
                    case 88 : 
                        int LA6_191 = input.LA(1);

                         
                        int index6_191 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_191);
                        if ( s>=0 ) return s;
                        break;
                    case 89 : 
                        int LA6_192 = input.LA(1);

                         
                        int index6_192 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_192);
                        if ( s>=0 ) return s;
                        break;
                    case 90 : 
                        int LA6_193 = input.LA(1);

                         
                        int index6_193 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_193);
                        if ( s>=0 ) return s;
                        break;
                    case 91 : 
                        int LA6_194 = input.LA(1);

                         
                        int index6_194 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_194);
                        if ( s>=0 ) return s;
                        break;
                    case 92 : 
                        int LA6_199 = input.LA(1);

                         
                        int index6_199 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_199);
                        if ( s>=0 ) return s;
                        break;
                    case 93 : 
                        int LA6_200 = input.LA(1);

                         
                        int index6_200 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_200);
                        if ( s>=0 ) return s;
                        break;
                    case 94 : 
                        int LA6_201 = input.LA(1);

                         
                        int index6_201 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_201);
                        if ( s>=0 ) return s;
                        break;
                    case 95 : 
                        int LA6_202 = input.LA(1);

                         
                        int index6_202 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_202);
                        if ( s>=0 ) return s;
                        break;
                    case 96 : 
                        int LA6_203 = input.LA(1);

                         
                        int index6_203 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_203);
                        if ( s>=0 ) return s;
                        break;
                    case 97 : 
                        int LA6_204 = input.LA(1);

                         
                        int index6_204 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_204);
                        if ( s>=0 ) return s;
                        break;
                    case 98 : 
                        int LA6_205 = input.LA(1);

                         
                        int index6_205 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_205);
                        if ( s>=0 ) return s;
                        break;
                    case 99 : 
                        int LA6_206 = input.LA(1);

                         
                        int index6_206 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_206);
                        if ( s>=0 ) return s;
                        break;
                    case 100 : 
                        int LA6_208 = input.LA(1);

                         
                        int index6_208 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_208);
                        if ( s>=0 ) return s;
                        break;
                    case 101 : 
                        int LA6_209 = input.LA(1);

                         
                        int index6_209 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_209);
                        if ( s>=0 ) return s;
                        break;
                    case 102 : 
                        int LA6_213 = input.LA(1);

                         
                        int index6_213 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_213);
                        if ( s>=0 ) return s;
                        break;
                    case 103 : 
                        int LA6_214 = input.LA(1);

                         
                        int index6_214 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_214);
                        if ( s>=0 ) return s;
                        break;
                    case 104 : 
                        int LA6_215 = input.LA(1);

                         
                        int index6_215 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_215);
                        if ( s>=0 ) return s;
                        break;
                    case 105 : 
                        int LA6_216 = input.LA(1);

                         
                        int index6_216 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_216);
                        if ( s>=0 ) return s;
                        break;
                    case 106 : 
                        int LA6_218 = input.LA(1);

                         
                        int index6_218 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_218);
                        if ( s>=0 ) return s;
                        break;
                    case 107 : 
                        int LA6_219 = input.LA(1);

                         
                        int index6_219 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_219);
                        if ( s>=0 ) return s;
                        break;
                    case 108 : 
                        int LA6_223 = input.LA(1);

                         
                        int index6_223 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_223);
                        if ( s>=0 ) return s;
                        break;
                    case 109 : 
                        int LA6_224 = input.LA(1);

                         
                        int index6_224 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_224);
                        if ( s>=0 ) return s;
                        break;
                    case 110 : 
                        int LA6_225 = input.LA(1);

                         
                        int index6_225 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_225);
                        if ( s>=0 ) return s;
                        break;
                    case 111 : 
                        int LA6_226 = input.LA(1);

                         
                        int index6_226 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_226);
                        if ( s>=0 ) return s;
                        break;
                    case 112 : 
                        int LA6_228 = input.LA(1);

                         
                        int index6_228 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_228);
                        if ( s>=0 ) return s;
                        break;
                    case 113 : 
                        int LA6_229 = input.LA(1);

                         
                        int index6_229 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_229);
                        if ( s>=0 ) return s;
                        break;
                    case 114 : 
                        int LA6_233 = input.LA(1);

                         
                        int index6_233 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_233);
                        if ( s>=0 ) return s;
                        break;
                    case 115 : 
                        int LA6_234 = input.LA(1);

                         
                        int index6_234 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                        else if ( (synpred13_ObjCpp()) ) {s = 582;}

                         
                        input.seek(index6_234);
                        if ( s>=0 ) return s;
                        break;
                    case 116 : 
                        int LA6_235 = input.LA(1);

                         
                        int index6_235 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                        else if ( (synpred13_ObjCpp()) ) {s = 582;}

                         
                        input.seek(index6_235);
                        if ( s>=0 ) return s;
                        break;
                    case 117 : 
                        int LA6_236 = input.LA(1);

                         
                        int index6_236 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                        else if ( (synpred13_ObjCpp()) ) {s = 582;}

                         
                        input.seek(index6_236);
                        if ( s>=0 ) return s;
                        break;
                    case 118 : 
                        int LA6_237 = input.LA(1);

                         
                        int index6_237 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                        else if ( (synpred13_ObjCpp()) ) {s = 582;}

                         
                        input.seek(index6_237);
                        if ( s>=0 ) return s;
                        break;
                    case 119 : 
                        int LA6_238 = input.LA(1);

                         
                        int index6_238 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                        else if ( (synpred13_ObjCpp()) ) {s = 582;}

                         
                        input.seek(index6_238);
                        if ( s>=0 ) return s;
                        break;
                    case 120 : 
                        int LA6_239 = input.LA(1);

                         
                        int index6_239 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                        else if ( (synpred13_ObjCpp()) ) {s = 582;}

                         
                        input.seek(index6_239);
                        if ( s>=0 ) return s;
                        break;
                    case 121 : 
                        int LA6_240 = input.LA(1);

                         
                        int index6_240 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                        else if ( (synpred13_ObjCpp()) ) {s = 582;}

                         
                        input.seek(index6_240);
                        if ( s>=0 ) return s;
                        break;
                    case 122 : 
                        int LA6_241 = input.LA(1);

                         
                        int index6_241 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                        else if ( (synpred13_ObjCpp()) ) {s = 582;}

                         
                        input.seek(index6_241);
                        if ( s>=0 ) return s;
                        break;
                    case 123 : 
                        int LA6_242 = input.LA(1);

                         
                        int index6_242 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                        else if ( (synpred13_ObjCpp()) ) {s = 582;}

                         
                        input.seek(index6_242);
                        if ( s>=0 ) return s;
                        break;
                    case 124 : 
                        int LA6_243 = input.LA(1);

                         
                        int index6_243 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                        else if ( (synpred13_ObjCpp()) ) {s = 582;}

                         
                        input.seek(index6_243);
                        if ( s>=0 ) return s;
                        break;
                    case 125 : 
                        int LA6_244 = input.LA(1);

                         
                        int index6_244 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                        else if ( (synpred13_ObjCpp()) ) {s = 582;}

                         
                        input.seek(index6_244);
                        if ( s>=0 ) return s;
                        break;
                    case 126 : 
                        int LA6_245 = input.LA(1);

                         
                        int index6_245 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                        else if ( (synpred13_ObjCpp()) ) {s = 582;}

                         
                        input.seek(index6_245);
                        if ( s>=0 ) return s;
                        break;
                    case 127 : 
                        int LA6_246 = input.LA(1);

                         
                        int index6_246 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                        else if ( (synpred13_ObjCpp()) ) {s = 582;}

                         
                        input.seek(index6_246);
                        if ( s>=0 ) return s;
                        break;
                    case 128 : 
                        int LA6_247 = input.LA(1);

                         
                        int index6_247 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                        else if ( (synpred13_ObjCpp()) ) {s = 582;}

                         
                        input.seek(index6_247);
                        if ( s>=0 ) return s;
                        break;
                    case 129 : 
                        int LA6_248 = input.LA(1);

                         
                        int index6_248 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                        else if ( (synpred13_ObjCpp()) ) {s = 582;}

                         
                        input.seek(index6_248);
                        if ( s>=0 ) return s;
                        break;
                    case 130 : 
                        int LA6_249 = input.LA(1);

                         
                        int index6_249 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                        else if ( (synpred13_ObjCpp()) ) {s = 582;}

                         
                        input.seek(index6_249);
                        if ( s>=0 ) return s;
                        break;
                    case 131 : 
                        int LA6_250 = input.LA(1);

                         
                        int index6_250 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                        else if ( (synpred13_ObjCpp()) ) {s = 582;}

                         
                        input.seek(index6_250);
                        if ( s>=0 ) return s;
                        break;
                    case 132 : 
                        int LA6_251 = input.LA(1);

                         
                        int index6_251 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                        else if ( (synpred13_ObjCpp()) ) {s = 582;}

                         
                        input.seek(index6_251);
                        if ( s>=0 ) return s;
                        break;
                    case 133 : 
                        int LA6_252 = input.LA(1);

                         
                        int index6_252 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                        else if ( (synpred13_ObjCpp()) ) {s = 582;}

                         
                        input.seek(index6_252);
                        if ( s>=0 ) return s;
                        break;
                    case 134 : 
                        int LA6_253 = input.LA(1);

                         
                        int index6_253 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                        else if ( (synpred13_ObjCpp()) ) {s = 582;}

                         
                        input.seek(index6_253);
                        if ( s>=0 ) return s;
                        break;
                    case 135 : 
                        int LA6_254 = input.LA(1);

                         
                        int index6_254 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_254);
                        if ( s>=0 ) return s;
                        break;
                    case 136 : 
                        int LA6_255 = input.LA(1);

                         
                        int index6_255 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_255);
                        if ( s>=0 ) return s;
                        break;
                    case 137 : 
                        int LA6_256 = input.LA(1);

                         
                        int index6_256 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_256);
                        if ( s>=0 ) return s;
                        break;
                    case 138 : 
                        int LA6_257 = input.LA(1);

                         
                        int index6_257 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_257);
                        if ( s>=0 ) return s;
                        break;
                    case 139 : 
                        int LA6_258 = input.LA(1);

                         
                        int index6_258 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_258);
                        if ( s>=0 ) return s;
                        break;
                    case 140 : 
                        int LA6_259 = input.LA(1);

                         
                        int index6_259 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_259);
                        if ( s>=0 ) return s;
                        break;
                    case 141 : 
                        int LA6_260 = input.LA(1);

                         
                        int index6_260 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_260);
                        if ( s>=0 ) return s;
                        break;
                    case 142 : 
                        int LA6_261 = input.LA(1);

                         
                        int index6_261 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_261);
                        if ( s>=0 ) return s;
                        break;
                    case 143 : 
                        int LA6_262 = input.LA(1);

                         
                        int index6_262 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_262);
                        if ( s>=0 ) return s;
                        break;
                    case 144 : 
                        int LA6_263 = input.LA(1);

                         
                        int index6_263 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_263);
                        if ( s>=0 ) return s;
                        break;
                    case 145 : 
                        int LA6_264 = input.LA(1);

                         
                        int index6_264 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_264);
                        if ( s>=0 ) return s;
                        break;
                    case 146 : 
                        int LA6_265 = input.LA(1);

                         
                        int index6_265 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_265);
                        if ( s>=0 ) return s;
                        break;
                    case 147 : 
                        int LA6_266 = input.LA(1);

                         
                        int index6_266 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_266);
                        if ( s>=0 ) return s;
                        break;
                    case 148 : 
                        int LA6_267 = input.LA(1);

                         
                        int index6_267 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_267);
                        if ( s>=0 ) return s;
                        break;
                    case 149 : 
                        int LA6_268 = input.LA(1);

                         
                        int index6_268 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_268);
                        if ( s>=0 ) return s;
                        break;
                    case 150 : 
                        int LA6_269 = input.LA(1);

                         
                        int index6_269 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_269);
                        if ( s>=0 ) return s;
                        break;
                    case 151 : 
                        int LA6_270 = input.LA(1);

                         
                        int index6_270 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_270);
                        if ( s>=0 ) return s;
                        break;
                    case 152 : 
                        int LA6_271 = input.LA(1);

                         
                        int index6_271 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_271);
                        if ( s>=0 ) return s;
                        break;
                    case 153 : 
                        int LA6_272 = input.LA(1);

                         
                        int index6_272 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_272);
                        if ( s>=0 ) return s;
                        break;
                    case 154 : 
                        int LA6_273 = input.LA(1);

                         
                        int index6_273 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_273);
                        if ( s>=0 ) return s;
                        break;
                    case 155 : 
                        int LA6_274 = input.LA(1);

                         
                        int index6_274 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_274);
                        if ( s>=0 ) return s;
                        break;
                    case 156 : 
                        int LA6_275 = input.LA(1);

                         
                        int index6_275 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_275);
                        if ( s>=0 ) return s;
                        break;
                    case 157 : 
                        int LA6_276 = input.LA(1);

                         
                        int index6_276 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_276);
                        if ( s>=0 ) return s;
                        break;
                    case 158 : 
                        int LA6_277 = input.LA(1);

                         
                        int index6_277 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_277);
                        if ( s>=0 ) return s;
                        break;
                    case 159 : 
                        int LA6_278 = input.LA(1);

                         
                        int index6_278 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_278);
                        if ( s>=0 ) return s;
                        break;
                    case 160 : 
                        int LA6_279 = input.LA(1);

                         
                        int index6_279 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_279);
                        if ( s>=0 ) return s;
                        break;
                    case 161 : 
                        int LA6_280 = input.LA(1);

                         
                        int index6_280 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_280);
                        if ( s>=0 ) return s;
                        break;
                    case 162 : 
                        int LA6_281 = input.LA(1);

                         
                        int index6_281 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_281);
                        if ( s>=0 ) return s;
                        break;
                    case 163 : 
                        int LA6_282 = input.LA(1);

                         
                        int index6_282 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_282);
                        if ( s>=0 ) return s;
                        break;
                    case 164 : 
                        int LA6_283 = input.LA(1);

                         
                        int index6_283 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_283);
                        if ( s>=0 ) return s;
                        break;
                    case 165 : 
                        int LA6_284 = input.LA(1);

                         
                        int index6_284 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_284);
                        if ( s>=0 ) return s;
                        break;
                    case 166 : 
                        int LA6_285 = input.LA(1);

                         
                        int index6_285 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_285);
                        if ( s>=0 ) return s;
                        break;
                    case 167 : 
                        int LA6_286 = input.LA(1);

                         
                        int index6_286 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_286);
                        if ( s>=0 ) return s;
                        break;
                    case 168 : 
                        int LA6_287 = input.LA(1);

                         
                        int index6_287 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_287);
                        if ( s>=0 ) return s;
                        break;
                    case 169 : 
                        int LA6_288 = input.LA(1);

                         
                        int index6_288 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_288);
                        if ( s>=0 ) return s;
                        break;
                    case 170 : 
                        int LA6_289 = input.LA(1);

                         
                        int index6_289 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_289);
                        if ( s>=0 ) return s;
                        break;
                    case 171 : 
                        int LA6_294 = input.LA(1);

                         
                        int index6_294 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_294);
                        if ( s>=0 ) return s;
                        break;
                    case 172 : 
                        int LA6_295 = input.LA(1);

                         
                        int index6_295 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_295);
                        if ( s>=0 ) return s;
                        break;
                    case 173 : 
                        int LA6_296 = input.LA(1);

                         
                        int index6_296 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_296);
                        if ( s>=0 ) return s;
                        break;
                    case 174 : 
                        int LA6_297 = input.LA(1);

                         
                        int index6_297 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_297);
                        if ( s>=0 ) return s;
                        break;
                    case 175 : 
                        int LA6_298 = input.LA(1);

                         
                        int index6_298 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_298);
                        if ( s>=0 ) return s;
                        break;
                    case 176 : 
                        int LA6_299 = input.LA(1);

                         
                        int index6_299 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_299);
                        if ( s>=0 ) return s;
                        break;
                    case 177 : 
                        int LA6_300 = input.LA(1);

                         
                        int index6_300 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_300);
                        if ( s>=0 ) return s;
                        break;
                    case 178 : 
                        int LA6_301 = input.LA(1);

                         
                        int index6_301 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_301);
                        if ( s>=0 ) return s;
                        break;
                    case 179 : 
                        int LA6_306 = input.LA(1);

                         
                        int index6_306 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_306);
                        if ( s>=0 ) return s;
                        break;
                    case 180 : 
                        int LA6_307 = input.LA(1);

                         
                        int index6_307 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_307);
                        if ( s>=0 ) return s;
                        break;
                    case 181 : 
                        int LA6_308 = input.LA(1);

                         
                        int index6_308 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_308);
                        if ( s>=0 ) return s;
                        break;
                    case 182 : 
                        int LA6_309 = input.LA(1);

                         
                        int index6_309 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_309);
                        if ( s>=0 ) return s;
                        break;
                    case 183 : 
                        int LA6_310 = input.LA(1);

                         
                        int index6_310 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_310);
                        if ( s>=0 ) return s;
                        break;
                    case 184 : 
                        int LA6_311 = input.LA(1);

                         
                        int index6_311 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_311);
                        if ( s>=0 ) return s;
                        break;
                    case 185 : 
                        int LA6_316 = input.LA(1);

                         
                        int index6_316 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_316);
                        if ( s>=0 ) return s;
                        break;
                    case 186 : 
                        int LA6_317 = input.LA(1);

                         
                        int index6_317 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_317);
                        if ( s>=0 ) return s;
                        break;
                    case 187 : 
                        int LA6_318 = input.LA(1);

                         
                        int index6_318 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_318);
                        if ( s>=0 ) return s;
                        break;
                    case 188 : 
                        int LA6_319 = input.LA(1);

                         
                        int index6_319 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_319);
                        if ( s>=0 ) return s;
                        break;
                    case 189 : 
                        int LA6_320 = input.LA(1);

                         
                        int index6_320 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_320);
                        if ( s>=0 ) return s;
                        break;
                    case 190 : 
                        int LA6_322 = input.LA(1);

                         
                        int index6_322 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_322);
                        if ( s>=0 ) return s;
                        break;
                    case 191 : 
                        int LA6_326 = input.LA(1);

                         
                        int index6_326 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_326);
                        if ( s>=0 ) return s;
                        break;
                    case 192 : 
                        int LA6_327 = input.LA(1);

                         
                        int index6_327 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_327);
                        if ( s>=0 ) return s;
                        break;
                    case 193 : 
                        int LA6_328 = input.LA(1);

                         
                        int index6_328 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_328);
                        if ( s>=0 ) return s;
                        break;
                    case 194 : 
                        int LA6_329 = input.LA(1);

                         
                        int index6_329 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_329);
                        if ( s>=0 ) return s;
                        break;
                    case 195 : 
                        int LA6_338 = input.LA(1);

                         
                        int index6_338 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_338);
                        if ( s>=0 ) return s;
                        break;
                    case 196 : 
                        int LA6_339 = input.LA(1);

                         
                        int index6_339 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_339);
                        if ( s>=0 ) return s;
                        break;
                    case 197 : 
                        int LA6_343 = input.LA(1);

                         
                        int index6_343 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_343);
                        if ( s>=0 ) return s;
                        break;
                    case 198 : 
                        int LA6_344 = input.LA(1);

                         
                        int index6_344 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_344);
                        if ( s>=0 ) return s;
                        break;
                    case 199 : 
                        int LA6_345 = input.LA(1);

                         
                        int index6_345 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_345);
                        if ( s>=0 ) return s;
                        break;
                    case 200 : 
                        int LA6_347 = input.LA(1);

                         
                        int index6_347 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_347);
                        if ( s>=0 ) return s;
                        break;
                    case 201 : 
                        int LA6_348 = input.LA(1);

                         
                        int index6_348 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_348);
                        if ( s>=0 ) return s;
                        break;
                    case 202 : 
                        int LA6_352 = input.LA(1);

                         
                        int index6_352 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_352);
                        if ( s>=0 ) return s;
                        break;
                    case 203 : 
                        int LA6_353 = input.LA(1);

                         
                        int index6_353 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_353);
                        if ( s>=0 ) return s;
                        break;
                    case 204 : 
                        int LA6_354 = input.LA(1);

                         
                        int index6_354 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_354);
                        if ( s>=0 ) return s;
                        break;
                    case 205 : 
                        int LA6_356 = input.LA(1);

                         
                        int index6_356 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_356);
                        if ( s>=0 ) return s;
                        break;
                    case 206 : 
                        int LA6_375 = input.LA(1);

                         
                        int index6_375 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_375);
                        if ( s>=0 ) return s;
                        break;
                    case 207 : 
                        int LA6_376 = input.LA(1);

                         
                        int index6_376 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_376);
                        if ( s>=0 ) return s;
                        break;
                    case 208 : 
                        int LA6_377 = input.LA(1);

                         
                        int index6_377 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_377);
                        if ( s>=0 ) return s;
                        break;
                    case 209 : 
                        int LA6_378 = input.LA(1);

                         
                        int index6_378 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_378);
                        if ( s>=0 ) return s;
                        break;
                    case 210 : 
                        int LA6_379 = input.LA(1);

                         
                        int index6_379 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_379);
                        if ( s>=0 ) return s;
                        break;
                    case 211 : 
                        int LA6_380 = input.LA(1);

                         
                        int index6_380 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_380);
                        if ( s>=0 ) return s;
                        break;
                    case 212 : 
                        int LA6_382 = input.LA(1);

                         
                        int index6_382 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_382);
                        if ( s>=0 ) return s;
                        break;
                    case 213 : 
                        int LA6_383 = input.LA(1);

                         
                        int index6_383 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_383);
                        if ( s>=0 ) return s;
                        break;
                    case 214 : 
                        int LA6_387 = input.LA(1);

                         
                        int index6_387 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_387);
                        if ( s>=0 ) return s;
                        break;
                    case 215 : 
                        int LA6_388 = input.LA(1);

                         
                        int index6_388 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_388);
                        if ( s>=0 ) return s;
                        break;
                    case 216 : 
                        int LA6_389 = input.LA(1);

                         
                        int index6_389 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_389);
                        if ( s>=0 ) return s;
                        break;
                    case 217 : 
                        int LA6_390 = input.LA(1);

                         
                        int index6_390 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_390);
                        if ( s>=0 ) return s;
                        break;
                    case 218 : 
                        int LA6_392 = input.LA(1);

                         
                        int index6_392 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_392);
                        if ( s>=0 ) return s;
                        break;
                    case 219 : 
                        int LA6_393 = input.LA(1);

                         
                        int index6_393 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_393);
                        if ( s>=0 ) return s;
                        break;
                    case 220 : 
                        int LA6_397 = input.LA(1);

                         
                        int index6_397 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_397);
                        if ( s>=0 ) return s;
                        break;
                    case 221 : 
                        int LA6_398 = input.LA(1);

                         
                        int index6_398 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_398);
                        if ( s>=0 ) return s;
                        break;
                    case 222 : 
                        int LA6_399 = input.LA(1);

                         
                        int index6_399 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_399);
                        if ( s>=0 ) return s;
                        break;
                    case 223 : 
                        int LA6_400 = input.LA(1);

                         
                        int index6_400 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_400);
                        if ( s>=0 ) return s;
                        break;
                    case 224 : 
                        int LA6_402 = input.LA(1);

                         
                        int index6_402 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_402);
                        if ( s>=0 ) return s;
                        break;
                    case 225 : 
                        int LA6_403 = input.LA(1);

                         
                        int index6_403 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_403);
                        if ( s>=0 ) return s;
                        break;
                    case 226 : 
                        int LA6_407 = input.LA(1);

                         
                        int index6_407 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_407);
                        if ( s>=0 ) return s;
                        break;
                    case 227 : 
                        int LA6_408 = input.LA(1);

                         
                        int index6_408 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_408);
                        if ( s>=0 ) return s;
                        break;
                    case 228 : 
                        int LA6_409 = input.LA(1);

                         
                        int index6_409 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_409);
                        if ( s>=0 ) return s;
                        break;
                    case 229 : 
                        int LA6_410 = input.LA(1);

                         
                        int index6_410 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_410);
                        if ( s>=0 ) return s;
                        break;
                    case 230 : 
                        int LA6_411 = input.LA(1);

                         
                        int index6_411 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_411);
                        if ( s>=0 ) return s;
                        break;
                    case 231 : 
                        int LA6_413 = input.LA(1);

                         
                        int index6_413 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_413);
                        if ( s>=0 ) return s;
                        break;
                    case 232 : 
                        int LA6_414 = input.LA(1);

                         
                        int index6_414 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_414);
                        if ( s>=0 ) return s;
                        break;
                    case 233 : 
                        int LA6_418 = input.LA(1);

                         
                        int index6_418 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_418);
                        if ( s>=0 ) return s;
                        break;
                    case 234 : 
                        int LA6_419 = input.LA(1);

                         
                        int index6_419 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_419);
                        if ( s>=0 ) return s;
                        break;
                    case 235 : 
                        int LA6_420 = input.LA(1);

                         
                        int index6_420 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_420);
                        if ( s>=0 ) return s;
                        break;
                    case 236 : 
                        int LA6_429 = input.LA(1);

                         
                        int index6_429 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_429);
                        if ( s>=0 ) return s;
                        break;
                    case 237 : 
                        int LA6_430 = input.LA(1);

                         
                        int index6_430 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_430);
                        if ( s>=0 ) return s;
                        break;
                    case 238 : 
                        int LA6_431 = input.LA(1);

                         
                        int index6_431 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_431);
                        if ( s>=0 ) return s;
                        break;
                    case 239 : 
                        int LA6_432 = input.LA(1);

                         
                        int index6_432 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_432);
                        if ( s>=0 ) return s;
                        break;
                    case 240 : 
                        int LA6_433 = input.LA(1);

                         
                        int index6_433 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_433);
                        if ( s>=0 ) return s;
                        break;
                    case 241 : 
                        int LA6_438 = input.LA(1);

                         
                        int index6_438 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_438);
                        if ( s>=0 ) return s;
                        break;
                    case 242 : 
                        int LA6_439 = input.LA(1);

                         
                        int index6_439 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_439);
                        if ( s>=0 ) return s;
                        break;
                    case 243 : 
                        int LA6_440 = input.LA(1);

                         
                        int index6_440 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_440);
                        if ( s>=0 ) return s;
                        break;
                    case 244 : 
                        int LA6_441 = input.LA(1);

                         
                        int index6_441 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_441);
                        if ( s>=0 ) return s;
                        break;
                    case 245 : 
                        int LA6_442 = input.LA(1);

                         
                        int index6_442 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_442);
                        if ( s>=0 ) return s;
                        break;
                    case 246 : 
                        int LA6_453 = input.LA(1);

                         
                        int index6_453 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_453);
                        if ( s>=0 ) return s;
                        break;
                    case 247 : 
                        int LA6_466 = input.LA(1);

                         
                        int index6_466 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_466);
                        if ( s>=0 ) return s;
                        break;
                    case 248 : 
                        int LA6_467 = input.LA(1);

                         
                        int index6_467 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_467);
                        if ( s>=0 ) return s;
                        break;
                    case 249 : 
                        int LA6_468 = input.LA(1);

                         
                        int index6_468 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_468);
                        if ( s>=0 ) return s;
                        break;
                    case 250 : 
                        int LA6_477 = input.LA(1);

                         
                        int index6_477 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_477);
                        if ( s>=0 ) return s;
                        break;
                    case 251 : 
                        int LA6_478 = input.LA(1);

                         
                        int index6_478 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_478);
                        if ( s>=0 ) return s;
                        break;
                    case 252 : 
                        int LA6_479 = input.LA(1);

                         
                        int index6_479 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_479);
                        if ( s>=0 ) return s;
                        break;
                    case 253 : 
                        int LA6_480 = input.LA(1);

                         
                        int index6_480 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_480);
                        if ( s>=0 ) return s;
                        break;
                    case 254 : 
                        int LA6_481 = input.LA(1);

                         
                        int index6_481 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_481);
                        if ( s>=0 ) return s;
                        break;
                    case 255 : 
                        int LA6_486 = input.LA(1);

                         
                        int index6_486 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_486);
                        if ( s>=0 ) return s;
                        break;
                    case 256 : 
                        int LA6_487 = input.LA(1);

                         
                        int index6_487 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_487);
                        if ( s>=0 ) return s;
                        break;
                    case 257 : 
                        int LA6_488 = input.LA(1);

                         
                        int index6_488 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_488);
                        if ( s>=0 ) return s;
                        break;
                    case 258 : 
                        int LA6_489 = input.LA(1);

                         
                        int index6_489 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_489);
                        if ( s>=0 ) return s;
                        break;
                    case 259 : 
                        int LA6_490 = input.LA(1);

                         
                        int index6_490 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_490);
                        if ( s>=0 ) return s;
                        break;
                    case 260 : 
                        int LA6_501 = input.LA(1);

                         
                        int index6_501 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_501);
                        if ( s>=0 ) return s;
                        break;
                    case 261 : 
                        int LA6_514 = input.LA(1);

                         
                        int index6_514 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_514);
                        if ( s>=0 ) return s;
                        break;
                    case 262 : 
                        int LA6_525 = input.LA(1);

                         
                        int index6_525 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_525);
                        if ( s>=0 ) return s;
                        break;
                    case 263 : 
                        int LA6_526 = input.LA(1);

                         
                        int index6_526 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_526);
                        if ( s>=0 ) return s;
                        break;
                    case 264 : 
                        int LA6_535 = input.LA(1);

                         
                        int index6_535 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_535);
                        if ( s>=0 ) return s;
                        break;
                    case 265 : 
                        int LA6_536 = input.LA(1);

                         
                        int index6_536 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_536);
                        if ( s>=0 ) return s;
                        break;
                    case 266 : 
                        int LA6_537 = input.LA(1);

                         
                        int index6_537 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_537);
                        if ( s>=0 ) return s;
                        break;
                    case 267 : 
                        int LA6_538 = input.LA(1);

                         
                        int index6_538 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_538);
                        if ( s>=0 ) return s;
                        break;
                    case 268 : 
                        int LA6_539 = input.LA(1);

                         
                        int index6_539 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_539);
                        if ( s>=0 ) return s;
                        break;
                    case 269 : 
                        int LA6_544 = input.LA(1);

                         
                        int index6_544 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_544);
                        if ( s>=0 ) return s;
                        break;
                    case 270 : 
                        int LA6_545 = input.LA(1);

                         
                        int index6_545 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_545);
                        if ( s>=0 ) return s;
                        break;
                    case 271 : 
                        int LA6_546 = input.LA(1);

                         
                        int index6_546 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_546);
                        if ( s>=0 ) return s;
                        break;
                    case 272 : 
                        int LA6_547 = input.LA(1);

                         
                        int index6_547 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_547);
                        if ( s>=0 ) return s;
                        break;
                    case 273 : 
                        int LA6_548 = input.LA(1);

                         
                        int index6_548 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_548);
                        if ( s>=0 ) return s;
                        break;
                    case 274 : 
                        int LA6_559 = input.LA(1);

                         
                        int index6_559 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_559);
                        if ( s>=0 ) return s;
                        break;
                    case 275 : 
                        int LA6_572 = input.LA(1);

                         
                        int index6_572 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_572);
                        if ( s>=0 ) return s;
                        break;
                    case 276 : 
                        int LA6_573 = input.LA(1);

                         
                        int index6_573 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_573);
                        if ( s>=0 ) return s;
                        break;
                    case 277 : 
                        int LA6_574 = input.LA(1);

                         
                        int index6_574 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_574);
                        if ( s>=0 ) return s;
                        break;
                    case 278 : 
                        int LA6_575 = input.LA(1);

                         
                        int index6_575 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_575);
                        if ( s>=0 ) return s;
                        break;
                    case 279 : 
                        int LA6_576 = input.LA(1);

                         
                        int index6_576 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_576);
                        if ( s>=0 ) return s;
                        break;
                    case 280 : 
                        int LA6_577 = input.LA(1);

                         
                        int index6_577 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_577);
                        if ( s>=0 ) return s;
                        break;
                    case 281 : 
                        int LA6_578 = input.LA(1);

                         
                        int index6_578 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_578);
                        if ( s>=0 ) return s;
                        break;
                    case 282 : 
                        int LA6_579 = input.LA(1);

                         
                        int index6_579 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_579);
                        if ( s>=0 ) return s;
                        break;
                    case 283 : 
                        int LA6_580 = input.LA(1);

                         
                        int index6_580 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_580);
                        if ( s>=0 ) return s;
                        break;
                    case 284 : 
                        int LA6_581 = input.LA(1);

                         
                        int index6_581 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_ObjCpp()) ) {s = 369;}

                        else if ( (synpred8_ObjCpp()) ) {s = 48;}

                         
                        input.seek(index6_581);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 6, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA5_eotS =
        "\17\uffff";
    static final String DFA5_eofS =
        "\17\uffff";
    static final String DFA5_minS =
        "\1\6\16\uffff";
    static final String DFA5_maxS =
        "\1\113\16\uffff";
    static final String DFA5_acceptS =
        "\1\uffff\1\2\1\1\14\uffff";
    static final String DFA5_specialS =
        "\17\uffff}>";
    static final String[] DFA5_transitionS = {
            "\2\2\21\uffff\1\1\2\2\3\uffff\3\2\14\uffff\3\2\3\uffff\2\2\5"+
            "\uffff\2\2\1\uffff\16\2",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA5_eot = DFA.unpackEncodedString(DFA5_eotS);
    static final short[] DFA5_eof = DFA.unpackEncodedString(DFA5_eofS);
    static final char[] DFA5_min = DFA.unpackEncodedStringToUnsignedChars(DFA5_minS);
    static final char[] DFA5_max = DFA.unpackEncodedStringToUnsignedChars(DFA5_maxS);
    static final short[] DFA5_accept = DFA.unpackEncodedString(DFA5_acceptS);
    static final short[] DFA5_special = DFA.unpackEncodedString(DFA5_specialS);
    static final short[][] DFA5_transition;

    static {
        int numStates = DFA5_transitionS.length;
        DFA5_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA5_transition[i] = DFA.unpackEncodedString(DFA5_transitionS[i]);
        }
    }

    class DFA5 extends DFA {

        public DFA5(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 5;
            this.eot = DFA5_eot;
            this.eof = DFA5_eof;
            this.min = DFA5_min;
            this.max = DFA5_max;
            this.accept = DFA5_accept;
            this.special = DFA5_special;
            this.transition = DFA5_transition;
        }
        public String getDescription() {
            return "()* loopback of 236:6: (subD= declaration )*";
        }
    }
    static final String DFA18_eotS =
        "\12\uffff";
    static final String DFA18_eofS =
        "\12\uffff";
    static final String DFA18_minS =
        "\1\30\11\uffff";
    static final String DFA18_maxS =
        "\1\73\11\uffff";
    static final String DFA18_acceptS =
        "\1\uffff\1\1\7\uffff\1\2";
    static final String DFA18_specialS =
        "\12\uffff}>";
    static final String[] DFA18_transitionS = {
            "\1\1\6\uffff\1\1\2\uffff\1\1\1\11\1\uffff\1\1\4\uffff\3\1\16"+
            "\uffff\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA18_eot = DFA.unpackEncodedString(DFA18_eotS);
    static final short[] DFA18_eof = DFA.unpackEncodedString(DFA18_eofS);
    static final char[] DFA18_min = DFA.unpackEncodedStringToUnsignedChars(DFA18_minS);
    static final char[] DFA18_max = DFA.unpackEncodedStringToUnsignedChars(DFA18_maxS);
    static final short[] DFA18_accept = DFA.unpackEncodedString(DFA18_acceptS);
    static final short[] DFA18_special = DFA.unpackEncodedString(DFA18_specialS);
    static final short[][] DFA18_transition;

    static {
        int numStates = DFA18_transitionS.length;
        DFA18_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA18_transition[i] = DFA.unpackEncodedString(DFA18_transitionS[i]);
        }
    }

    class DFA18 extends DFA {

        public DFA18(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 18;
            this.eot = DFA18_eot;
            this.eof = DFA18_eof;
            this.min = DFA18_min;
            this.max = DFA18_max;
            this.accept = DFA18_accept;
            this.special = DFA18_special;
            this.transition = DFA18_transition;
        }
        public String getDescription() {
            return "360:3: ( ( ':' parentClass= IDENTIFIER )? | '(' categoryName= IDENTIFIER ')' )";
        }
    }
    static final String DFA23_eotS =
        "\16\uffff";
    static final String DFA23_eofS =
        "\16\uffff";
    static final String DFA23_minS =
        "\1\6\15\uffff";
    static final String DFA23_maxS =
        "\1\113\15\uffff";
    static final String DFA23_acceptS =
        "\1\uffff\1\5\1\1\1\2\1\3\1\4\10\uffff";
    static final String DFA23_specialS =
        "\16\uffff}>";
    static final String[] DFA23_transitionS = {
            "\2\5\21\uffff\1\1\5\uffff\1\5\7\uffff\1\2\1\3\1\4\4\uffff\3"+
            "\5\3\uffff\2\5\6\uffff\1\5\1\uffff\16\5",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA23_eot = DFA.unpackEncodedString(DFA23_eotS);
    static final short[] DFA23_eof = DFA.unpackEncodedString(DFA23_eofS);
    static final char[] DFA23_min = DFA.unpackEncodedStringToUnsignedChars(DFA23_minS);
    static final char[] DFA23_max = DFA.unpackEncodedStringToUnsignedChars(DFA23_maxS);
    static final short[] DFA23_accept = DFA.unpackEncodedString(DFA23_acceptS);
    static final short[] DFA23_special = DFA.unpackEncodedString(DFA23_specialS);
    static final short[][] DFA23_transition;

    static {
        int numStates = DFA23_transitionS.length;
        DFA23_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA23_transition[i] = DFA.unpackEncodedString(DFA23_transitionS[i]);
        }
    }

    class DFA23 extends DFA {

        public DFA23(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 23;
            this.eot = DFA23_eot;
            this.eof = DFA23_eof;
            this.min = DFA23_min;
            this.max = DFA23_max;
            this.accept = DFA23_accept;
            this.special = DFA23_special;
            this.transition = DFA23_transition;
        }
        public String getDescription() {
            return "()* loopback of 382:4: ( '@public' | '@private' | '@protected' | ( ( varDecl | functionPointerVarDecl ) ) )*";
        }
    }
    static final String DFA22_eotS =
        "\u0255\uffff";
    static final String DFA22_eofS =
        "\u0255\uffff";
    static final String DFA22_minS =
        "\24\6\1\30\27\6\1\4\1\0\4\uffff\4\6\1\4\1\0\2\6\4\uffff\4\6\1\4"+
        "\1\0\4\uffff\4\6\2\uffff\1\4\2\uffff\1\0\1\6\43\0\4\uffff\6\0\4"+
        "\uffff\10\0\4\uffff\6\0\1\uffff\1\0\2\uffff\47\0\4\uffff\10\0\4"+
        "\uffff\6\0\4\uffff\4\0\2\uffff\1\0\2\uffff\71\0\4\uffff\6\0\4\uffff"+
        "\10\0\4\uffff\6\0\4\uffff\12\0\4\uffff\6\0\4\uffff\3\0\10\uffff"+
        "\5\0\5\uffff\1\0\2\uffff\4\0\1\uffff\1\0\32\uffff\3\0\10\uffff\5"+
        "\0\5\uffff\1\0\2\uffff\4\0\1\uffff\1\0\31\uffff\7\0\4\uffff\6\0"+
        "\4\uffff\3\0\10\uffff\5\0\5\uffff\1\0\2\uffff\4\0\1\uffff\1\0\31"+
        "\uffff\3\0\10\uffff\5\0\5\uffff\1\0\2\uffff\4\0\1\uffff\1\0\31\uffff"+
        "\12\0";
    static final String DFA22_maxS =
        "\2\113\1\30\1\113\1\30\3\113\2\71\1\113\1\30\1\113\1\30\3\113\2"+
        "\71\1\113\1\30\1\6\3\113\2\71\1\43\2\113\1\30\1\113\1\30\3\113\2"+
        "\71\1\113\1\71\1\66\3\71\1\116\1\0\4\uffff\1\66\3\71\1\116\1\0\1"+
        "\113\1\71\4\uffff\1\66\3\71\1\116\1\0\4\uffff\1\66\3\71\2\uffff"+
        "\1\116\2\uffff\1\0\1\113\43\0\4\uffff\6\0\4\uffff\10\0\4\uffff\6"+
        "\0\1\uffff\1\0\2\uffff\47\0\4\uffff\10\0\4\uffff\6\0\4\uffff\4\0"+
        "\2\uffff\1\0\2\uffff\71\0\4\uffff\6\0\4\uffff\10\0\4\uffff\6\0\4"+
        "\uffff\12\0\4\uffff\6\0\4\uffff\3\0\10\uffff\5\0\5\uffff\1\0\2\uffff"+
        "\4\0\1\uffff\1\0\32\uffff\3\0\10\uffff\5\0\5\uffff\1\0\2\uffff\4"+
        "\0\1\uffff\1\0\31\uffff\7\0\4\uffff\6\0\4\uffff\3\0\10\uffff\5\0"+
        "\5\uffff\1\0\2\uffff\4\0\1\uffff\1\0\31\uffff\3\0\10\uffff\5\0\5"+
        "\uffff\1\0\2\uffff\4\0\1\uffff\1\0\31\uffff\12\0";
    static final String DFA22_acceptS =
        "\56\uffff\1\1\u0161\uffff\1\2\u00c4\uffff";
    static final String DFA22_specialS =
        "\55\uffff\1\0\11\uffff\1\1\13\uffff\1\2\15\uffff\1\3\1\uffff\1\4"+
        "\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1"+
        "\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36"+
        "\1\37\1\40\1\41\1\42\1\43\1\44\1\45\1\46\4\uffff\1\47\1\50\1\51"+
        "\1\52\1\53\1\54\4\uffff\1\55\1\56\1\57\1\60\1\61\1\62\1\63\1\64"+
        "\4\uffff\1\65\1\66\1\67\1\70\1\71\1\72\1\uffff\1\73\2\uffff\1\74"+
        "\1\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\107"+
        "\1\110\1\111\1\112\1\113\1\114\1\115\1\116\1\117\1\120\1\121\1\122"+
        "\1\123\1\124\1\125\1\126\1\127\1\130\1\131\1\132\1\133\1\134\1\135"+
        "\1\136\1\137\1\140\1\141\1\142\4\uffff\1\143\1\144\1\145\1\146\1"+
        "\147\1\150\1\151\1\152\4\uffff\1\153\1\154\1\155\1\156\1\157\1\160"+
        "\4\uffff\1\161\1\162\1\163\1\164\2\uffff\1\165\2\uffff\1\166\1\167"+
        "\1\170\1\171\1\172\1\173\1\174\1\175\1\176\1\177\1\u0080\1\u0081"+
        "\1\u0082\1\u0083\1\u0084\1\u0085\1\u0086\1\u0087\1\u0088\1\u0089"+
        "\1\u008a\1\u008b\1\u008c\1\u008d\1\u008e\1\u008f\1\u0090\1\u0091"+
        "\1\u0092\1\u0093\1\u0094\1\u0095\1\u0096\1\u0097\1\u0098\1\u0099"+
        "\1\u009a\1\u009b\1\u009c\1\u009d\1\u009e\1\u009f\1\u00a0\1\u00a1"+
        "\1\u00a2\1\u00a3\1\u00a4\1\u00a5\1\u00a6\1\u00a7\1\u00a8\1\u00a9"+
        "\1\u00aa\1\u00ab\1\u00ac\1\u00ad\1\u00ae\4\uffff\1\u00af\1\u00b0"+
        "\1\u00b1\1\u00b2\1\u00b3\1\u00b4\4\uffff\1\u00b5\1\u00b6\1\u00b7"+
        "\1\u00b8\1\u00b9\1\u00ba\1\u00bb\1\u00bc\4\uffff\1\u00bd\1\u00be"+
        "\1\u00bf\1\u00c0\1\u00c1\1\u00c2\4\uffff\1\u00c3\1\u00c4\1\u00c5"+
        "\1\u00c6\1\u00c7\1\u00c8\1\u00c9\1\u00ca\1\u00cb\1\u00cc\4\uffff"+
        "\1\u00cd\1\u00ce\1\u00cf\1\u00d0\1\u00d1\1\u00d2\4\uffff\1\u00d3"+
        "\1\u00d4\1\u00d5\10\uffff\1\u00d6\1\u00d7\1\u00d8\1\u00d9\1\u00da"+
        "\5\uffff\1\u00db\2\uffff\1\u00dc\1\u00dd\1\u00de\1\u00df\1\uffff"+
        "\1\u00e0\32\uffff\1\u00e1\1\u00e2\1\u00e3\10\uffff\1\u00e4\1\u00e5"+
        "\1\u00e6\1\u00e7\1\u00e8\5\uffff\1\u00e9\2\uffff\1\u00ea\1\u00eb"+
        "\1\u00ec\1\u00ed\1\uffff\1\u00ee\31\uffff\1\u00ef\1\u00f0\1\u00f1"+
        "\1\u00f2\1\u00f3\1\u00f4\1\u00f5\4\uffff\1\u00f6\1\u00f7\1\u00f8"+
        "\1\u00f9\1\u00fa\1\u00fb\4\uffff\1\u00fc\1\u00fd\1\u00fe\10\uffff"+
        "\1\u00ff\1\u0100\1\u0101\1\u0102\1\u0103\5\uffff\1\u0104\2\uffff"+
        "\1\u0105\1\u0106\1\u0107\1\u0108\1\uffff\1\u0109\31\uffff\1\u010a"+
        "\1\u010b\1\u010c\10\uffff\1\u010d\1\u010e\1\u010f\1\u0110\1\u0111"+
        "\5\uffff\1\u0112\2\uffff\1\u0113\1\u0114\1\u0115\1\u0116\1\uffff"+
        "\1\u0117\31\uffff\1\u0118\1\u0119\1\u011a\1\u011b\1\u011c\1\u011d"+
        "\1\u011e\1\u011f\1\u0120\1\u0121}>";
    static final String[] DFA22_transitionS = {
            "\1\11\1\7\27\uffff\1\2\16\uffff\2\1\1\4\3\uffff\2\3\6\uffff"+
            "\1\5\1\uffff\4\6\1\7\11\10",
            "\1\22\1\20\20\uffff\1\23\6\uffff\1\13\16\uffff\2\12\1\15\3"+
            "\uffff\2\14\6\uffff\1\16\1\uffff\4\17\1\20\11\21",
            "\1\24\21\uffff\1\25",
            "\1\32\1\30\46\uffff\2\26\14\uffff\1\26\1\uffff\4\27\1\30\11"+
            "\31",
            "\1\33\21\uffff\1\34",
            "\1\45\1\43\27\uffff\1\36\16\uffff\2\35\1\40\3\uffff\2\37\6"+
            "\uffff\1\41\1\uffff\4\42\1\43\11\44",
            "\1\56\1\46\24\uffff\1\56\1\55\1\56\4\uffff\1\50\20\uffff\2"+
            "\51\1\52\1\53\1\56\1\54\10\uffff\1\46\11\47",
            "\1\56\1\70\24\uffff\1\56\1\67\1\56\4\uffff\1\62\20\uffff\2"+
            "\63\1\64\1\65\1\56\1\66\10\uffff\1\70\11\71",
            "\1\56\25\uffff\1\56\1\103\1\56\4\uffff\1\76\20\uffff\2\77\1"+
            "\100\1\101\1\56\1\102",
            "\1\56\25\uffff\1\56\1\121\1\56\4\uffff\1\110\1\uffff\1\122"+
            "\16\uffff\2\111\1\112\1\113\1\56\1\116",
            "\1\133\1\131\20\uffff\1\134\6\uffff\1\124\16\uffff\2\123\1"+
            "\126\3\uffff\2\125\6\uffff\1\127\1\uffff\4\130\1\131\11\132",
            "\1\135\21\uffff\1\136",
            "\1\143\1\141\46\uffff\2\137\14\uffff\1\137\1\uffff\4\140\1"+
            "\141\11\142",
            "\1\144\21\uffff\1\145",
            "\1\156\1\154\27\uffff\1\147\16\uffff\2\146\1\151\3\uffff\2"+
            "\150\6\uffff\1\152\1\uffff\4\153\1\154\11\155",
            "\1\56\1\157\24\uffff\1\56\1\172\1\56\4\uffff\1\161\20\uffff"+
            "\2\162\1\163\1\164\1\56\1\165\10\uffff\1\157\11\160",
            "\1\56\1\u0085\24\uffff\1\56\1\u0084\1\56\4\uffff\1\173\20\uffff"+
            "\2\174\1\175\1\176\1\56\1\177\10\uffff\1\u0085\11\u0086",
            "\1\56\25\uffff\1\56\1\u0090\1\56\4\uffff\1\u0087\20\uffff\2"+
            "\u0088\1\u0089\1\u008a\1\56\1\u008b",
            "\1\u0097\21\uffff\1\u009c\3\uffff\1\56\1\u009a\1\56\4\uffff"+
            "\1\u0091\1\uffff\1\u009b\16\uffff\2\u0092\1\u0093\1\u0094\1"+
            "\56\1\u0095",
            "\1\u00a0\1\u00a7\21\uffff\1\u00ad\1\u00ac\1\u00ab\3\uffff\1"+
            "\u00a2\2\u00a9\14\uffff\2\u00a1\1\u00a4\1\u009d\1\u009e\1\u009f"+
            "\2\u00a3\5\uffff\1\u00aa\1\u00a5\1\uffff\4\u00a6\1\u00a7\11"+
            "\u00a8",
            "\1\u00ae",
            "\1\u00af",
            "\1\u00b8\1\u00b6\27\uffff\1\u00b1\16\uffff\2\u00b0\1\u00b3"+
            "\3\uffff\2\u00b2\6\uffff\1\u00b4\1\uffff\4\u00b5\1\u00b6\11"+
            "\u00b7",
            "\1\56\1\u00b9\24\uffff\1\56\1\u00c0\1\56\4\uffff\1\u00bb\20"+
            "\uffff\2\u00bc\1\u00bd\1\u00be\1\56\1\u00bf\10\uffff\1\u00b9"+
            "\11\u00ba",
            "\1\56\1\u00cb\24\uffff\1\56\1\u00ca\1\56\4\uffff\1\u00c5\20"+
            "\uffff\2\u00c6\1\u00c7\1\u00c8\1\56\1\u00c9\10\uffff\1\u00cb"+
            "\11\u00cc",
            "\1\56\25\uffff\1\56\1\u00d6\1\56\4\uffff\1\u00d1\20\uffff\2"+
            "\u00d2\1\u00d3\1\u00d4\1\56\1\u00d5",
            "\1\56\25\uffff\1\56\1\u00e4\1\56\4\uffff\1\u00db\1\uffff\1"+
            "\u00e5\16\uffff\2\u00dc\1\u00dd\1\u00de\1\56\1\u00e1",
            "\1\u00e7\21\uffff\1\u00e6\12\uffff\1\u00e8",
            "\1\u00ec\1\u00f3\21\uffff\1\u00f9\1\u00f8\1\u00f7\3\uffff\1"+
            "\u00ee\2\u00f5\14\uffff\2\u00ed\1\u00f0\1\u00e9\1\u00ea\1\u00eb"+
            "\2\u00ef\5\uffff\1\u00f6\1\u00f1\1\uffff\4\u00f2\1\u00f3\11"+
            "\u00f4",
            "\1\u0102\1\u0100\20\uffff\1\u0103\6\uffff\1\u00fb\16\uffff"+
            "\2\u00fa\1\u00fd\3\uffff\2\u00fc\6\uffff\1\u00fe\1\uffff\4\u00ff"+
            "\1\u0100\11\u0101",
            "\1\u0104\21\uffff\1\u0105",
            "\1\u010a\1\u0108\46\uffff\2\u0106\14\uffff\1\u0106\1\uffff"+
            "\4\u0107\1\u0108\11\u0109",
            "\1\u010b\21\uffff\1\u010c",
            "\1\u0115\1\u0113\27\uffff\1\u010e\16\uffff\2\u010d\1\u0110"+
            "\3\uffff\2\u010f\6\uffff\1\u0111\1\uffff\4\u0112\1\u0113\11"+
            "\u0114",
            "\1\56\1\u0116\24\uffff\1\56\1\u0121\1\56\4\uffff\1\u0118\20"+
            "\uffff\2\u0119\1\u011a\1\u011b\1\56\1\u011c\10\uffff\1\u0116"+
            "\11\u0117",
            "\1\56\1\u012c\24\uffff\1\56\1\u012b\1\56\4\uffff\1\u0122\20"+
            "\uffff\2\u0123\1\u0124\1\u0125\1\56\1\u0126\10\uffff\1\u012c"+
            "\11\u012d",
            "\1\56\25\uffff\1\56\1\u0137\1\56\4\uffff\1\u012e\20\uffff\2"+
            "\u012f\1\u0130\1\u0131\1\56\1\u0132",
            "\1\56\25\uffff\1\56\1\u0141\1\56\4\uffff\1\u0138\1\uffff\1"+
            "\u0142\16\uffff\2\u0139\1\u013a\1\u013b\1\56\1\u013c",
            "\1\56\1\u0149\24\uffff\1\56\1\u0148\1\56\4\uffff\1\u0143\20"+
            "\uffff\2\u0144\1\u0145\1\u0146\1\56\1\u0147\10\uffff\1\u0149"+
            "\11\u014a",
            "\1\56\25\uffff\1\56\1\u0154\1\56\4\uffff\1\u014f\20\uffff\2"+
            "\u0150\1\u0151\1\u0152\1\56\1\u0153",
            "\1\u0159\57\uffff\1\u015a",
            "\1\56\25\uffff\3\56\25\uffff\2\56\1\u015b\3\56",
            "\1\56\25\uffff\1\56\1\u0164\1\56\25\uffff\2\u0165\1\u0166\1"+
            "\u0167\1\56\1\u0168",
            "\1\56\25\uffff\1\56\1\u0171\1\56\25\uffff\2\u0172\1\u0173\1"+
            "\u0174\1\56\1\u016e",
            "\3\56\1\uffff\4\56\14\uffff\1\56\12\uffff\1\56\25\uffff\1\56"+
            "\1\u0176\21\uffff\3\56",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "\1\u0191\57\uffff\1\u0192",
            "\1\56\25\uffff\3\56\25\uffff\2\56\1\u0193\3\56",
            "\1\56\25\uffff\1\56\1\u019c\1\56\25\uffff\2\u019d\1\u019e\1"+
            "\u019f\1\56\1\u01a0",
            "\1\56\25\uffff\1\56\1\u01a9\1\56\25\uffff\2\u01aa\1\u01ab\1"+
            "\u01ac\1\56\1\u01a6",
            "\3\56\1\uffff\4\56\14\uffff\1\56\12\uffff\1\56\25\uffff\1\56"+
            "\1\u01ae\21\uffff\3\56",
            "\1\uffff",
            "\1\56\1\u01ce\24\uffff\1\56\1\u01cd\1\56\4\uffff\1\u01c8\20"+
            "\uffff\2\u01c9\1\u01ca\1\u01cb\1\56\1\u01cc\10\uffff\12\u01ce",
            "\1\56\25\uffff\1\56\1\u01d8\1\56\4\uffff\1\u01d3\20\uffff\2"+
            "\u01d4\1\u01d5\1\u01d6\1\56\1\u01d7",
            "",
            "",
            "",
            "",
            "\1\u01dd\57\uffff\1\u01de",
            "\1\56\25\uffff\3\56\25\uffff\2\56\1\u01df\3\56",
            "\1\56\25\uffff\1\56\1\u01e8\1\56\25\uffff\2\u01e9\1\u01ea\1"+
            "\u01eb\1\56\1\u01ec",
            "\1\56\25\uffff\1\56\1\u01f5\1\56\25\uffff\2\u01f6\1\u01f7\1"+
            "\u01f8\1\56\1\u01f2",
            "\3\56\1\uffff\4\56\14\uffff\1\56\12\uffff\1\56\25\uffff\1\56"+
            "\1\u01fa\21\uffff\3\56",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "\1\u0214\57\uffff\1\u0215",
            "\1\56\25\uffff\3\56\25\uffff\2\56\1\u0216\3\56",
            "\1\56\25\uffff\1\56\1\u021f\1\56\25\uffff\2\u0220\1\u0221\1"+
            "\u0222\1\56\1\u0223",
            "\1\56\25\uffff\1\56\1\u022c\1\56\25\uffff\2\u022d\1\u022e\1"+
            "\u022f\1\56\1\u0229",
            "",
            "",
            "\3\56\1\uffff\4\56\14\uffff\1\56\12\uffff\1\56\25\uffff\1\56"+
            "\1\u0231\21\uffff\3\56",
            "",
            "",
            "\1\uffff",
            "\1\u0253\1\u0251\27\uffff\1\u024c\6\uffff\1\u0254\7\uffff\2"+
            "\u024b\1\u024e\3\uffff\2\u024d\6\uffff\1\u024f\1\uffff\4\u0250"+
            "\1\u0251\11\u0252",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff"
    };

    static final short[] DFA22_eot = DFA.unpackEncodedString(DFA22_eotS);
    static final short[] DFA22_eof = DFA.unpackEncodedString(DFA22_eofS);
    static final char[] DFA22_min = DFA.unpackEncodedStringToUnsignedChars(DFA22_minS);
    static final char[] DFA22_max = DFA.unpackEncodedStringToUnsignedChars(DFA22_maxS);
    static final short[] DFA22_accept = DFA.unpackEncodedString(DFA22_acceptS);
    static final short[] DFA22_special = DFA.unpackEncodedString(DFA22_specialS);
    static final short[][] DFA22_transition;

    static {
        int numStates = DFA22_transitionS.length;
        DFA22_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA22_transition[i] = DFA.unpackEncodedString(DFA22_transitionS[i]);
        }
    }

    class DFA22 extends DFA {

        public DFA22(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 22;
            this.eot = DFA22_eot;
            this.eof = DFA22_eof;
            this.min = DFA22_min;
            this.max = DFA22_max;
            this.accept = DFA22_accept;
            this.special = DFA22_special;
            this.transition = DFA22_transition;
        }
        public String getDescription() {
            return "387:6: ( varDecl | functionPointerVarDecl )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA22_45 = input.LA(1);

                         
                        int index22_45 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_45);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA22_55 = input.LA(1);

                         
                        int index22_55 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_55);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA22_67 = input.LA(1);

                         
                        int index22_67 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_67);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA22_81 = input.LA(1);

                         
                        int index22_81 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_81);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA22_83 = input.LA(1);

                         
                        int index22_83 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_83);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA22_84 = input.LA(1);

                         
                        int index22_84 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_84);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA22_85 = input.LA(1);

                         
                        int index22_85 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_85);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA22_86 = input.LA(1);

                         
                        int index22_86 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_86);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA22_87 = input.LA(1);

                         
                        int index22_87 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_87);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA22_88 = input.LA(1);

                         
                        int index22_88 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_88);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA22_89 = input.LA(1);

                         
                        int index22_89 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_89);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA22_90 = input.LA(1);

                         
                        int index22_90 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_90);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA22_91 = input.LA(1);

                         
                        int index22_91 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_91);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA22_92 = input.LA(1);

                         
                        int index22_92 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_92);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA22_93 = input.LA(1);

                         
                        int index22_93 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_93);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA22_94 = input.LA(1);

                         
                        int index22_94 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_94);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA22_95 = input.LA(1);

                         
                        int index22_95 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_95);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA22_96 = input.LA(1);

                         
                        int index22_96 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_96);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA22_97 = input.LA(1);

                         
                        int index22_97 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_97);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA22_98 = input.LA(1);

                         
                        int index22_98 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_98);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA22_99 = input.LA(1);

                         
                        int index22_99 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_99);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA22_100 = input.LA(1);

                         
                        int index22_100 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_100);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA22_101 = input.LA(1);

                         
                        int index22_101 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_101);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA22_102 = input.LA(1);

                         
                        int index22_102 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_102);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA22_103 = input.LA(1);

                         
                        int index22_103 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_103);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA22_104 = input.LA(1);

                         
                        int index22_104 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_104);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA22_105 = input.LA(1);

                         
                        int index22_105 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_105);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA22_106 = input.LA(1);

                         
                        int index22_106 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_106);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA22_107 = input.LA(1);

                         
                        int index22_107 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_107);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA22_108 = input.LA(1);

                         
                        int index22_108 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_108);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA22_109 = input.LA(1);

                         
                        int index22_109 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_109);
                        if ( s>=0 ) return s;
                        break;
                    case 31 : 
                        int LA22_110 = input.LA(1);

                         
                        int index22_110 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_110);
                        if ( s>=0 ) return s;
                        break;
                    case 32 : 
                        int LA22_111 = input.LA(1);

                         
                        int index22_111 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_111);
                        if ( s>=0 ) return s;
                        break;
                    case 33 : 
                        int LA22_112 = input.LA(1);

                         
                        int index22_112 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_112);
                        if ( s>=0 ) return s;
                        break;
                    case 34 : 
                        int LA22_113 = input.LA(1);

                         
                        int index22_113 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_113);
                        if ( s>=0 ) return s;
                        break;
                    case 35 : 
                        int LA22_114 = input.LA(1);

                         
                        int index22_114 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_114);
                        if ( s>=0 ) return s;
                        break;
                    case 36 : 
                        int LA22_115 = input.LA(1);

                         
                        int index22_115 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_115);
                        if ( s>=0 ) return s;
                        break;
                    case 37 : 
                        int LA22_116 = input.LA(1);

                         
                        int index22_116 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_116);
                        if ( s>=0 ) return s;
                        break;
                    case 38 : 
                        int LA22_117 = input.LA(1);

                         
                        int index22_117 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_117);
                        if ( s>=0 ) return s;
                        break;
                    case 39 : 
                        int LA22_122 = input.LA(1);

                         
                        int index22_122 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_122);
                        if ( s>=0 ) return s;
                        break;
                    case 40 : 
                        int LA22_123 = input.LA(1);

                         
                        int index22_123 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_123);
                        if ( s>=0 ) return s;
                        break;
                    case 41 : 
                        int LA22_124 = input.LA(1);

                         
                        int index22_124 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_124);
                        if ( s>=0 ) return s;
                        break;
                    case 42 : 
                        int LA22_125 = input.LA(1);

                         
                        int index22_125 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_125);
                        if ( s>=0 ) return s;
                        break;
                    case 43 : 
                        int LA22_126 = input.LA(1);

                         
                        int index22_126 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_126);
                        if ( s>=0 ) return s;
                        break;
                    case 44 : 
                        int LA22_127 = input.LA(1);

                         
                        int index22_127 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_127);
                        if ( s>=0 ) return s;
                        break;
                    case 45 : 
                        int LA22_132 = input.LA(1);

                         
                        int index22_132 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_132);
                        if ( s>=0 ) return s;
                        break;
                    case 46 : 
                        int LA22_133 = input.LA(1);

                         
                        int index22_133 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_133);
                        if ( s>=0 ) return s;
                        break;
                    case 47 : 
                        int LA22_134 = input.LA(1);

                         
                        int index22_134 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_134);
                        if ( s>=0 ) return s;
                        break;
                    case 48 : 
                        int LA22_135 = input.LA(1);

                         
                        int index22_135 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_135);
                        if ( s>=0 ) return s;
                        break;
                    case 49 : 
                        int LA22_136 = input.LA(1);

                         
                        int index22_136 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_136);
                        if ( s>=0 ) return s;
                        break;
                    case 50 : 
                        int LA22_137 = input.LA(1);

                         
                        int index22_137 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_137);
                        if ( s>=0 ) return s;
                        break;
                    case 51 : 
                        int LA22_138 = input.LA(1);

                         
                        int index22_138 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_138);
                        if ( s>=0 ) return s;
                        break;
                    case 52 : 
                        int LA22_139 = input.LA(1);

                         
                        int index22_139 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_139);
                        if ( s>=0 ) return s;
                        break;
                    case 53 : 
                        int LA22_144 = input.LA(1);

                         
                        int index22_144 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_144);
                        if ( s>=0 ) return s;
                        break;
                    case 54 : 
                        int LA22_145 = input.LA(1);

                         
                        int index22_145 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_145);
                        if ( s>=0 ) return s;
                        break;
                    case 55 : 
                        int LA22_146 = input.LA(1);

                         
                        int index22_146 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_146);
                        if ( s>=0 ) return s;
                        break;
                    case 56 : 
                        int LA22_147 = input.LA(1);

                         
                        int index22_147 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_147);
                        if ( s>=0 ) return s;
                        break;
                    case 57 : 
                        int LA22_148 = input.LA(1);

                         
                        int index22_148 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_148);
                        if ( s>=0 ) return s;
                        break;
                    case 58 : 
                        int LA22_149 = input.LA(1);

                         
                        int index22_149 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_149);
                        if ( s>=0 ) return s;
                        break;
                    case 59 : 
                        int LA22_151 = input.LA(1);

                         
                        int index22_151 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_151);
                        if ( s>=0 ) return s;
                        break;
                    case 60 : 
                        int LA22_154 = input.LA(1);

                         
                        int index22_154 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_154);
                        if ( s>=0 ) return s;
                        break;
                    case 61 : 
                        int LA22_155 = input.LA(1);

                         
                        int index22_155 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_155);
                        if ( s>=0 ) return s;
                        break;
                    case 62 : 
                        int LA22_156 = input.LA(1);

                         
                        int index22_156 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_156);
                        if ( s>=0 ) return s;
                        break;
                    case 63 : 
                        int LA22_157 = input.LA(1);

                         
                        int index22_157 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_157);
                        if ( s>=0 ) return s;
                        break;
                    case 64 : 
                        int LA22_158 = input.LA(1);

                         
                        int index22_158 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_158);
                        if ( s>=0 ) return s;
                        break;
                    case 65 : 
                        int LA22_159 = input.LA(1);

                         
                        int index22_159 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_159);
                        if ( s>=0 ) return s;
                        break;
                    case 66 : 
                        int LA22_160 = input.LA(1);

                         
                        int index22_160 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_160);
                        if ( s>=0 ) return s;
                        break;
                    case 67 : 
                        int LA22_161 = input.LA(1);

                         
                        int index22_161 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_161);
                        if ( s>=0 ) return s;
                        break;
                    case 68 : 
                        int LA22_162 = input.LA(1);

                         
                        int index22_162 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_162);
                        if ( s>=0 ) return s;
                        break;
                    case 69 : 
                        int LA22_163 = input.LA(1);

                         
                        int index22_163 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_163);
                        if ( s>=0 ) return s;
                        break;
                    case 70 : 
                        int LA22_164 = input.LA(1);

                         
                        int index22_164 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_164);
                        if ( s>=0 ) return s;
                        break;
                    case 71 : 
                        int LA22_165 = input.LA(1);

                         
                        int index22_165 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_165);
                        if ( s>=0 ) return s;
                        break;
                    case 72 : 
                        int LA22_166 = input.LA(1);

                         
                        int index22_166 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_166);
                        if ( s>=0 ) return s;
                        break;
                    case 73 : 
                        int LA22_167 = input.LA(1);

                         
                        int index22_167 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_167);
                        if ( s>=0 ) return s;
                        break;
                    case 74 : 
                        int LA22_168 = input.LA(1);

                         
                        int index22_168 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_168);
                        if ( s>=0 ) return s;
                        break;
                    case 75 : 
                        int LA22_169 = input.LA(1);

                         
                        int index22_169 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_169);
                        if ( s>=0 ) return s;
                        break;
                    case 76 : 
                        int LA22_170 = input.LA(1);

                         
                        int index22_170 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_170);
                        if ( s>=0 ) return s;
                        break;
                    case 77 : 
                        int LA22_171 = input.LA(1);

                         
                        int index22_171 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_171);
                        if ( s>=0 ) return s;
                        break;
                    case 78 : 
                        int LA22_172 = input.LA(1);

                         
                        int index22_172 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_172);
                        if ( s>=0 ) return s;
                        break;
                    case 79 : 
                        int LA22_173 = input.LA(1);

                         
                        int index22_173 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_173);
                        if ( s>=0 ) return s;
                        break;
                    case 80 : 
                        int LA22_174 = input.LA(1);

                         
                        int index22_174 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_174);
                        if ( s>=0 ) return s;
                        break;
                    case 81 : 
                        int LA22_175 = input.LA(1);

                         
                        int index22_175 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_175);
                        if ( s>=0 ) return s;
                        break;
                    case 82 : 
                        int LA22_176 = input.LA(1);

                         
                        int index22_176 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_176);
                        if ( s>=0 ) return s;
                        break;
                    case 83 : 
                        int LA22_177 = input.LA(1);

                         
                        int index22_177 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_177);
                        if ( s>=0 ) return s;
                        break;
                    case 84 : 
                        int LA22_178 = input.LA(1);

                         
                        int index22_178 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_178);
                        if ( s>=0 ) return s;
                        break;
                    case 85 : 
                        int LA22_179 = input.LA(1);

                         
                        int index22_179 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_179);
                        if ( s>=0 ) return s;
                        break;
                    case 86 : 
                        int LA22_180 = input.LA(1);

                         
                        int index22_180 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_180);
                        if ( s>=0 ) return s;
                        break;
                    case 87 : 
                        int LA22_181 = input.LA(1);

                         
                        int index22_181 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_181);
                        if ( s>=0 ) return s;
                        break;
                    case 88 : 
                        int LA22_182 = input.LA(1);

                         
                        int index22_182 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_182);
                        if ( s>=0 ) return s;
                        break;
                    case 89 : 
                        int LA22_183 = input.LA(1);

                         
                        int index22_183 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_183);
                        if ( s>=0 ) return s;
                        break;
                    case 90 : 
                        int LA22_184 = input.LA(1);

                         
                        int index22_184 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_184);
                        if ( s>=0 ) return s;
                        break;
                    case 91 : 
                        int LA22_185 = input.LA(1);

                         
                        int index22_185 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_185);
                        if ( s>=0 ) return s;
                        break;
                    case 92 : 
                        int LA22_186 = input.LA(1);

                         
                        int index22_186 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_186);
                        if ( s>=0 ) return s;
                        break;
                    case 93 : 
                        int LA22_187 = input.LA(1);

                         
                        int index22_187 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_187);
                        if ( s>=0 ) return s;
                        break;
                    case 94 : 
                        int LA22_188 = input.LA(1);

                         
                        int index22_188 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_188);
                        if ( s>=0 ) return s;
                        break;
                    case 95 : 
                        int LA22_189 = input.LA(1);

                         
                        int index22_189 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_189);
                        if ( s>=0 ) return s;
                        break;
                    case 96 : 
                        int LA22_190 = input.LA(1);

                         
                        int index22_190 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_190);
                        if ( s>=0 ) return s;
                        break;
                    case 97 : 
                        int LA22_191 = input.LA(1);

                         
                        int index22_191 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_191);
                        if ( s>=0 ) return s;
                        break;
                    case 98 : 
                        int LA22_192 = input.LA(1);

                         
                        int index22_192 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_192);
                        if ( s>=0 ) return s;
                        break;
                    case 99 : 
                        int LA22_197 = input.LA(1);

                         
                        int index22_197 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_197);
                        if ( s>=0 ) return s;
                        break;
                    case 100 : 
                        int LA22_198 = input.LA(1);

                         
                        int index22_198 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_198);
                        if ( s>=0 ) return s;
                        break;
                    case 101 : 
                        int LA22_199 = input.LA(1);

                         
                        int index22_199 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_199);
                        if ( s>=0 ) return s;
                        break;
                    case 102 : 
                        int LA22_200 = input.LA(1);

                         
                        int index22_200 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_200);
                        if ( s>=0 ) return s;
                        break;
                    case 103 : 
                        int LA22_201 = input.LA(1);

                         
                        int index22_201 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_201);
                        if ( s>=0 ) return s;
                        break;
                    case 104 : 
                        int LA22_202 = input.LA(1);

                         
                        int index22_202 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_202);
                        if ( s>=0 ) return s;
                        break;
                    case 105 : 
                        int LA22_203 = input.LA(1);

                         
                        int index22_203 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_203);
                        if ( s>=0 ) return s;
                        break;
                    case 106 : 
                        int LA22_204 = input.LA(1);

                         
                        int index22_204 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_204);
                        if ( s>=0 ) return s;
                        break;
                    case 107 : 
                        int LA22_209 = input.LA(1);

                         
                        int index22_209 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_209);
                        if ( s>=0 ) return s;
                        break;
                    case 108 : 
                        int LA22_210 = input.LA(1);

                         
                        int index22_210 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_210);
                        if ( s>=0 ) return s;
                        break;
                    case 109 : 
                        int LA22_211 = input.LA(1);

                         
                        int index22_211 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_211);
                        if ( s>=0 ) return s;
                        break;
                    case 110 : 
                        int LA22_212 = input.LA(1);

                         
                        int index22_212 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_212);
                        if ( s>=0 ) return s;
                        break;
                    case 111 : 
                        int LA22_213 = input.LA(1);

                         
                        int index22_213 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_213);
                        if ( s>=0 ) return s;
                        break;
                    case 112 : 
                        int LA22_214 = input.LA(1);

                         
                        int index22_214 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_214);
                        if ( s>=0 ) return s;
                        break;
                    case 113 : 
                        int LA22_219 = input.LA(1);

                         
                        int index22_219 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_219);
                        if ( s>=0 ) return s;
                        break;
                    case 114 : 
                        int LA22_220 = input.LA(1);

                         
                        int index22_220 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_220);
                        if ( s>=0 ) return s;
                        break;
                    case 115 : 
                        int LA22_221 = input.LA(1);

                         
                        int index22_221 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_221);
                        if ( s>=0 ) return s;
                        break;
                    case 116 : 
                        int LA22_222 = input.LA(1);

                         
                        int index22_222 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_222);
                        if ( s>=0 ) return s;
                        break;
                    case 117 : 
                        int LA22_225 = input.LA(1);

                         
                        int index22_225 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_225);
                        if ( s>=0 ) return s;
                        break;
                    case 118 : 
                        int LA22_228 = input.LA(1);

                         
                        int index22_228 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_228);
                        if ( s>=0 ) return s;
                        break;
                    case 119 : 
                        int LA22_229 = input.LA(1);

                         
                        int index22_229 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_229);
                        if ( s>=0 ) return s;
                        break;
                    case 120 : 
                        int LA22_230 = input.LA(1);

                         
                        int index22_230 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_230);
                        if ( s>=0 ) return s;
                        break;
                    case 121 : 
                        int LA22_231 = input.LA(1);

                         
                        int index22_231 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_231);
                        if ( s>=0 ) return s;
                        break;
                    case 122 : 
                        int LA22_232 = input.LA(1);

                         
                        int index22_232 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_232);
                        if ( s>=0 ) return s;
                        break;
                    case 123 : 
                        int LA22_233 = input.LA(1);

                         
                        int index22_233 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_233);
                        if ( s>=0 ) return s;
                        break;
                    case 124 : 
                        int LA22_234 = input.LA(1);

                         
                        int index22_234 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_234);
                        if ( s>=0 ) return s;
                        break;
                    case 125 : 
                        int LA22_235 = input.LA(1);

                         
                        int index22_235 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_235);
                        if ( s>=0 ) return s;
                        break;
                    case 126 : 
                        int LA22_236 = input.LA(1);

                         
                        int index22_236 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_236);
                        if ( s>=0 ) return s;
                        break;
                    case 127 : 
                        int LA22_237 = input.LA(1);

                         
                        int index22_237 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_237);
                        if ( s>=0 ) return s;
                        break;
                    case 128 : 
                        int LA22_238 = input.LA(1);

                         
                        int index22_238 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_238);
                        if ( s>=0 ) return s;
                        break;
                    case 129 : 
                        int LA22_239 = input.LA(1);

                         
                        int index22_239 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_239);
                        if ( s>=0 ) return s;
                        break;
                    case 130 : 
                        int LA22_240 = input.LA(1);

                         
                        int index22_240 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_240);
                        if ( s>=0 ) return s;
                        break;
                    case 131 : 
                        int LA22_241 = input.LA(1);

                         
                        int index22_241 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_241);
                        if ( s>=0 ) return s;
                        break;
                    case 132 : 
                        int LA22_242 = input.LA(1);

                         
                        int index22_242 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_242);
                        if ( s>=0 ) return s;
                        break;
                    case 133 : 
                        int LA22_243 = input.LA(1);

                         
                        int index22_243 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_243);
                        if ( s>=0 ) return s;
                        break;
                    case 134 : 
                        int LA22_244 = input.LA(1);

                         
                        int index22_244 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_244);
                        if ( s>=0 ) return s;
                        break;
                    case 135 : 
                        int LA22_245 = input.LA(1);

                         
                        int index22_245 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_245);
                        if ( s>=0 ) return s;
                        break;
                    case 136 : 
                        int LA22_246 = input.LA(1);

                         
                        int index22_246 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_246);
                        if ( s>=0 ) return s;
                        break;
                    case 137 : 
                        int LA22_247 = input.LA(1);

                         
                        int index22_247 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_247);
                        if ( s>=0 ) return s;
                        break;
                    case 138 : 
                        int LA22_248 = input.LA(1);

                         
                        int index22_248 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_248);
                        if ( s>=0 ) return s;
                        break;
                    case 139 : 
                        int LA22_249 = input.LA(1);

                         
                        int index22_249 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_249);
                        if ( s>=0 ) return s;
                        break;
                    case 140 : 
                        int LA22_250 = input.LA(1);

                         
                        int index22_250 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_250);
                        if ( s>=0 ) return s;
                        break;
                    case 141 : 
                        int LA22_251 = input.LA(1);

                         
                        int index22_251 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_251);
                        if ( s>=0 ) return s;
                        break;
                    case 142 : 
                        int LA22_252 = input.LA(1);

                         
                        int index22_252 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_252);
                        if ( s>=0 ) return s;
                        break;
                    case 143 : 
                        int LA22_253 = input.LA(1);

                         
                        int index22_253 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_253);
                        if ( s>=0 ) return s;
                        break;
                    case 144 : 
                        int LA22_254 = input.LA(1);

                         
                        int index22_254 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_254);
                        if ( s>=0 ) return s;
                        break;
                    case 145 : 
                        int LA22_255 = input.LA(1);

                         
                        int index22_255 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_255);
                        if ( s>=0 ) return s;
                        break;
                    case 146 : 
                        int LA22_256 = input.LA(1);

                         
                        int index22_256 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_256);
                        if ( s>=0 ) return s;
                        break;
                    case 147 : 
                        int LA22_257 = input.LA(1);

                         
                        int index22_257 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_257);
                        if ( s>=0 ) return s;
                        break;
                    case 148 : 
                        int LA22_258 = input.LA(1);

                         
                        int index22_258 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_258);
                        if ( s>=0 ) return s;
                        break;
                    case 149 : 
                        int LA22_259 = input.LA(1);

                         
                        int index22_259 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_259);
                        if ( s>=0 ) return s;
                        break;
                    case 150 : 
                        int LA22_260 = input.LA(1);

                         
                        int index22_260 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_260);
                        if ( s>=0 ) return s;
                        break;
                    case 151 : 
                        int LA22_261 = input.LA(1);

                         
                        int index22_261 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_261);
                        if ( s>=0 ) return s;
                        break;
                    case 152 : 
                        int LA22_262 = input.LA(1);

                         
                        int index22_262 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_262);
                        if ( s>=0 ) return s;
                        break;
                    case 153 : 
                        int LA22_263 = input.LA(1);

                         
                        int index22_263 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_263);
                        if ( s>=0 ) return s;
                        break;
                    case 154 : 
                        int LA22_264 = input.LA(1);

                         
                        int index22_264 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_264);
                        if ( s>=0 ) return s;
                        break;
                    case 155 : 
                        int LA22_265 = input.LA(1);

                         
                        int index22_265 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_265);
                        if ( s>=0 ) return s;
                        break;
                    case 156 : 
                        int LA22_266 = input.LA(1);

                         
                        int index22_266 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_266);
                        if ( s>=0 ) return s;
                        break;
                    case 157 : 
                        int LA22_267 = input.LA(1);

                         
                        int index22_267 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_267);
                        if ( s>=0 ) return s;
                        break;
                    case 158 : 
                        int LA22_268 = input.LA(1);

                         
                        int index22_268 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_268);
                        if ( s>=0 ) return s;
                        break;
                    case 159 : 
                        int LA22_269 = input.LA(1);

                         
                        int index22_269 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_269);
                        if ( s>=0 ) return s;
                        break;
                    case 160 : 
                        int LA22_270 = input.LA(1);

                         
                        int index22_270 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_270);
                        if ( s>=0 ) return s;
                        break;
                    case 161 : 
                        int LA22_271 = input.LA(1);

                         
                        int index22_271 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_271);
                        if ( s>=0 ) return s;
                        break;
                    case 162 : 
                        int LA22_272 = input.LA(1);

                         
                        int index22_272 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_272);
                        if ( s>=0 ) return s;
                        break;
                    case 163 : 
                        int LA22_273 = input.LA(1);

                         
                        int index22_273 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_273);
                        if ( s>=0 ) return s;
                        break;
                    case 164 : 
                        int LA22_274 = input.LA(1);

                         
                        int index22_274 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_274);
                        if ( s>=0 ) return s;
                        break;
                    case 165 : 
                        int LA22_275 = input.LA(1);

                         
                        int index22_275 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_275);
                        if ( s>=0 ) return s;
                        break;
                    case 166 : 
                        int LA22_276 = input.LA(1);

                         
                        int index22_276 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_276);
                        if ( s>=0 ) return s;
                        break;
                    case 167 : 
                        int LA22_277 = input.LA(1);

                         
                        int index22_277 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_277);
                        if ( s>=0 ) return s;
                        break;
                    case 168 : 
                        int LA22_278 = input.LA(1);

                         
                        int index22_278 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_278);
                        if ( s>=0 ) return s;
                        break;
                    case 169 : 
                        int LA22_279 = input.LA(1);

                         
                        int index22_279 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_279);
                        if ( s>=0 ) return s;
                        break;
                    case 170 : 
                        int LA22_280 = input.LA(1);

                         
                        int index22_280 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_280);
                        if ( s>=0 ) return s;
                        break;
                    case 171 : 
                        int LA22_281 = input.LA(1);

                         
                        int index22_281 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_281);
                        if ( s>=0 ) return s;
                        break;
                    case 172 : 
                        int LA22_282 = input.LA(1);

                         
                        int index22_282 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_282);
                        if ( s>=0 ) return s;
                        break;
                    case 173 : 
                        int LA22_283 = input.LA(1);

                         
                        int index22_283 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_283);
                        if ( s>=0 ) return s;
                        break;
                    case 174 : 
                        int LA22_284 = input.LA(1);

                         
                        int index22_284 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_284);
                        if ( s>=0 ) return s;
                        break;
                    case 175 : 
                        int LA22_289 = input.LA(1);

                         
                        int index22_289 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_289);
                        if ( s>=0 ) return s;
                        break;
                    case 176 : 
                        int LA22_290 = input.LA(1);

                         
                        int index22_290 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_290);
                        if ( s>=0 ) return s;
                        break;
                    case 177 : 
                        int LA22_291 = input.LA(1);

                         
                        int index22_291 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_291);
                        if ( s>=0 ) return s;
                        break;
                    case 178 : 
                        int LA22_292 = input.LA(1);

                         
                        int index22_292 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_292);
                        if ( s>=0 ) return s;
                        break;
                    case 179 : 
                        int LA22_293 = input.LA(1);

                         
                        int index22_293 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_293);
                        if ( s>=0 ) return s;
                        break;
                    case 180 : 
                        int LA22_294 = input.LA(1);

                         
                        int index22_294 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_294);
                        if ( s>=0 ) return s;
                        break;
                    case 181 : 
                        int LA22_299 = input.LA(1);

                         
                        int index22_299 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_299);
                        if ( s>=0 ) return s;
                        break;
                    case 182 : 
                        int LA22_300 = input.LA(1);

                         
                        int index22_300 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_300);
                        if ( s>=0 ) return s;
                        break;
                    case 183 : 
                        int LA22_301 = input.LA(1);

                         
                        int index22_301 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_301);
                        if ( s>=0 ) return s;
                        break;
                    case 184 : 
                        int LA22_302 = input.LA(1);

                         
                        int index22_302 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_302);
                        if ( s>=0 ) return s;
                        break;
                    case 185 : 
                        int LA22_303 = input.LA(1);

                         
                        int index22_303 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_303);
                        if ( s>=0 ) return s;
                        break;
                    case 186 : 
                        int LA22_304 = input.LA(1);

                         
                        int index22_304 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_304);
                        if ( s>=0 ) return s;
                        break;
                    case 187 : 
                        int LA22_305 = input.LA(1);

                         
                        int index22_305 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_305);
                        if ( s>=0 ) return s;
                        break;
                    case 188 : 
                        int LA22_306 = input.LA(1);

                         
                        int index22_306 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_306);
                        if ( s>=0 ) return s;
                        break;
                    case 189 : 
                        int LA22_311 = input.LA(1);

                         
                        int index22_311 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_311);
                        if ( s>=0 ) return s;
                        break;
                    case 190 : 
                        int LA22_312 = input.LA(1);

                         
                        int index22_312 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_312);
                        if ( s>=0 ) return s;
                        break;
                    case 191 : 
                        int LA22_313 = input.LA(1);

                         
                        int index22_313 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_313);
                        if ( s>=0 ) return s;
                        break;
                    case 192 : 
                        int LA22_314 = input.LA(1);

                         
                        int index22_314 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_314);
                        if ( s>=0 ) return s;
                        break;
                    case 193 : 
                        int LA22_315 = input.LA(1);

                         
                        int index22_315 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_315);
                        if ( s>=0 ) return s;
                        break;
                    case 194 : 
                        int LA22_316 = input.LA(1);

                         
                        int index22_316 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_316);
                        if ( s>=0 ) return s;
                        break;
                    case 195 : 
                        int LA22_321 = input.LA(1);

                         
                        int index22_321 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_321);
                        if ( s>=0 ) return s;
                        break;
                    case 196 : 
                        int LA22_322 = input.LA(1);

                         
                        int index22_322 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_322);
                        if ( s>=0 ) return s;
                        break;
                    case 197 : 
                        int LA22_323 = input.LA(1);

                         
                        int index22_323 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_323);
                        if ( s>=0 ) return s;
                        break;
                    case 198 : 
                        int LA22_324 = input.LA(1);

                         
                        int index22_324 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_324);
                        if ( s>=0 ) return s;
                        break;
                    case 199 : 
                        int LA22_325 = input.LA(1);

                         
                        int index22_325 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_325);
                        if ( s>=0 ) return s;
                        break;
                    case 200 : 
                        int LA22_326 = input.LA(1);

                         
                        int index22_326 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_326);
                        if ( s>=0 ) return s;
                        break;
                    case 201 : 
                        int LA22_327 = input.LA(1);

                         
                        int index22_327 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_327);
                        if ( s>=0 ) return s;
                        break;
                    case 202 : 
                        int LA22_328 = input.LA(1);

                         
                        int index22_328 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_328);
                        if ( s>=0 ) return s;
                        break;
                    case 203 : 
                        int LA22_329 = input.LA(1);

                         
                        int index22_329 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_329);
                        if ( s>=0 ) return s;
                        break;
                    case 204 : 
                        int LA22_330 = input.LA(1);

                         
                        int index22_330 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_330);
                        if ( s>=0 ) return s;
                        break;
                    case 205 : 
                        int LA22_335 = input.LA(1);

                         
                        int index22_335 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_335);
                        if ( s>=0 ) return s;
                        break;
                    case 206 : 
                        int LA22_336 = input.LA(1);

                         
                        int index22_336 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_336);
                        if ( s>=0 ) return s;
                        break;
                    case 207 : 
                        int LA22_337 = input.LA(1);

                         
                        int index22_337 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_337);
                        if ( s>=0 ) return s;
                        break;
                    case 208 : 
                        int LA22_338 = input.LA(1);

                         
                        int index22_338 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_338);
                        if ( s>=0 ) return s;
                        break;
                    case 209 : 
                        int LA22_339 = input.LA(1);

                         
                        int index22_339 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_339);
                        if ( s>=0 ) return s;
                        break;
                    case 210 : 
                        int LA22_340 = input.LA(1);

                         
                        int index22_340 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_340);
                        if ( s>=0 ) return s;
                        break;
                    case 211 : 
                        int LA22_345 = input.LA(1);

                         
                        int index22_345 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_345);
                        if ( s>=0 ) return s;
                        break;
                    case 212 : 
                        int LA22_346 = input.LA(1);

                         
                        int index22_346 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_346);
                        if ( s>=0 ) return s;
                        break;
                    case 213 : 
                        int LA22_347 = input.LA(1);

                         
                        int index22_347 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_347);
                        if ( s>=0 ) return s;
                        break;
                    case 214 : 
                        int LA22_356 = input.LA(1);

                         
                        int index22_356 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_356);
                        if ( s>=0 ) return s;
                        break;
                    case 215 : 
                        int LA22_357 = input.LA(1);

                         
                        int index22_357 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_357);
                        if ( s>=0 ) return s;
                        break;
                    case 216 : 
                        int LA22_358 = input.LA(1);

                         
                        int index22_358 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_358);
                        if ( s>=0 ) return s;
                        break;
                    case 217 : 
                        int LA22_359 = input.LA(1);

                         
                        int index22_359 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_359);
                        if ( s>=0 ) return s;
                        break;
                    case 218 : 
                        int LA22_360 = input.LA(1);

                         
                        int index22_360 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_360);
                        if ( s>=0 ) return s;
                        break;
                    case 219 : 
                        int LA22_366 = input.LA(1);

                         
                        int index22_366 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_366);
                        if ( s>=0 ) return s;
                        break;
                    case 220 : 
                        int LA22_369 = input.LA(1);

                         
                        int index22_369 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_369);
                        if ( s>=0 ) return s;
                        break;
                    case 221 : 
                        int LA22_370 = input.LA(1);

                         
                        int index22_370 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_370);
                        if ( s>=0 ) return s;
                        break;
                    case 222 : 
                        int LA22_371 = input.LA(1);

                         
                        int index22_371 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_371);
                        if ( s>=0 ) return s;
                        break;
                    case 223 : 
                        int LA22_372 = input.LA(1);

                         
                        int index22_372 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_372);
                        if ( s>=0 ) return s;
                        break;
                    case 224 : 
                        int LA22_374 = input.LA(1);

                         
                        int index22_374 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_374);
                        if ( s>=0 ) return s;
                        break;
                    case 225 : 
                        int LA22_401 = input.LA(1);

                         
                        int index22_401 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_401);
                        if ( s>=0 ) return s;
                        break;
                    case 226 : 
                        int LA22_402 = input.LA(1);

                         
                        int index22_402 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_402);
                        if ( s>=0 ) return s;
                        break;
                    case 227 : 
                        int LA22_403 = input.LA(1);

                         
                        int index22_403 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_403);
                        if ( s>=0 ) return s;
                        break;
                    case 228 : 
                        int LA22_412 = input.LA(1);

                         
                        int index22_412 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_412);
                        if ( s>=0 ) return s;
                        break;
                    case 229 : 
                        int LA22_413 = input.LA(1);

                         
                        int index22_413 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_413);
                        if ( s>=0 ) return s;
                        break;
                    case 230 : 
                        int LA22_414 = input.LA(1);

                         
                        int index22_414 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_414);
                        if ( s>=0 ) return s;
                        break;
                    case 231 : 
                        int LA22_415 = input.LA(1);

                         
                        int index22_415 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_415);
                        if ( s>=0 ) return s;
                        break;
                    case 232 : 
                        int LA22_416 = input.LA(1);

                         
                        int index22_416 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_416);
                        if ( s>=0 ) return s;
                        break;
                    case 233 : 
                        int LA22_422 = input.LA(1);

                         
                        int index22_422 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_422);
                        if ( s>=0 ) return s;
                        break;
                    case 234 : 
                        int LA22_425 = input.LA(1);

                         
                        int index22_425 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_425);
                        if ( s>=0 ) return s;
                        break;
                    case 235 : 
                        int LA22_426 = input.LA(1);

                         
                        int index22_426 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_426);
                        if ( s>=0 ) return s;
                        break;
                    case 236 : 
                        int LA22_427 = input.LA(1);

                         
                        int index22_427 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_427);
                        if ( s>=0 ) return s;
                        break;
                    case 237 : 
                        int LA22_428 = input.LA(1);

                         
                        int index22_428 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_428);
                        if ( s>=0 ) return s;
                        break;
                    case 238 : 
                        int LA22_430 = input.LA(1);

                         
                        int index22_430 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_430);
                        if ( s>=0 ) return s;
                        break;
                    case 239 : 
                        int LA22_456 = input.LA(1);

                         
                        int index22_456 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_456);
                        if ( s>=0 ) return s;
                        break;
                    case 240 : 
                        int LA22_457 = input.LA(1);

                         
                        int index22_457 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_457);
                        if ( s>=0 ) return s;
                        break;
                    case 241 : 
                        int LA22_458 = input.LA(1);

                         
                        int index22_458 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_458);
                        if ( s>=0 ) return s;
                        break;
                    case 242 : 
                        int LA22_459 = input.LA(1);

                         
                        int index22_459 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_459);
                        if ( s>=0 ) return s;
                        break;
                    case 243 : 
                        int LA22_460 = input.LA(1);

                         
                        int index22_460 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_460);
                        if ( s>=0 ) return s;
                        break;
                    case 244 : 
                        int LA22_461 = input.LA(1);

                         
                        int index22_461 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_461);
                        if ( s>=0 ) return s;
                        break;
                    case 245 : 
                        int LA22_462 = input.LA(1);

                         
                        int index22_462 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_462);
                        if ( s>=0 ) return s;
                        break;
                    case 246 : 
                        int LA22_467 = input.LA(1);

                         
                        int index22_467 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_467);
                        if ( s>=0 ) return s;
                        break;
                    case 247 : 
                        int LA22_468 = input.LA(1);

                         
                        int index22_468 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_468);
                        if ( s>=0 ) return s;
                        break;
                    case 248 : 
                        int LA22_469 = input.LA(1);

                         
                        int index22_469 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_469);
                        if ( s>=0 ) return s;
                        break;
                    case 249 : 
                        int LA22_470 = input.LA(1);

                         
                        int index22_470 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_470);
                        if ( s>=0 ) return s;
                        break;
                    case 250 : 
                        int LA22_471 = input.LA(1);

                         
                        int index22_471 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_471);
                        if ( s>=0 ) return s;
                        break;
                    case 251 : 
                        int LA22_472 = input.LA(1);

                         
                        int index22_472 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_472);
                        if ( s>=0 ) return s;
                        break;
                    case 252 : 
                        int LA22_477 = input.LA(1);

                         
                        int index22_477 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_477);
                        if ( s>=0 ) return s;
                        break;
                    case 253 : 
                        int LA22_478 = input.LA(1);

                         
                        int index22_478 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_478);
                        if ( s>=0 ) return s;
                        break;
                    case 254 : 
                        int LA22_479 = input.LA(1);

                         
                        int index22_479 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_479);
                        if ( s>=0 ) return s;
                        break;
                    case 255 : 
                        int LA22_488 = input.LA(1);

                         
                        int index22_488 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_488);
                        if ( s>=0 ) return s;
                        break;
                    case 256 : 
                        int LA22_489 = input.LA(1);

                         
                        int index22_489 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_489);
                        if ( s>=0 ) return s;
                        break;
                    case 257 : 
                        int LA22_490 = input.LA(1);

                         
                        int index22_490 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_490);
                        if ( s>=0 ) return s;
                        break;
                    case 258 : 
                        int LA22_491 = input.LA(1);

                         
                        int index22_491 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_491);
                        if ( s>=0 ) return s;
                        break;
                    case 259 : 
                        int LA22_492 = input.LA(1);

                         
                        int index22_492 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_492);
                        if ( s>=0 ) return s;
                        break;
                    case 260 : 
                        int LA22_498 = input.LA(1);

                         
                        int index22_498 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_498);
                        if ( s>=0 ) return s;
                        break;
                    case 261 : 
                        int LA22_501 = input.LA(1);

                         
                        int index22_501 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_501);
                        if ( s>=0 ) return s;
                        break;
                    case 262 : 
                        int LA22_502 = input.LA(1);

                         
                        int index22_502 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_502);
                        if ( s>=0 ) return s;
                        break;
                    case 263 : 
                        int LA22_503 = input.LA(1);

                         
                        int index22_503 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_503);
                        if ( s>=0 ) return s;
                        break;
                    case 264 : 
                        int LA22_504 = input.LA(1);

                         
                        int index22_504 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_504);
                        if ( s>=0 ) return s;
                        break;
                    case 265 : 
                        int LA22_506 = input.LA(1);

                         
                        int index22_506 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_506);
                        if ( s>=0 ) return s;
                        break;
                    case 266 : 
                        int LA22_532 = input.LA(1);

                         
                        int index22_532 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_532);
                        if ( s>=0 ) return s;
                        break;
                    case 267 : 
                        int LA22_533 = input.LA(1);

                         
                        int index22_533 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_533);
                        if ( s>=0 ) return s;
                        break;
                    case 268 : 
                        int LA22_534 = input.LA(1);

                         
                        int index22_534 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_534);
                        if ( s>=0 ) return s;
                        break;
                    case 269 : 
                        int LA22_543 = input.LA(1);

                         
                        int index22_543 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_543);
                        if ( s>=0 ) return s;
                        break;
                    case 270 : 
                        int LA22_544 = input.LA(1);

                         
                        int index22_544 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_544);
                        if ( s>=0 ) return s;
                        break;
                    case 271 : 
                        int LA22_545 = input.LA(1);

                         
                        int index22_545 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_545);
                        if ( s>=0 ) return s;
                        break;
                    case 272 : 
                        int LA22_546 = input.LA(1);

                         
                        int index22_546 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_546);
                        if ( s>=0 ) return s;
                        break;
                    case 273 : 
                        int LA22_547 = input.LA(1);

                         
                        int index22_547 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_547);
                        if ( s>=0 ) return s;
                        break;
                    case 274 : 
                        int LA22_553 = input.LA(1);

                         
                        int index22_553 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_553);
                        if ( s>=0 ) return s;
                        break;
                    case 275 : 
                        int LA22_556 = input.LA(1);

                         
                        int index22_556 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_556);
                        if ( s>=0 ) return s;
                        break;
                    case 276 : 
                        int LA22_557 = input.LA(1);

                         
                        int index22_557 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_557);
                        if ( s>=0 ) return s;
                        break;
                    case 277 : 
                        int LA22_558 = input.LA(1);

                         
                        int index22_558 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_558);
                        if ( s>=0 ) return s;
                        break;
                    case 278 : 
                        int LA22_559 = input.LA(1);

                         
                        int index22_559 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_559);
                        if ( s>=0 ) return s;
                        break;
                    case 279 : 
                        int LA22_561 = input.LA(1);

                         
                        int index22_561 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_561);
                        if ( s>=0 ) return s;
                        break;
                    case 280 : 
                        int LA22_587 = input.LA(1);

                         
                        int index22_587 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_587);
                        if ( s>=0 ) return s;
                        break;
                    case 281 : 
                        int LA22_588 = input.LA(1);

                         
                        int index22_588 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_588);
                        if ( s>=0 ) return s;
                        break;
                    case 282 : 
                        int LA22_589 = input.LA(1);

                         
                        int index22_589 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_589);
                        if ( s>=0 ) return s;
                        break;
                    case 283 : 
                        int LA22_590 = input.LA(1);

                         
                        int index22_590 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_590);
                        if ( s>=0 ) return s;
                        break;
                    case 284 : 
                        int LA22_591 = input.LA(1);

                         
                        int index22_591 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_591);
                        if ( s>=0 ) return s;
                        break;
                    case 285 : 
                        int LA22_592 = input.LA(1);

                         
                        int index22_592 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_592);
                        if ( s>=0 ) return s;
                        break;
                    case 286 : 
                        int LA22_593 = input.LA(1);

                         
                        int index22_593 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_593);
                        if ( s>=0 ) return s;
                        break;
                    case 287 : 
                        int LA22_594 = input.LA(1);

                         
                        int index22_594 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_594);
                        if ( s>=0 ) return s;
                        break;
                    case 288 : 
                        int LA22_595 = input.LA(1);

                         
                        int index22_595 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_595);
                        if ( s>=0 ) return s;
                        break;
                    case 289 : 
                        int LA22_596 = input.LA(1);

                         
                        int index22_596 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_ObjCpp()) ) {s = 46;}

                        else if ( (true) ) {s = 400;}

                         
                        input.seek(index22_596);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 22, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA27_eotS =
        "\13\uffff";
    static final String DFA27_eofS =
        "\13\uffff";
    static final String DFA27_minS =
        "\1\6\12\uffff";
    static final String DFA27_maxS =
        "\1\113\12\uffff";
    static final String DFA27_acceptS =
        "\1\uffff\1\1\10\uffff\1\2";
    static final String DFA27_specialS =
        "\13\uffff}>";
    static final String[] DFA27_transitionS = {
            "\2\1\27\uffff\1\1\4\uffff\1\12\11\uffff\3\1\3\uffff\2\1\6\uffff"+
            "\1\1\1\uffff\16\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA27_eot = DFA.unpackEncodedString(DFA27_eotS);
    static final short[] DFA27_eof = DFA.unpackEncodedString(DFA27_eofS);
    static final char[] DFA27_min = DFA.unpackEncodedStringToUnsignedChars(DFA27_minS);
    static final char[] DFA27_max = DFA.unpackEncodedStringToUnsignedChars(DFA27_maxS);
    static final short[] DFA27_accept = DFA.unpackEncodedString(DFA27_acceptS);
    static final short[] DFA27_special = DFA.unpackEncodedString(DFA27_specialS);
    static final short[][] DFA27_transition;

    static {
        int numStates = DFA27_transitionS.length;
        DFA27_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA27_transition[i] = DFA.unpackEncodedString(DFA27_transitionS[i]);
        }
    }

    class DFA27 extends DFA {

        public DFA27(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 27;
            this.eot = DFA27_eot;
            this.eof = DFA27_eof;
            this.min = DFA27_min;
            this.max = DFA27_max;
            this.accept = DFA27_accept;
            this.special = DFA27_special;
            this.transition = DFA27_transition;
        }
        public String getDescription() {
            return "433:18: (returnTypeRef= typeRef )?";
        }
    }
    static final String DFA32_eotS =
        "\63\uffff";
    static final String DFA32_eofS =
        "\63\uffff";
    static final String DFA32_minS =
        "\1\6\1\0\61\uffff";
    static final String DFA32_maxS =
        "\1\71\1\0\61\uffff";
    static final String DFA32_acceptS =
        "\2\uffff\1\1\57\uffff\1\2";
    static final String DFA32_specialS =
        "\1\uffff\1\0\61\uffff}>";
    static final String[] DFA32_transitionS = {
            "\1\2\25\uffff\1\2\1\1\1\2\25\uffff\6\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA32_eot = DFA.unpackEncodedString(DFA32_eotS);
    static final short[] DFA32_eof = DFA.unpackEncodedString(DFA32_eofS);
    static final char[] DFA32_min = DFA.unpackEncodedStringToUnsignedChars(DFA32_minS);
    static final char[] DFA32_max = DFA.unpackEncodedStringToUnsignedChars(DFA32_maxS);
    static final short[] DFA32_accept = DFA.unpackEncodedString(DFA32_acceptS);
    static final short[] DFA32_special = DFA.unpackEncodedString(DFA32_specialS);
    static final short[][] DFA32_transition;

    static {
        int numStates = DFA32_transitionS.length;
        DFA32_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA32_transition[i] = DFA.unpackEncodedString(DFA32_transitionS[i]);
        }
    }

    class DFA32 extends DFA {

        public DFA32(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 32;
            this.eot = DFA32_eot;
            this.eof = DFA32_eof;
            this.min = DFA32_min;
            this.max = DFA32_max;
            this.accept = DFA32_accept;
            this.special = DFA32_special;
            this.transition = DFA32_transition;
        }
        public String getDescription() {
            return "()* loopback of 469:3: ( varStoragesWithInit )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA32_1 = input.LA(1);

                         
                        int index32_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred45_ObjCpp()) ) {s = 2;}

                        else if ( (true) ) {s = 50;}

                         
                        input.seek(index32_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 32, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA36_eotS =
        "\22\uffff";
    static final String DFA36_eofS =
        "\22\uffff";
    static final String DFA36_minS =
        "\1\6\21\uffff";
    static final String DFA36_maxS =
        "\1\113\21\uffff";
    static final String DFA36_acceptS =
        "\1\uffff\1\3\1\1\2\uffff\1\2\14\uffff";
    static final String DFA36_specialS =
        "\22\uffff}>";
    static final String[] DFA36_transitionS = {
            "\2\5\21\uffff\1\1\2\5\3\uffff\3\5\14\uffff\3\5\3\2\2\5\5\uffff"+
            "\2\5\1\uffff\16\5",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA36_eot = DFA.unpackEncodedString(DFA36_eotS);
    static final short[] DFA36_eof = DFA.unpackEncodedString(DFA36_eofS);
    static final char[] DFA36_min = DFA.unpackEncodedStringToUnsignedChars(DFA36_minS);
    static final char[] DFA36_max = DFA.unpackEncodedStringToUnsignedChars(DFA36_maxS);
    static final short[] DFA36_accept = DFA.unpackEncodedString(DFA36_acceptS);
    static final short[] DFA36_special = DFA.unpackEncodedString(DFA36_specialS);
    static final short[][] DFA36_transition;

    static {
        int numStates = DFA36_transitionS.length;
        DFA36_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA36_transition[i] = DFA.unpackEncodedString(DFA36_transitionS[i]);
        }
    }

    class DFA36 extends DFA {

        public DFA36(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 36;
            this.eot = DFA36_eot;
            this.eof = DFA36_eof;
            this.min = DFA36_min;
            this.max = DFA36_max;
            this.accept = DFA36_accept;
            this.special = DFA36_special;
            this.transition = DFA36_transition;
        }
        public String getDescription() {
            return "()* loopback of 496:4: ( ( 'public' | 'private' | 'protected' ) ':' | declaration )*";
        }
    }
    static final String DFA37_eotS =
        "\22\uffff";
    static final String DFA37_eofS =
        "\22\uffff";
    static final String DFA37_minS =
        "\1\6\10\uffff\1\0\10\uffff";
    static final String DFA37_maxS =
        "\1\113\10\uffff\1\0\10\uffff";
    static final String DFA37_acceptS =
        "\1\uffff\1\1\17\uffff\1\2";
    static final String DFA37_specialS =
        "\11\uffff\1\0\10\uffff}>";
    static final String[] DFA37_transitionS = {
            "\1\11\1\1\27\uffff\1\1\16\uffff\3\1\3\uffff\2\1\6\uffff\1\1"+
            "\1\uffff\16\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA37_eot = DFA.unpackEncodedString(DFA37_eotS);
    static final short[] DFA37_eof = DFA.unpackEncodedString(DFA37_eofS);
    static final char[] DFA37_min = DFA.unpackEncodedStringToUnsignedChars(DFA37_minS);
    static final char[] DFA37_max = DFA.unpackEncodedStringToUnsignedChars(DFA37_maxS);
    static final short[] DFA37_accept = DFA.unpackEncodedString(DFA37_acceptS);
    static final short[] DFA37_special = DFA.unpackEncodedString(DFA37_specialS);
    static final short[][] DFA37_transition;

    static {
        int numStates = DFA37_transitionS.length;
        DFA37_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA37_transition[i] = DFA.unpackEncodedString(DFA37_transitionS[i]);
        }
    }

    class DFA37 extends DFA {

        public DFA37(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 37;
            this.eot = DFA37_eot;
            this.eof = DFA37_eof;
            this.min = DFA37_min;
            this.max = DFA37_max;
            this.accept = DFA37_accept;
            this.special = DFA37_special;
            this.transition = DFA37_transition;
        }
        public String getDescription() {
            return "517:16: (returnTypeRef= typeRef )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA37_9 = input.LA(1);

                         
                        int index37_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred54_ObjCpp()) ) {s = 1;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index37_9);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 37, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA39_eotS =
        "\14\uffff";
    static final String DFA39_eofS =
        "\14\uffff";
    static final String DFA39_minS =
        "\1\6\13\uffff";
    static final String DFA39_maxS =
        "\1\113\13\uffff";
    static final String DFA39_acceptS =
        "\1\uffff\1\1\11\uffff\1\2";
    static final String DFA39_specialS =
        "\14\uffff}>";
    static final String[] DFA39_transitionS = {
            "\2\1\27\uffff\1\1\4\uffff\1\13\10\uffff\4\1\3\uffff\2\1\6\uffff"+
            "\1\1\1\uffff\16\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA39_eot = DFA.unpackEncodedString(DFA39_eotS);
    static final short[] DFA39_eof = DFA.unpackEncodedString(DFA39_eofS);
    static final char[] DFA39_min = DFA.unpackEncodedStringToUnsignedChars(DFA39_minS);
    static final char[] DFA39_max = DFA.unpackEncodedStringToUnsignedChars(DFA39_maxS);
    static final short[] DFA39_accept = DFA.unpackEncodedString(DFA39_acceptS);
    static final short[] DFA39_special = DFA.unpackEncodedString(DFA39_specialS);
    static final short[][] DFA39_transition;

    static {
        int numStates = DFA39_transitionS.length;
        DFA39_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA39_transition[i] = DFA.unpackEncodedString(DFA39_transitionS[i]);
        }
    }

    class DFA39 extends DFA {

        public DFA39(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 39;
            this.eot = DFA39_eot;
            this.eof = DFA39_eof;
            this.min = DFA39_min;
            this.max = DFA39_max;
            this.accept = DFA39_accept;
            this.special = DFA39_special;
            this.transition = DFA39_transition;
        }
        public String getDescription() {
            return "529:4: ( (a1= argDef ( ',' ax= argDef )* ) )?";
        }
    }
    static final String DFA42_eotS =
        "\53\uffff";
    static final String DFA42_eofS =
        "\1\1\52\uffff";
    static final String DFA42_minS =
        "\1\6\10\uffff\1\0\41\uffff";
    static final String DFA42_maxS =
        "\1\113\10\uffff\1\0\41\uffff";
    static final String DFA42_acceptS =
        "\1\uffff\1\2\50\uffff\1\1";
    static final String DFA42_specialS =
        "\11\uffff\1\0\41\uffff}>";
    static final String[] DFA42_transitionS = {
            "\1\11\1\1\20\uffff\1\1\1\uffff\2\1\1\uffff\1\1\1\uffff\3\1\14"+
            "\uffff\3\1\3\uffff\3\1\4\uffff\2\1\1\uffff\16\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA42_eot = DFA.unpackEncodedString(DFA42_eotS);
    static final short[] DFA42_eof = DFA.unpackEncodedString(DFA42_eofS);
    static final char[] DFA42_min = DFA.unpackEncodedStringToUnsignedChars(DFA42_minS);
    static final char[] DFA42_max = DFA.unpackEncodedStringToUnsignedChars(DFA42_maxS);
    static final short[] DFA42_accept = DFA.unpackEncodedString(DFA42_acceptS);
    static final short[] DFA42_special = DFA.unpackEncodedString(DFA42_specialS);
    static final short[][] DFA42_transition;

    static {
        int numStates = DFA42_transitionS.length;
        DFA42_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA42_transition[i] = DFA.unpackEncodedString(DFA42_transitionS[i]);
        }
    }

    class DFA42 extends DFA {

        public DFA42(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 42;
            this.eot = DFA42_eot;
            this.eof = DFA42_eof;
            this.min = DFA42_min;
            this.max = DFA42_max;
            this.accept = DFA42_accept;
            this.special = DFA42_special;
            this.transition = DFA42_transition;
        }
        public String getDescription() {
            return "()* loopback of 566:3: ( exportationModifier )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA42_9 = input.LA(1);

                         
                        int index42_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_ObjCpp()) ) {s = 42;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index42_9);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 42, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA43_eotS =
        "\23\uffff";
    static final String DFA43_eofS =
        "\1\1\22\uffff";
    static final String DFA43_minS =
        "\1\6\22\uffff";
    static final String DFA43_maxS =
        "\1\113\22\uffff";
    static final String DFA43_acceptS =
        "\1\uffff\1\1\20\uffff\1\2";
    static final String DFA43_specialS =
        "\23\uffff}>";
    static final String[] DFA43_transitionS = {
            "\2\1\20\uffff\1\1\1\uffff\2\1\1\uffff\1\1\1\uffff\3\1\1\uffff"+
            "\1\22\12\uffff\3\1\3\uffff\3\1\4\uffff\2\1\1\uffff\16\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA43_eot = DFA.unpackEncodedString(DFA43_eotS);
    static final short[] DFA43_eof = DFA.unpackEncodedString(DFA43_eofS);
    static final char[] DFA43_min = DFA.unpackEncodedStringToUnsignedChars(DFA43_minS);
    static final char[] DFA43_max = DFA.unpackEncodedStringToUnsignedChars(DFA43_maxS);
    static final short[] DFA43_accept = DFA.unpackEncodedString(DFA43_acceptS);
    static final short[] DFA43_special = DFA.unpackEncodedString(DFA43_specialS);
    static final short[][] DFA43_transition;

    static {
        int numStates = DFA43_transitionS.length;
        DFA43_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA43_transition[i] = DFA.unpackEncodedString(DFA43_transitionS[i]);
        }
    }

    class DFA43 extends DFA {

        public DFA43(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 43;
            this.eot = DFA43_eot;
            this.eof = DFA43_eof;
            this.min = DFA43_min;
            this.max = DFA43_max;
            this.accept = DFA43_accept;
            this.special = DFA43_special;
            this.transition = DFA43_transition;
        }
        public String getDescription() {
            return "575:14: ({...}? | {...}? '(' extendedDeclModifiers ')' )";
        }
    }
    static final String DFA48_eotS =
        "\13\uffff";
    static final String DFA48_eofS =
        "\13\uffff";
    static final String DFA48_minS =
        "\1\6\12\uffff";
    static final String DFA48_maxS =
        "\1\113\12\uffff";
    static final String DFA48_acceptS =
        "\1\uffff\1\1\10\uffff\1\2";
    static final String DFA48_specialS =
        "\13\uffff}>";
    static final String[] DFA48_transitionS = {
            "\2\1\27\uffff\1\1\15\uffff\1\12\3\1\3\uffff\2\1\6\uffff\1\1"+
            "\1\uffff\16\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA48_eot = DFA.unpackEncodedString(DFA48_eotS);
    static final short[] DFA48_eof = DFA.unpackEncodedString(DFA48_eofS);
    static final char[] DFA48_min = DFA.unpackEncodedStringToUnsignedChars(DFA48_minS);
    static final char[] DFA48_max = DFA.unpackEncodedStringToUnsignedChars(DFA48_maxS);
    static final short[] DFA48_accept = DFA.unpackEncodedString(DFA48_acceptS);
    static final short[] DFA48_special = DFA.unpackEncodedString(DFA48_specialS);
    static final short[][] DFA48_transition;

    static {
        int numStates = DFA48_transitionS.length;
        DFA48_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA48_transition[i] = DFA.unpackEncodedString(DFA48_transitionS[i]);
        }
    }

    class DFA48 extends DFA {

        public DFA48(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 48;
            this.eot = DFA48_eot;
            this.eof = DFA48_eof;
            this.min = DFA48_min;
            this.max = DFA48_max;
            this.accept = DFA48_accept;
            this.special = DFA48_special;
            this.transition = DFA48_transition;
        }
        public String getDescription() {
            return "607:1: argDef returns [Arg arg] : ( typeRef ( IDENTIFIER ( arrayTypeMutator )? )? ( '=' expression )? | '...' );";
        }
    }
    static final String DFA49_eotS =
        "\67\uffff";
    static final String DFA49_eofS =
        "\1\1\66\uffff";
    static final String DFA49_minS =
        "\1\6\5\uffff\4\0\55\uffff";
    static final String DFA49_maxS =
        "\1\71\5\uffff\4\0\55\uffff";
    static final String DFA49_acceptS =
        "\1\uffff\1\5\23\uffff\1\1\12\uffff\1\2\12\uffff\1\3\12\uffff\1\4";
    static final String DFA49_specialS =
        "\6\uffff\1\0\1\1\1\2\1\3\55\uffff}>";
    static final String[] DFA49_transitionS = {
            "\1\1\25\uffff\3\1\25\uffff\2\6\1\7\1\10\1\11\1\1",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA49_eot = DFA.unpackEncodedString(DFA49_eotS);
    static final short[] DFA49_eof = DFA.unpackEncodedString(DFA49_eofS);
    static final char[] DFA49_min = DFA.unpackEncodedStringToUnsignedChars(DFA49_minS);
    static final char[] DFA49_max = DFA.unpackEncodedStringToUnsignedChars(DFA49_maxS);
    static final short[] DFA49_accept = DFA.unpackEncodedString(DFA49_acceptS);
    static final short[] DFA49_special = DFA.unpackEncodedString(DFA49_specialS);
    static final short[][] DFA49_transition;

    static {
        int numStates = DFA49_transitionS.length;
        DFA49_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA49_transition[i] = DFA.unpackEncodedString(DFA49_transitionS[i]);
        }
    }

    class DFA49 extends DFA {

        public DFA49(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 49;
            this.eot = DFA49_eot;
            this.eof = DFA49_eof;
            this.min = DFA49_min;
            this.max = DFA49_max;
            this.accept = DFA49_accept;
            this.special = DFA49_special;
            this.transition = DFA49_transition;
        }
        public String getDescription() {
            return "()* loopback of 627:3: ( ( 'const' | '__const' ) | '*' | '&' | '^' )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA49_6 = input.LA(1);

                         
                        int index49_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred69_ObjCpp()) ) {s = 21;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index49_6);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA49_7 = input.LA(1);

                         
                        int index49_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred70_ObjCpp()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index49_7);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA49_8 = input.LA(1);

                         
                        int index49_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred71_ObjCpp()) ) {s = 43;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index49_8);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA49_9 = input.LA(1);

                         
                        int index49_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred72_ObjCpp()) ) {s = 54;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index49_9);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 49, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA50_eotS =
        "\26\uffff";
    static final String DFA50_eofS =
        "\1\2\25\uffff";
    static final String DFA50_minS =
        "\1\6\1\0\24\uffff";
    static final String DFA50_maxS =
        "\1\71\1\0\24\uffff";
    static final String DFA50_acceptS =
        "\2\uffff\1\2\22\uffff\1\1";
    static final String DFA50_specialS =
        "\1\uffff\1\0\24\uffff}>";
    static final String[] DFA50_transitionS = {
            "\1\1\25\uffff\3\2\25\uffff\6\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA50_eot = DFA.unpackEncodedString(DFA50_eotS);
    static final short[] DFA50_eof = DFA.unpackEncodedString(DFA50_eofS);
    static final char[] DFA50_min = DFA.unpackEncodedStringToUnsignedChars(DFA50_minS);
    static final char[] DFA50_max = DFA.unpackEncodedStringToUnsignedChars(DFA50_maxS);
    static final short[] DFA50_accept = DFA.unpackEncodedString(DFA50_acceptS);
    static final short[] DFA50_special = DFA.unpackEncodedString(DFA50_specialS);
    static final short[][] DFA50_transition;

    static {
        int numStates = DFA50_transitionS.length;
        DFA50_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA50_transition[i] = DFA.unpackEncodedString(DFA50_transitionS[i]);
        }
    }

    class DFA50 extends DFA {

        public DFA50(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 50;
            this.eot = DFA50_eot;
            this.eof = DFA50_eof;
            this.min = DFA50_min;
            this.max = DFA50_max;
            this.accept = DFA50_accept;
            this.special = DFA50_special;
            this.transition = DFA50_transition;
        }
        public String getDescription() {
            return "633:3: ( IDENTIFIER )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA50_1 = input.LA(1);

                         
                        int index50_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred73_ObjCpp()) ) {s = 21;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index50_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 50, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA52_eotS =
        "\31\uffff";
    static final String DFA52_eofS =
        "\1\1\30\uffff";
    static final String DFA52_minS =
        "\1\6\10\uffff\1\0\17\uffff";
    static final String DFA52_maxS =
        "\1\71\10\uffff\1\0\17\uffff";
    static final String DFA52_acceptS =
        "\1\uffff\1\2\26\uffff\1\1";
    static final String DFA52_specialS =
        "\11\uffff\1\0\17\uffff}>";
    static final String[] DFA52_transitionS = {
            "\1\1\25\uffff\3\1\25\uffff\5\1\1\11",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA52_eot = DFA.unpackEncodedString(DFA52_eotS);
    static final short[] DFA52_eof = DFA.unpackEncodedString(DFA52_eofS);
    static final char[] DFA52_min = DFA.unpackEncodedStringToUnsignedChars(DFA52_minS);
    static final char[] DFA52_max = DFA.unpackEncodedStringToUnsignedChars(DFA52_maxS);
    static final short[] DFA52_accept = DFA.unpackEncodedString(DFA52_acceptS);
    static final short[] DFA52_special = DFA.unpackEncodedString(DFA52_specialS);
    static final short[][] DFA52_transition;

    static {
        int numStates = DFA52_transitionS.length;
        DFA52_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA52_transition[i] = DFA.unpackEncodedString(DFA52_transitionS[i]);
        }
    }

    class DFA52 extends DFA {

        public DFA52(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 52;
            this.eot = DFA52_eot;
            this.eof = DFA52_eof;
            this.min = DFA52_min;
            this.max = DFA52_max;
            this.accept = DFA52_accept;
            this.special = DFA52_special;
            this.transition = DFA52_transition;
        }
        public String getDescription() {
            return "()* loopback of 636:3: ( '[' ( expression )? ']' )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA52_9 = input.LA(1);

                         
                        int index52_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred75_ObjCpp()) ) {s = 24;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index52_9);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 52, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA51_eotS =
        "\16\uffff";
    static final String DFA51_eofS =
        "\16\uffff";
    static final String DFA51_minS =
        "\1\4\15\uffff";
    static final String DFA51_maxS =
        "\1\116\15\uffff";
    static final String DFA51_acceptS =
        "\1\uffff\1\1\13\uffff\1\2";
    static final String DFA51_specialS =
        "\16\uffff}>";
    static final String[] DFA51_transitionS = {
            "\3\1\1\uffff\4\1\14\uffff\1\1\12\uffff\1\1\25\uffff\1\1\1\15"+
            "\21\uffff\3\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA51_eot = DFA.unpackEncodedString(DFA51_eotS);
    static final short[] DFA51_eof = DFA.unpackEncodedString(DFA51_eofS);
    static final char[] DFA51_min = DFA.unpackEncodedStringToUnsignedChars(DFA51_minS);
    static final char[] DFA51_max = DFA.unpackEncodedStringToUnsignedChars(DFA51_maxS);
    static final short[] DFA51_accept = DFA.unpackEncodedString(DFA51_acceptS);
    static final short[] DFA51_special = DFA.unpackEncodedString(DFA51_specialS);
    static final short[][] DFA51_transition;

    static {
        int numStates = DFA51_transitionS.length;
        DFA51_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA51_transition[i] = DFA.unpackEncodedString(DFA51_transitionS[i]);
        }
    }

    class DFA51 extends DFA {

        public DFA51(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 51;
            this.eot = DFA51_eot;
            this.eof = DFA51_eof;
            this.min = DFA51_min;
            this.max = DFA51_max;
            this.accept = DFA51_accept;
            this.special = DFA51_special;
            this.transition = DFA51_transition;
        }
        public String getDescription() {
            return "637:8: ( expression )?";
        }
    }
    static final String DFA53_eotS =
        "\30\uffff";
    static final String DFA53_eofS =
        "\1\2\27\uffff";
    static final String DFA53_minS =
        "\1\6\1\0\26\uffff";
    static final String DFA53_maxS =
        "\1\71\1\0\26\uffff";
    static final String DFA53_acceptS =
        "\2\uffff\1\2\24\uffff\1\1";
    static final String DFA53_specialS =
        "\1\uffff\1\0\26\uffff}>";
    static final String[] DFA53_transitionS = {
            "\1\2\25\uffff\2\2\1\1\25\uffff\6\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA53_eot = DFA.unpackEncodedString(DFA53_eotS);
    static final short[] DFA53_eof = DFA.unpackEncodedString(DFA53_eofS);
    static final char[] DFA53_min = DFA.unpackEncodedStringToUnsignedChars(DFA53_minS);
    static final char[] DFA53_max = DFA.unpackEncodedStringToUnsignedChars(DFA53_maxS);
    static final short[] DFA53_accept = DFA.unpackEncodedString(DFA53_acceptS);
    static final short[] DFA53_special = DFA.unpackEncodedString(DFA53_specialS);
    static final short[][] DFA53_transition;

    static {
        int numStates = DFA53_transitionS.length;
        DFA53_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA53_transition[i] = DFA.unpackEncodedString(DFA53_transitionS[i]);
        }
    }

    class DFA53 extends DFA {

        public DFA53(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 53;
            this.eot = DFA53_eot;
            this.eof = DFA53_eof;
            this.min = DFA53_min;
            this.max = DFA53_max;
            this.accept = DFA53_accept;
            this.special = DFA53_special;
            this.transition = DFA53_transition;
        }
        public String getDescription() {
            return "668:17: ( '=' e1= expression )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA53_1 = input.LA(1);

                         
                        int index53_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_ObjCpp()) ) {s = 23;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index53_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 53, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA55_eotS =
        "\26\uffff";
    static final String DFA55_eofS =
        "\1\1\25\uffff";
    static final String DFA55_minS =
        "\1\6\10\uffff\1\0\14\uffff";
    static final String DFA55_maxS =
        "\1\71\10\uffff\1\0\14\uffff";
    static final String DFA55_acceptS =
        "\1\uffff\1\2\23\uffff\1\1";
    static final String DFA55_specialS =
        "\11\uffff\1\0\14\uffff}>";
    static final String[] DFA55_transitionS = {
            "\1\1\25\uffff\1\11\2\1\25\uffff\6\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA55_eot = DFA.unpackEncodedString(DFA55_eotS);
    static final short[] DFA55_eof = DFA.unpackEncodedString(DFA55_eofS);
    static final char[] DFA55_min = DFA.unpackEncodedStringToUnsignedChars(DFA55_minS);
    static final char[] DFA55_max = DFA.unpackEncodedStringToUnsignedChars(DFA55_maxS);
    static final short[] DFA55_accept = DFA.unpackEncodedString(DFA55_acceptS);
    static final short[] DFA55_special = DFA.unpackEncodedString(DFA55_specialS);
    static final short[][] DFA55_transition;

    static {
        int numStates = DFA55_transitionS.length;
        DFA55_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA55_transition[i] = DFA.unpackEncodedString(DFA55_transitionS[i]);
        }
    }

    class DFA55 extends DFA {

        public DFA55(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 55;
            this.eot = DFA55_eot;
            this.eof = DFA55_eof;
            this.min = DFA55_min;
            this.max = DFA55_max;
            this.accept = DFA55_accept;
            this.special = DFA55_special;
            this.transition = DFA55_transition;
        }
        public String getDescription() {
            return "()* loopback of 671:3: ( ',' vx= varStorage ( '=' ex= expression )? )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA55_9 = input.LA(1);

                         
                        int index55_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred78_ObjCpp()) ) {s = 21;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index55_9);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 55, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA54_eotS =
        "\u00bb\uffff";
    static final String DFA54_eofS =
        "\1\2\u00ba\uffff";
    static final String DFA54_minS =
        "\1\6\1\4\11\uffff\1\0\1\43\3\4\6\0\1\4\21\uffff\55\0\132\uffff\14"+
        "\0";
    static final String DFA54_maxS =
        "\1\71\1\116\11\uffff\1\0\1\43\3\116\6\0\1\116\21\uffff\55\0\132"+
        "\uffff\14\0";
    static final String DFA54_acceptS =
        "\2\uffff\1\2\44\uffff\1\1\u0093\uffff";
    static final String DFA54_specialS =
        "\13\uffff\1\0\4\uffff\1\1\1\2\1\3\1\4\1\5\1\6\22\uffff\1\7\1\10"+
        "\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25"+
        "\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\42"+
        "\1\43\1\44\1\45\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57"+
        "\1\60\1\61\1\62\1\63\132\uffff\1\64\1\65\1\66\1\67\1\70\1\71\1\72"+
        "\1\73\1\74\1\75\1\76\1\77}>";
    static final String[] DFA54_transitionS = {
            "\1\2\25\uffff\2\2\1\1\25\uffff\6\2",
            "\1\20\1\25\1\13\1\uffff\1\21\1\22\1\23\1\24\14\uffff\1\26\12"+
            "\uffff\1\17\25\uffff\1\15\22\uffff\1\14\2\16",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\50",
            "\1\56\1\63\1\51\1\uffff\1\57\1\60\1\61\1\62\14\uffff\1\64\12"+
            "\uffff\1\55\25\uffff\1\53\22\uffff\1\52\2\54",
            "\1\72\1\77\1\65\1\uffff\1\73\1\74\1\75\1\76\14\uffff\1\100"+
            "\12\uffff\1\71\25\uffff\1\67\22\uffff\1\66\2\70",
            "\1\106\1\113\1\101\1\123\1\107\1\110\1\111\1\112\14\uffff\1"+
            "\114\6\uffff\1\116\3\uffff\1\105\12\uffff\2\115\1\120\3\uffff"+
            "\2\117\3\uffff\1\103\2\uffff\1\121\1\uffff\4\122\1\123\11\124"+
            "\1\102\2\104",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\u00b4\1\u00b9\1\u00af\1\uffff\1\u00b5\1\u00b6\1\u00b7\1"+
            "\u00b8\14\uffff\1\u00ba\12\uffff\1\u00b3\25\uffff\1\u00b1\22"+
            "\uffff\1\u00b0\2\u00b2",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff"
    };

    static final short[] DFA54_eot = DFA.unpackEncodedString(DFA54_eotS);
    static final short[] DFA54_eof = DFA.unpackEncodedString(DFA54_eofS);
    static final char[] DFA54_min = DFA.unpackEncodedStringToUnsignedChars(DFA54_minS);
    static final char[] DFA54_max = DFA.unpackEncodedStringToUnsignedChars(DFA54_maxS);
    static final short[] DFA54_accept = DFA.unpackEncodedString(DFA54_acceptS);
    static final short[] DFA54_special = DFA.unpackEncodedString(DFA54_specialS);
    static final short[][] DFA54_transition;

    static {
        int numStates = DFA54_transitionS.length;
        DFA54_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA54_transition[i] = DFA.unpackEncodedString(DFA54_transitionS[i]);
        }
    }

    class DFA54 extends DFA {

        public DFA54(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 54;
            this.eot = DFA54_eot;
            this.eof = DFA54_eof;
            this.min = DFA54_min;
            this.max = DFA54_max;
            this.accept = DFA54_accept;
            this.special = DFA54_special;
            this.transition = DFA54_transition;
        }
        public String getDescription() {
            return "672:22: ( '=' ex= expression )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA54_11 = input.LA(1);

                         
                        int index54_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_ObjCpp()) ) {s = 39;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index54_11);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA54_16 = input.LA(1);

                         
                        int index54_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_ObjCpp()) ) {s = 39;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index54_16);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA54_17 = input.LA(1);

                         
                        int index54_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_ObjCpp()) ) {s = 39;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index54_17);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA54_18 = input.LA(1);

                         
                        int index54_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_ObjCpp()) ) {s = 39;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index54_18);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA54_19 = input.LA(1);

                         
                        int index54_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_ObjCpp()) ) {s = 39;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index54_19);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA54_20 = input.LA(1);

                         
                        int index54_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_ObjCpp()) ) {s = 39;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index54_20);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA54_21 = input.LA(1);

                         
                        int index54_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_ObjCpp()) ) {s = 39;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index54_21);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA54_40 = input.LA(1);

                         
                        int index54_40 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_ObjCpp()) ) {s = 39;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index54_40);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA54_41 = input.LA(1);

                         
                        int index54_41 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_ObjCpp()) ) {s = 39;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index54_41);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA54_42 = input.LA(1);

                         
                        int index54_42 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_ObjCpp()) ) {s = 39;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index54_42);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA54_43 = input.LA(1);

                         
                        int index54_43 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_ObjCpp()) ) {s = 39;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index54_43);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA54_44 = input.LA(1);

                         
                        int index54_44 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_ObjCpp()) ) {s = 39;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index54_44);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA54_45 = input.LA(1);

                         
                        int index54_45 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_ObjCpp()) ) {s = 39;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index54_45);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA54_46 = input.LA(1);

                         
                        int index54_46 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_ObjCpp()) ) {s = 39;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index54_46);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA54_47 = input.LA(1);

                         
                        int index54_47 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_ObjCpp()) ) {s = 39;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index54_47);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA54_48 = input.LA(1);

                         
                        int index54_48 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_ObjCpp()) ) {s = 39;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index54_48);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA54_49 = input.LA(1);

                         
                        int index54_49 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_ObjCpp()) ) {s = 39;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index54_49);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA54_50 = input.LA(1);

                         
                        int index54_50 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_ObjCpp()) ) {s = 39;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index54_50);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA54_51 = input.LA(1);

                         
                        int index54_51 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_ObjCpp()) ) {s = 39;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index54_51);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA54_52 = input.LA(1);

                         
                        int index54_52 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_ObjCpp()) ) {s = 39;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index54_52);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA54_53 = input.LA(1);

                         
                        int index54_53 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_ObjCpp()) ) {s = 39;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index54_53);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA54_54 = input.LA(1);

                         
                        int index54_54 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_ObjCpp()) ) {s = 39;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index54_54);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA54_55 = input.LA(1);

                         
                        int index54_55 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_ObjCpp()) ) {s = 39;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index54_55);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA54_56 = input.LA(1);

                         
                        int index54_56 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_ObjCpp()) ) {s = 39;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index54_56);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA54_57 = input.LA(1);

                         
                        int index54_57 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_ObjCpp()) ) {s = 39;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index54_57);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA54_58 = input.LA(1);

                         
                        int index54_58 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_ObjCpp()) ) {s = 39;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index54_58);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA54_59 = input.LA(1);

                         
                        int index54_59 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_ObjCpp()) ) {s = 39;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index54_59);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA54_60 = input.LA(1);

                         
                        int index54_60 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_ObjCpp()) ) {s = 39;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index54_60);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA54_61 = input.LA(1);

                         
                        int index54_61 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_ObjCpp()) ) {s = 39;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index54_61);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA54_62 = input.LA(1);

                         
                        int index54_62 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_ObjCpp()) ) {s = 39;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index54_62);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA54_63 = input.LA(1);

                         
                        int index54_63 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_ObjCpp()) ) {s = 39;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index54_63);
                        if ( s>=0 ) return s;
                        break;
                    case 31 : 
                        int LA54_64 = input.LA(1);

                         
                        int index54_64 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_ObjCpp()) ) {s = 39;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index54_64);
                        if ( s>=0 ) return s;
                        break;
                    case 32 : 
                        int LA54_65 = input.LA(1);

                         
                        int index54_65 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_ObjCpp()) ) {s = 39;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index54_65);
                        if ( s>=0 ) return s;
                        break;
                    case 33 : 
                        int LA54_66 = input.LA(1);

                         
                        int index54_66 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_ObjCpp()) ) {s = 39;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index54_66);
                        if ( s>=0 ) return s;
                        break;
                    case 34 : 
                        int LA54_67 = input.LA(1);

                         
                        int index54_67 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_ObjCpp()) ) {s = 39;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index54_67);
                        if ( s>=0 ) return s;
                        break;
                    case 35 : 
                        int LA54_68 = input.LA(1);

                         
                        int index54_68 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_ObjCpp()) ) {s = 39;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index54_68);
                        if ( s>=0 ) return s;
                        break;
                    case 36 : 
                        int LA54_69 = input.LA(1);

                         
                        int index54_69 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_ObjCpp()) ) {s = 39;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index54_69);
                        if ( s>=0 ) return s;
                        break;
                    case 37 : 
                        int LA54_70 = input.LA(1);

                         
                        int index54_70 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_ObjCpp()) ) {s = 39;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index54_70);
                        if ( s>=0 ) return s;
                        break;
                    case 38 : 
                        int LA54_71 = input.LA(1);

                         
                        int index54_71 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_ObjCpp()) ) {s = 39;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index54_71);
                        if ( s>=0 ) return s;
                        break;
                    case 39 : 
                        int LA54_72 = input.LA(1);

                         
                        int index54_72 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_ObjCpp()) ) {s = 39;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index54_72);
                        if ( s>=0 ) return s;
                        break;
                    case 40 : 
                        int LA54_73 = input.LA(1);

                         
                        int index54_73 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_ObjCpp()) ) {s = 39;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index54_73);
                        if ( s>=0 ) return s;
                        break;
                    case 41 : 
                        int LA54_74 = input.LA(1);

                         
                        int index54_74 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_ObjCpp()) ) {s = 39;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index54_74);
                        if ( s>=0 ) return s;
                        break;
                    case 42 : 
                        int LA54_75 = input.LA(1);

                         
                        int index54_75 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_ObjCpp()) ) {s = 39;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index54_75);
                        if ( s>=0 ) return s;
                        break;
                    case 43 : 
                        int LA54_76 = input.LA(1);

                         
                        int index54_76 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_ObjCpp()) ) {s = 39;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index54_76);
                        if ( s>=0 ) return s;
                        break;
                    case 44 : 
                        int LA54_77 = input.LA(1);

                         
                        int index54_77 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_ObjCpp()) ) {s = 39;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index54_77);
                        if ( s>=0 ) return s;
                        break;
                    case 45 : 
                        int LA54_78 = input.LA(1);

                         
                        int index54_78 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_ObjCpp()) ) {s = 39;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index54_78);
                        if ( s>=0 ) return s;
                        break;
                    case 46 : 
                        int LA54_79 = input.LA(1);

                         
                        int index54_79 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_ObjCpp()) ) {s = 39;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index54_79);
                        if ( s>=0 ) return s;
                        break;
                    case 47 : 
                        int LA54_80 = input.LA(1);

                         
                        int index54_80 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_ObjCpp()) ) {s = 39;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index54_80);
                        if ( s>=0 ) return s;
                        break;
                    case 48 : 
                        int LA54_81 = input.LA(1);

                         
                        int index54_81 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_ObjCpp()) ) {s = 39;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index54_81);
                        if ( s>=0 ) return s;
                        break;
                    case 49 : 
                        int LA54_82 = input.LA(1);

                         
                        int index54_82 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_ObjCpp()) ) {s = 39;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index54_82);
                        if ( s>=0 ) return s;
                        break;
                    case 50 : 
                        int LA54_83 = input.LA(1);

                         
                        int index54_83 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_ObjCpp()) ) {s = 39;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index54_83);
                        if ( s>=0 ) return s;
                        break;
                    case 51 : 
                        int LA54_84 = input.LA(1);

                         
                        int index54_84 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_ObjCpp()) ) {s = 39;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index54_84);
                        if ( s>=0 ) return s;
                        break;
                    case 52 : 
                        int LA54_175 = input.LA(1);

                         
                        int index54_175 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_ObjCpp()) ) {s = 39;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index54_175);
                        if ( s>=0 ) return s;
                        break;
                    case 53 : 
                        int LA54_176 = input.LA(1);

                         
                        int index54_176 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_ObjCpp()) ) {s = 39;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index54_176);
                        if ( s>=0 ) return s;
                        break;
                    case 54 : 
                        int LA54_177 = input.LA(1);

                         
                        int index54_177 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_ObjCpp()) ) {s = 39;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index54_177);
                        if ( s>=0 ) return s;
                        break;
                    case 55 : 
                        int LA54_178 = input.LA(1);

                         
                        int index54_178 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_ObjCpp()) ) {s = 39;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index54_178);
                        if ( s>=0 ) return s;
                        break;
                    case 56 : 
                        int LA54_179 = input.LA(1);

                         
                        int index54_179 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_ObjCpp()) ) {s = 39;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index54_179);
                        if ( s>=0 ) return s;
                        break;
                    case 57 : 
                        int LA54_180 = input.LA(1);

                         
                        int index54_180 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_ObjCpp()) ) {s = 39;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index54_180);
                        if ( s>=0 ) return s;
                        break;
                    case 58 : 
                        int LA54_181 = input.LA(1);

                         
                        int index54_181 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_ObjCpp()) ) {s = 39;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index54_181);
                        if ( s>=0 ) return s;
                        break;
                    case 59 : 
                        int LA54_182 = input.LA(1);

                         
                        int index54_182 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_ObjCpp()) ) {s = 39;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index54_182);
                        if ( s>=0 ) return s;
                        break;
                    case 60 : 
                        int LA54_183 = input.LA(1);

                         
                        int index54_183 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_ObjCpp()) ) {s = 39;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index54_183);
                        if ( s>=0 ) return s;
                        break;
                    case 61 : 
                        int LA54_184 = input.LA(1);

                         
                        int index54_184 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_ObjCpp()) ) {s = 39;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index54_184);
                        if ( s>=0 ) return s;
                        break;
                    case 62 : 
                        int LA54_185 = input.LA(1);

                         
                        int index54_185 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_ObjCpp()) ) {s = 39;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index54_185);
                        if ( s>=0 ) return s;
                        break;
                    case 63 : 
                        int LA54_186 = input.LA(1);

                         
                        int index54_186 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_ObjCpp()) ) {s = 39;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index54_186);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 54, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA61_eotS =
        "\17\uffff";
    static final String DFA61_eofS =
        "\1\1\16\uffff";
    static final String DFA61_minS =
        "\1\6\16\uffff";
    static final String DFA61_maxS =
        "\1\71\16\uffff";
    static final String DFA61_acceptS =
        "\1\uffff\1\1\14\uffff\1\2";
    static final String DFA61_specialS =
        "\17\uffff}>";
    static final String[] DFA61_transitionS = {
            "\1\1\25\uffff\3\1\4\uffff\2\1\1\16\1\1\15\uffff\6\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA61_eot = DFA.unpackEncodedString(DFA61_eotS);
    static final short[] DFA61_eof = DFA.unpackEncodedString(DFA61_eofS);
    static final char[] DFA61_min = DFA.unpackEncodedStringToUnsignedChars(DFA61_minS);
    static final char[] DFA61_max = DFA.unpackEncodedStringToUnsignedChars(DFA61_maxS);
    static final short[] DFA61_accept = DFA.unpackEncodedString(DFA61_acceptS);
    static final short[] DFA61_special = DFA.unpackEncodedString(DFA61_specialS);
    static final short[][] DFA61_transition;

    static {
        int numStates = DFA61_transitionS.length;
        DFA61_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA61_transition[i] = DFA.unpackEncodedString(DFA61_transitionS[i]);
        }
    }

    class DFA61 extends DFA {

        public DFA61(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 61;
            this.eot = DFA61_eot;
            this.eof = DFA61_eof;
            this.min = DFA61_min;
            this.max = DFA61_max;
            this.accept = DFA61_accept;
            this.special = DFA61_special;
            this.transition = DFA61_transition;
        }
        public String getDescription() {
            return "714:16: ( | '<' (t1= typeRef ( ',' tx= typeRef )* )? '>' )";
        }
    }
    static final String DFA60_eotS =
        "\13\uffff";
    static final String DFA60_eofS =
        "\13\uffff";
    static final String DFA60_minS =
        "\1\6\12\uffff";
    static final String DFA60_maxS =
        "\1\113\12\uffff";
    static final String DFA60_acceptS =
        "\1\uffff\1\1\10\uffff\1\2";
    static final String DFA60_specialS =
        "\13\uffff}>";
    static final String[] DFA60_transitionS = {
            "\2\1\27\uffff\1\1\6\uffff\1\12\7\uffff\3\1\3\uffff\2\1\6\uffff"+
            "\1\1\1\uffff\16\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA60_eot = DFA.unpackEncodedString(DFA60_eotS);
    static final short[] DFA60_eof = DFA.unpackEncodedString(DFA60_eofS);
    static final char[] DFA60_min = DFA.unpackEncodedStringToUnsignedChars(DFA60_minS);
    static final char[] DFA60_max = DFA.unpackEncodedStringToUnsignedChars(DFA60_maxS);
    static final short[] DFA60_accept = DFA.unpackEncodedString(DFA60_acceptS);
    static final short[] DFA60_special = DFA.unpackEncodedString(DFA60_specialS);
    static final short[][] DFA60_transition;

    static {
        int numStates = DFA60_transitionS.length;
        DFA60_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA60_transition[i] = DFA.unpackEncodedString(DFA60_transitionS[i]);
        }
    }

    class DFA60 extends DFA {

        public DFA60(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 60;
            this.eot = DFA60_eot;
            this.eof = DFA60_eof;
            this.min = DFA60_min;
            this.max = DFA60_max;
            this.accept = DFA60_accept;
            this.special = DFA60_special;
            this.transition = DFA60_transition;
        }
        public String getDescription() {
            return "717:7: (t1= typeRef ( ',' tx= typeRef )* )?";
        }
    }
    static final String DFA66_eotS =
        "\13\uffff";
    static final String DFA66_eofS =
        "\13\uffff";
    static final String DFA66_minS =
        "\1\6\12\uffff";
    static final String DFA66_maxS =
        "\1\113\12\uffff";
    static final String DFA66_acceptS =
        "\1\uffff\1\1\1\2\10\uffff";
    static final String DFA66_specialS =
        "\13\uffff}>";
    static final String[] DFA66_transitionS = {
            "\2\2\27\uffff\1\2\16\uffff\3\2\3\uffff\2\2\6\uffff\1\2\1\1\16"+
            "\2",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA66_eot = DFA.unpackEncodedString(DFA66_eotS);
    static final short[] DFA66_eof = DFA.unpackEncodedString(DFA66_eofS);
    static final char[] DFA66_min = DFA.unpackEncodedStringToUnsignedChars(DFA66_minS);
    static final char[] DFA66_max = DFA.unpackEncodedStringToUnsignedChars(DFA66_maxS);
    static final short[] DFA66_accept = DFA.unpackEncodedString(DFA66_acceptS);
    static final short[] DFA66_special = DFA.unpackEncodedString(DFA66_specialS);
    static final short[][] DFA66_transition;

    static {
        int numStates = DFA66_transitionS.length;
        DFA66_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA66_transition[i] = DFA.unpackEncodedString(DFA66_transitionS[i]);
        }
    }

    class DFA66 extends DFA {

        public DFA66(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 66;
            this.eot = DFA66_eot;
            this.eof = DFA66_eof;
            this.min = DFA66_min;
            this.max = DFA66_max;
            this.accept = DFA66_accept;
            this.special = DFA66_special;
            this.transition = DFA66_transition;
        }
        public String getDescription() {
            return "735:1: templateDef : ( 'template' '<' ( templateArgDecl ( ',' templateArgDecl )* )? '>' structDef | functionDefinition );";
        }
    }
    static final String DFA70_eotS =
        "\14\uffff";
    static final String DFA70_eofS =
        "\14\uffff";
    static final String DFA70_minS =
        "\1\6\13\uffff";
    static final String DFA70_maxS =
        "\1\113\13\uffff";
    static final String DFA70_acceptS =
        "\1\uffff\1\1\11\uffff\1\2";
    static final String DFA70_specialS =
        "\14\uffff}>";
    static final String[] DFA70_transitionS = {
            "\2\1\27\uffff\1\1\4\uffff\1\13\10\uffff\4\1\3\uffff\2\1\6\uffff"+
            "\1\1\1\uffff\16\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA70_eot = DFA.unpackEncodedString(DFA70_eotS);
    static final short[] DFA70_eof = DFA.unpackEncodedString(DFA70_eofS);
    static final char[] DFA70_min = DFA.unpackEncodedStringToUnsignedChars(DFA70_minS);
    static final char[] DFA70_max = DFA.unpackEncodedStringToUnsignedChars(DFA70_maxS);
    static final short[] DFA70_accept = DFA.unpackEncodedString(DFA70_acceptS);
    static final short[] DFA70_special = DFA.unpackEncodedString(DFA70_specialS);
    static final short[][] DFA70_transition;

    static {
        int numStates = DFA70_transitionS.length;
        DFA70_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA70_transition[i] = DFA.unpackEncodedString(DFA70_transitionS[i]);
        }
    }

    class DFA70 extends DFA {

        public DFA70(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 70;
            this.eot = DFA70_eot;
            this.eof = DFA70_eof;
            this.min = DFA70_min;
            this.max = DFA70_max;
            this.accept = DFA70_accept;
            this.special = DFA70_special;
            this.transition = DFA70_transition;
        }
        public String getDescription() {
            return "751:7: (a1= argDef ( ',' ax= argDef )* )?";
        }
    }
    static final String DFA72_eotS =
        "\43\uffff";
    static final String DFA72_eofS =
        "\12\uffff\1\3\30\uffff";
    static final String DFA72_minS =
        "\2\6\10\uffff\1\6\11\uffff\1\0\5\uffff\1\0\10\uffff";
    static final String DFA72_maxS =
        "\2\113\10\uffff\1\71\11\uffff\1\0\5\uffff\1\0\10\uffff";
    static final String DFA72_acceptS =
        "\2\uffff\1\2\1\3\1\1\36\uffff";
    static final String DFA72_specialS =
        "\24\uffff\1\0\5\uffff\1\1\10\uffff}>";
    static final String[] DFA72_transitionS = {
            "\2\3\27\uffff\1\2\16\uffff\2\1\1\4\3\uffff\2\3\6\uffff\1\3\1"+
            "\uffff\16\3",
            "\1\12\1\3\20\uffff\1\4\6\uffff\1\3\16\uffff\3\3\3\uffff\2\3"+
            "\6\uffff\1\3\1\uffff\16\3",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\32\21\uffff\1\4\3\uffff\3\3\4\uffff\1\24\3\3\15\uffff\6"+
            "\3",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA72_eot = DFA.unpackEncodedString(DFA72_eotS);
    static final short[] DFA72_eof = DFA.unpackEncodedString(DFA72_eofS);
    static final char[] DFA72_min = DFA.unpackEncodedStringToUnsignedChars(DFA72_minS);
    static final char[] DFA72_max = DFA.unpackEncodedStringToUnsignedChars(DFA72_maxS);
    static final short[] DFA72_accept = DFA.unpackEncodedString(DFA72_acceptS);
    static final short[] DFA72_special = DFA.unpackEncodedString(DFA72_specialS);
    static final short[][] DFA72_transition;

    static {
        int numStates = DFA72_transitionS.length;
        DFA72_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA72_transition[i] = DFA.unpackEncodedString(DFA72_transitionS[i]);
        }
    }

    class DFA72 extends DFA {

        public DFA72(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 72;
            this.eot = DFA72_eot;
            this.eof = DFA72_eof;
            this.min = DFA72_min;
            this.max = DFA72_max;
            this.accept = DFA72_accept;
            this.special = DFA72_special;
            this.transition = DFA72_transition;
        }
        public String getDescription() {
            return "765:1: plainTypeRef returns [TypeRef type] : ( structCore | enumCore | typeRefCore ( functionSignatureSuffix )? );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA72_20 = input.LA(1);

                         
                        int index72_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred102_ObjCpp()) ) {s = 4;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index72_20);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA72_26 = input.LA(1);

                         
                        int index72_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred102_ObjCpp()) ) {s = 4;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index72_26);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 72, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA71_eotS =
        "\21\uffff";
    static final String DFA71_eofS =
        "\1\2\20\uffff";
    static final String DFA71_minS =
        "\1\6\1\0\17\uffff";
    static final String DFA71_maxS =
        "\1\71\1\0\17\uffff";
    static final String DFA71_acceptS =
        "\2\uffff\1\2\15\uffff\1\1";
    static final String DFA71_specialS =
        "\1\uffff\1\0\17\uffff}>";
    static final String[] DFA71_transitionS = {
            "\1\2\25\uffff\3\2\4\uffff\1\1\1\2\1\uffff\1\2\15\uffff\6\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA71_eot = DFA.unpackEncodedString(DFA71_eotS);
    static final short[] DFA71_eof = DFA.unpackEncodedString(DFA71_eofS);
    static final char[] DFA71_min = DFA.unpackEncodedStringToUnsignedChars(DFA71_minS);
    static final char[] DFA71_max = DFA.unpackEncodedStringToUnsignedChars(DFA71_maxS);
    static final short[] DFA71_accept = DFA.unpackEncodedString(DFA71_acceptS);
    static final short[] DFA71_special = DFA.unpackEncodedString(DFA71_specialS);
    static final short[][] DFA71_transition;

    static {
        int numStates = DFA71_transitionS.length;
        DFA71_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA71_transition[i] = DFA.unpackEncodedString(DFA71_transitionS[i]);
        }
    }

    class DFA71 extends DFA {

        public DFA71(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 71;
            this.eot = DFA71_eot;
            this.eof = DFA71_eof;
            this.min = DFA71_min;
            this.max = DFA71_max;
            this.accept = DFA71_accept;
            this.special = DFA71_special;
            this.transition = DFA71_transition;
        }
        public String getDescription() {
            return "770:3: ( functionSignatureSuffix )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA71_1 = input.LA(1);

                         
                        int index71_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred104_ObjCpp()) ) {s = 16;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index71_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 71, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA73_eotS =
        "\77\uffff";
    static final String DFA73_eofS =
        "\1\1\76\uffff";
    static final String DFA73_minS =
        "\1\6\7\uffff\3\0\1\uffff\1\0\62\uffff";
    static final String DFA73_maxS =
        "\1\71\7\uffff\3\0\1\uffff\1\0\62\uffff";
    static final String DFA73_acceptS =
        "\1\uffff\1\2\25\uffff\1\1\47\uffff";
    static final String DFA73_specialS =
        "\10\uffff\1\0\1\1\1\2\1\uffff\1\3\62\uffff}>";
    static final String[] DFA73_transitionS = {
            "\1\1\25\uffff\3\1\4\uffff\2\1\1\uffff\1\1\15\uffff\2\10\1\11"+
            "\1\12\1\1\1\14",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA73_eot = DFA.unpackEncodedString(DFA73_eotS);
    static final short[] DFA73_eof = DFA.unpackEncodedString(DFA73_eofS);
    static final char[] DFA73_min = DFA.unpackEncodedStringToUnsignedChars(DFA73_minS);
    static final char[] DFA73_max = DFA.unpackEncodedStringToUnsignedChars(DFA73_maxS);
    static final short[] DFA73_accept = DFA.unpackEncodedString(DFA73_acceptS);
    static final short[] DFA73_special = DFA.unpackEncodedString(DFA73_specialS);
    static final short[][] DFA73_transition;

    static {
        int numStates = DFA73_transitionS.length;
        DFA73_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA73_transition[i] = DFA.unpackEncodedString(DFA73_transitionS[i]);
        }
    }

    class DFA73 extends DFA {

        public DFA73(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 73;
            this.eot = DFA73_eot;
            this.eof = DFA73_eof;
            this.min = DFA73_min;
            this.max = DFA73_max;
            this.accept = DFA73_accept;
            this.special = DFA73_special;
            this.transition = DFA73_transition;
        }
        public String getDescription() {
            return "()* loopback of 783:3: ( typeMutator )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA73_8 = input.LA(1);

                         
                        int index73_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred105_ObjCpp()) ) {s = 23;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index73_8);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA73_9 = input.LA(1);

                         
                        int index73_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred105_ObjCpp()) ) {s = 23;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index73_9);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA73_10 = input.LA(1);

                         
                        int index73_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred105_ObjCpp()) ) {s = 23;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index73_10);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA73_12 = input.LA(1);

                         
                        int index73_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred105_ObjCpp()) ) {s = 23;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index73_12);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 73, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA77_eotS =
        "\23\uffff";
    static final String DFA77_eofS =
        "\1\uffff\1\6\21\uffff";
    static final String DFA77_minS =
        "\1\7\1\6\21\uffff";
    static final String DFA77_maxS =
        "\2\113\21\uffff";
    static final String DFA77_acceptS =
        "\2\uffff\1\1\3\uffff\1\2\14\uffff";
    static final String DFA77_specialS =
        "\23\uffff}>";
    static final String[] DFA77_transitionS = {
            "\1\2\66\uffff\4\1\12\2",
            "\1\6\1\2\24\uffff\3\6\4\uffff\2\6\1\uffff\1\6\15\uffff\6\6"+
            "\10\uffff\12\2",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA77_eot = DFA.unpackEncodedString(DFA77_eotS);
    static final short[] DFA77_eof = DFA.unpackEncodedString(DFA77_eofS);
    static final char[] DFA77_min = DFA.unpackEncodedStringToUnsignedChars(DFA77_minS);
    static final char[] DFA77_max = DFA.unpackEncodedStringToUnsignedChars(DFA77_maxS);
    static final short[] DFA77_accept = DFA.unpackEncodedString(DFA77_acceptS);
    static final short[] DFA77_special = DFA.unpackEncodedString(DFA77_specialS);
    static final short[][] DFA77_transition;

    static {
        int numStates = DFA77_transitionS.length;
        DFA77_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA77_transition[i] = DFA.unpackEncodedString(DFA77_transitionS[i]);
        }
    }

    class DFA77 extends DFA {

        public DFA77(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 77;
            this.eot = DFA77_eot;
            this.eof = DFA77_eof;
            this.min = DFA77_min;
            this.max = DFA77_max;
            this.accept = DFA77_accept;
            this.special = DFA77_special;
            this.transition = DFA77_transition;
        }
        public String getDescription() {
            return "813:3: ( (mod1= primSignModifier )? (mod2= primSizeModifier (mod3= primSizeModifier )? )? name= primitiveTypeName | mod= primSignModifier )";
        }
    }
    static final String DFA76_eotS =
        "\22\uffff";
    static final String DFA76_eofS =
        "\1\uffff\1\2\20\uffff";
    static final String DFA76_minS =
        "\1\7\1\6\20\uffff";
    static final String DFA76_maxS =
        "\2\113\20\uffff";
    static final String DFA76_acceptS =
        "\2\uffff\1\2\15\uffff\1\1\1\uffff";
    static final String DFA76_specialS =
        "\22\uffff}>";
    static final String[] DFA76_transitionS = {
            "\1\1\72\uffff\1\1\11\2",
            "\1\2\1\20\24\uffff\3\2\4\uffff\2\2\1\uffff\1\2\15\uffff\6\2"+
            "\10\uffff\12\20",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA76_eot = DFA.unpackEncodedString(DFA76_eotS);
    static final short[] DFA76_eof = DFA.unpackEncodedString(DFA76_eofS);
    static final char[] DFA76_min = DFA.unpackEncodedStringToUnsignedChars(DFA76_minS);
    static final char[] DFA76_max = DFA.unpackEncodedStringToUnsignedChars(DFA76_maxS);
    static final short[] DFA76_accept = DFA.unpackEncodedString(DFA76_acceptS);
    static final short[] DFA76_special = DFA.unpackEncodedString(DFA76_specialS);
    static final short[][] DFA76_transition;

    static {
        int numStates = DFA76_transitionS.length;
        DFA76_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA76_transition[i] = DFA.unpackEncodedString(DFA76_transitionS[i]);
        }
    }

    class DFA76 extends DFA {

        public DFA76(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 76;
            this.eot = DFA76_eot;
            this.eof = DFA76_eof;
            this.min = DFA76_min;
            this.max = DFA76_max;
            this.accept = DFA76_accept;
            this.special = DFA76_special;
            this.transition = DFA76_transition;
        }
        public String getDescription() {
            return "815:4: (mod2= primSizeModifier (mod3= primSizeModifier )? )?";
        }
    }
    static final String DFA75_eotS =
        "\21\uffff";
    static final String DFA75_eofS =
        "\1\uffff\1\2\17\uffff";
    static final String DFA75_minS =
        "\1\7\1\6\17\uffff";
    static final String DFA75_maxS =
        "\2\113\17\uffff";
    static final String DFA75_acceptS =
        "\2\uffff\1\2\15\uffff\1\1";
    static final String DFA75_specialS =
        "\21\uffff}>";
    static final String[] DFA75_transitionS = {
            "\1\1\72\uffff\1\1\11\2",
            "\1\2\1\20\24\uffff\3\2\4\uffff\2\2\1\uffff\1\2\15\uffff\6\2"+
            "\10\uffff\12\20",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA75_eot = DFA.unpackEncodedString(DFA75_eotS);
    static final short[] DFA75_eof = DFA.unpackEncodedString(DFA75_eofS);
    static final char[] DFA75_min = DFA.unpackEncodedStringToUnsignedChars(DFA75_minS);
    static final char[] DFA75_max = DFA.unpackEncodedStringToUnsignedChars(DFA75_maxS);
    static final short[] DFA75_accept = DFA.unpackEncodedString(DFA75_acceptS);
    static final short[] DFA75_special = DFA.unpackEncodedString(DFA75_specialS);
    static final short[][] DFA75_transition;

    static {
        int numStates = DFA75_transitionS.length;
        DFA75_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA75_transition[i] = DFA.unpackEncodedString(DFA75_transitionS[i]);
        }
    }

    class DFA75 extends DFA {

        public DFA75(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 75;
            this.eot = DFA75_eot;
            this.eof = DFA75_eof;
            this.min = DFA75_min;
            this.max = DFA75_max;
            this.accept = DFA75_accept;
            this.special = DFA75_special;
            this.transition = DFA75_transition;
        }
        public String getDescription() {
            return "816:8: (mod3= primSizeModifier )?";
        }
    }
    static final String DFA81_eotS =
        "\16\uffff";
    static final String DFA81_eofS =
        "\16\uffff";
    static final String DFA81_minS =
        "\1\4\15\uffff";
    static final String DFA81_maxS =
        "\1\116\15\uffff";
    static final String DFA81_acceptS =
        "\1\uffff\1\1\13\uffff\1\2";
    static final String DFA81_specialS =
        "\16\uffff}>";
    static final String[] DFA81_transitionS = {
            "\3\1\1\uffff\4\1\14\uffff\1\1\12\uffff\1\1\1\15\24\uffff\1\1"+
            "\22\uffff\3\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA81_eot = DFA.unpackEncodedString(DFA81_eotS);
    static final short[] DFA81_eof = DFA.unpackEncodedString(DFA81_eofS);
    static final char[] DFA81_min = DFA.unpackEncodedStringToUnsignedChars(DFA81_minS);
    static final char[] DFA81_max = DFA.unpackEncodedStringToUnsignedChars(DFA81_maxS);
    static final short[] DFA81_accept = DFA.unpackEncodedString(DFA81_acceptS);
    static final short[] DFA81_special = DFA.unpackEncodedString(DFA81_specialS);
    static final short[][] DFA81_transition;

    static {
        int numStates = DFA81_transitionS.length;
        DFA81_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA81_transition[i] = DFA.unpackEncodedString(DFA81_transitionS[i]);
        }
    }

    class DFA81 extends DFA {

        public DFA81(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 81;
            this.eot = DFA81_eot;
            this.eof = DFA81_eof;
            this.min = DFA81_min;
            this.max = DFA81_max;
            this.accept = DFA81_accept;
            this.special = DFA81_special;
            this.transition = DFA81_transition;
        }
        public String getDescription() {
            return "860:3: (a1= expression ( ',' ax= expression )* )?";
        }
    }
    static final String DFA84_eotS =
        "\40\uffff";
    static final String DFA84_eofS =
        "\1\uffff\1\16\36\uffff";
    static final String DFA84_minS =
        "\1\4\1\6\36\uffff";
    static final String DFA84_maxS =
        "\1\116\1\134\36\uffff";
    static final String DFA84_acceptS =
        "\2\uffff\1\2\1\3\1\4\1\5\1\6\5\uffff\1\7\1\uffff\1\1\21\uffff";
    static final String DFA84_specialS =
        "\40\uffff}>";
    static final String[] DFA84_transitionS = {
            "\2\6\1\1\1\uffff\4\6\14\uffff\1\14\12\uffff\1\5\25\uffff\1\3"+
            "\22\uffff\1\2\2\4",
            "\1\16\22\uffff\1\16\2\uffff\3\16\3\uffff\1\16\1\2\3\16\4\uffff"+
            "\2\16\7\uffff\7\16\24\uffff\16\16",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA84_eot = DFA.unpackEncodedString(DFA84_eotS);
    static final short[] DFA84_eof = DFA.unpackEncodedString(DFA84_eofS);
    static final char[] DFA84_min = DFA.unpackEncodedStringToUnsignedChars(DFA84_minS);
    static final char[] DFA84_max = DFA.unpackEncodedStringToUnsignedChars(DFA84_maxS);
    static final short[] DFA84_accept = DFA.unpackEncodedString(DFA84_acceptS);
    static final short[] DFA84_special = DFA.unpackEncodedString(DFA84_specialS);
    static final short[][] DFA84_transition;

    static {
        int numStates = DFA84_transitionS.length;
        DFA84_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA84_transition[i] = DFA.unpackEncodedString(DFA84_transitionS[i]);
        }
    }

    class DFA84 extends DFA {

        public DFA84(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 84;
            this.eot = DFA84_eot;
            this.eof = DFA84_eof;
            this.min = DFA84_min;
            this.max = DFA84_max;
            this.accept = DFA84_accept;
            this.special = DFA84_special;
            this.transition = DFA84_transition;
        }
        public String getDescription() {
            return "874:4: (id= IDENTIFIER | fc1= functionCall | objCMethodCall | prefixOp= ( '!' | '~' ) opd= expression | '(' (par= expression ')' | typeRef ')' casted= expression ) | constant | '{' expression '}' )";
        }
    }
    static final String DFA83_eotS =
        "\u0081\uffff";
    static final String DFA83_eofS =
        "\32\uffff\1\2\146\uffff";
    static final String DFA83_minS =
        "\1\4\1\36\23\uffff\1\4\1\uffff\2\4\1\uffff\2\4\6\uffff\1\0\17\uffff"+
        "\1\0\21\uffff\1\0\33\uffff\2\0\12\uffff\1\0\24\uffff";
    static final String DFA83_maxS =
        "\1\116\1\134\23\uffff\1\116\1\uffff\2\116\1\uffff\1\134\1\116\6"+
        "\uffff\1\0\17\uffff\1\0\21\uffff\1\0\33\uffff\2\0\12\uffff\1\0\24"+
        "\uffff";
    static final String DFA83_acceptS =
        "\2\uffff\1\1\12\uffff\1\2\163\uffff";
    static final String DFA83_specialS =
        "\42\uffff\1\0\17\uffff\1\1\21\uffff\1\2\33\uffff\1\3\1\4\12\uffff"+
        "\1\5\24\uffff}>";
    static final String[] DFA83_transitionS = {
            "\2\2\1\1\1\15\4\2\14\uffff\1\2\6\uffff\1\15\3\uffff\1\2\12\uffff"+
            "\3\15\3\uffff\2\15\3\uffff\1\2\2\uffff\1\15\1\uffff\16\15\3"+
            "\2",
            "\1\2\3\uffff\1\2\1\25\1\32\1\33\1\2\4\uffff\2\2\7\uffff\2\15"+
            "\1\27\1\30\1\2\1\15\25\uffff\16\2",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\2\2\1\42\1\uffff\4\2\14\uffff\1\2\12\uffff\2\2\21\uffff\1"+
            "\15\2\uffff\1\2\22\uffff\3\2",
            "",
            "\3\2\1\uffff\4\2\14\uffff\1\2\12\uffff\1\2\1\15\17\uffff\4"+
            "\15\1\uffff\1\62\22\uffff\3\2",
            "\3\2\1\uffff\4\2\14\uffff\1\2\12\uffff\1\2\1\15\17\uffff\4"+
            "\15\1\uffff\1\104\22\uffff\3\2",
            "",
            "\2\15\1\140\1\uffff\4\15\14\uffff\1\15\1\2\2\uffff\3\2\3\uffff"+
            "\1\2\1\15\3\2\4\uffff\2\2\7\uffff\5\2\1\141\1\2\21\uffff\3\15"+
            "\16\2",
            "\2\2\1\154\1\15\4\2\14\uffff\1\2\6\uffff\1\15\3\uffff\1\2\2"+
            "\uffff\1\15\7\uffff\3\15\3\uffff\2\15\3\uffff\1\2\2\uffff\1"+
            "\15\1\uffff\16\15\3\2",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA83_eot = DFA.unpackEncodedString(DFA83_eotS);
    static final short[] DFA83_eof = DFA.unpackEncodedString(DFA83_eofS);
    static final char[] DFA83_min = DFA.unpackEncodedStringToUnsignedChars(DFA83_minS);
    static final char[] DFA83_max = DFA.unpackEncodedStringToUnsignedChars(DFA83_maxS);
    static final short[] DFA83_accept = DFA.unpackEncodedString(DFA83_acceptS);
    static final short[] DFA83_special = DFA.unpackEncodedString(DFA83_specialS);
    static final short[][] DFA83_transition;

    static {
        int numStates = DFA83_transitionS.length;
        DFA83_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA83_transition[i] = DFA.unpackEncodedString(DFA83_transitionS[i]);
        }
    }

    class DFA83 extends DFA {

        public DFA83(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 83;
            this.eot = DFA83_eot;
            this.eof = DFA83_eof;
            this.min = DFA83_min;
            this.max = DFA83_max;
            this.accept = DFA83_accept;
            this.special = DFA83_special;
            this.transition = DFA83_transition;
        }
        public String getDescription() {
            return "887:8: (par= expression ')' | typeRef ')' casted= expression )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA83_34 = input.LA(1);

                         
                        int index83_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred134_ObjCpp()) ) {s = 2;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index83_34);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA83_50 = input.LA(1);

                         
                        int index83_50 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred134_ObjCpp()) ) {s = 2;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index83_50);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA83_68 = input.LA(1);

                         
                        int index83_68 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred134_ObjCpp()) ) {s = 2;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index83_68);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA83_96 = input.LA(1);

                         
                        int index83_96 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred134_ObjCpp()) ) {s = 2;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index83_96);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA83_97 = input.LA(1);

                         
                        int index83_97 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred134_ObjCpp()) ) {s = 2;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index83_97);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA83_108 = input.LA(1);

                         
                        int index83_108 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred134_ObjCpp()) ) {s = 2;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index83_108);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 83, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA86_eotS =
        "\u00a7\uffff";
    static final String DFA86_eofS =
        "\1\1\u00a6\uffff";
    static final String DFA86_minS =
        "\1\6\7\uffff\3\0\2\uffff\6\0\u0094\uffff";
    static final String DFA86_maxS =
        "\1\134\7\uffff\3\0\2\uffff\6\0\u0094\uffff";
    static final String DFA86_acceptS =
        "\1\uffff\1\6\44\uffff\1\1\62\uffff\1\2\15\uffff\1\4\2\uffff\1\3"+
        "\73\uffff\1\5";
    static final String DFA86_specialS =
        "\10\uffff\1\0\1\1\1\2\2\uffff\1\3\1\4\1\5\1\6\1\7\1\10\u0094\uffff}>";
    static final String[] DFA86_transitionS = {
            "\1\1\22\uffff\1\1\2\uffff\2\1\1\15\3\uffff\1\20\1\uffff\1\1"+
            "\2\21\4\uffff\1\21\1\16\7\uffff\2\1\1\10\1\11\1\12\2\1\24\uffff"+
            "\14\21\1\17\1\22",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA86_eot = DFA.unpackEncodedString(DFA86_eotS);
    static final short[] DFA86_eof = DFA.unpackEncodedString(DFA86_eofS);
    static final char[] DFA86_min = DFA.unpackEncodedStringToUnsignedChars(DFA86_minS);
    static final char[] DFA86_max = DFA.unpackEncodedStringToUnsignedChars(DFA86_maxS);
    static final short[] DFA86_accept = DFA.unpackEncodedString(DFA86_acceptS);
    static final short[] DFA86_special = DFA.unpackEncodedString(DFA86_specialS);
    static final short[][] DFA86_transition;

    static {
        int numStates = DFA86_transitionS.length;
        DFA86_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA86_transition[i] = DFA.unpackEncodedString(DFA86_transitionS[i]);
        }
    }

    class DFA86 extends DFA {

        public DFA86(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 86;
            this.eot = DFA86_eot;
            this.eof = DFA86_eof;
            this.min = DFA86_min;
            this.max = DFA86_max;
            this.accept = DFA86_accept;
            this.special = DFA86_special;
            this.transition = DFA86_transition;
        }
        public String getDescription() {
            return "()* loopback of 900:3: (bop= ( '+' | '-' | '*' | '/' | '%' | '<<' | '>>>' | '>>' | '^' | '||' | '|' | '&&' | '&' | '<=' | '>=' | '<' | '>' | '==' | '!=' ) opd2= expression | '=' val= expression | '.' fieldName= IDENTIFIER | refStyle= ( ':' ':' | '-' '>' | '.' ) fc2= functionCall | '?' xif= expression ':' xelse= expression )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA86_8 = input.LA(1);

                         
                        int index86_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred155_ObjCpp()) ) {s = 38;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index86_8);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA86_9 = input.LA(1);

                         
                        int index86_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred155_ObjCpp()) ) {s = 38;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index86_9);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA86_10 = input.LA(1);

                         
                        int index86_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred155_ObjCpp()) ) {s = 38;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index86_10);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA86_13 = input.LA(1);

                         
                        int index86_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred156_ObjCpp()) ) {s = 89;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index86_13);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA86_14 = input.LA(1);

                         
                        int index86_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred155_ObjCpp()) ) {s = 38;}

                        else if ( (synpred160_ObjCpp()) ) {s = 103;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index86_14);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA86_15 = input.LA(1);

                         
                        int index86_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred157_ObjCpp()) ) {s = 106;}

                        else if ( (synpred160_ObjCpp()) ) {s = 103;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index86_15);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA86_16 = input.LA(1);

                         
                        int index86_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred160_ObjCpp()) ) {s = 103;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index86_16);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA86_17 = input.LA(1);

                         
                        int index86_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred155_ObjCpp()) ) {s = 38;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index86_17);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA86_18 = input.LA(1);

                         
                        int index86_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred161_ObjCpp()) ) {s = 166;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index86_18);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 86, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA87_eotS =
        "\41\uffff";
    static final String DFA87_eofS =
        "\41\uffff";
    static final String DFA87_minS =
        "\1\4\40\uffff";
    static final String DFA87_maxS =
        "\1\143\40\uffff";
    static final String DFA87_acceptS =
        "\1\uffff\1\2\1\1\36\uffff";
    static final String DFA87_specialS =
        "\41\uffff}>";
    static final String[] DFA87_transitionS = {
            "\10\2\14\uffff\1\2\1\1\2\2\1\uffff\1\2\1\uffff\3\2\1\uffff\1"+
            "\2\12\uffff\3\2\3\uffff\2\2\3\uffff\1\2\1\uffff\2\2\1\uffff"+
            "\21\2\16\uffff\2\2\1\uffff\4\2",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA87_eot = DFA.unpackEncodedString(DFA87_eotS);
    static final short[] DFA87_eof = DFA.unpackEncodedString(DFA87_eofS);
    static final char[] DFA87_min = DFA.unpackEncodedStringToUnsignedChars(DFA87_minS);
    static final char[] DFA87_max = DFA.unpackEncodedStringToUnsignedChars(DFA87_maxS);
    static final short[] DFA87_accept = DFA.unpackEncodedString(DFA87_acceptS);
    static final short[] DFA87_special = DFA.unpackEncodedString(DFA87_specialS);
    static final short[][] DFA87_transition;

    static {
        int numStates = DFA87_transitionS.length;
        DFA87_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA87_transition[i] = DFA.unpackEncodedString(DFA87_transitionS[i]);
        }
    }

    class DFA87 extends DFA {

        public DFA87(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 87;
            this.eot = DFA87_eot;
            this.eof = DFA87_eof;
            this.min = DFA87_min;
            this.max = DFA87_max;
            this.accept = DFA87_accept;
            this.special = DFA87_special;
            this.transition = DFA87_transition;
        }
        public String getDescription() {
            return "()* loopback of 929:8: ( statement )*";
        }
    }
    static final String DFA94_eotS =
        "\u018c\uffff";
    static final String DFA94_eofS =
        "\u018c\uffff";
    static final String DFA94_minS =
        "\2\4\1\5\35\uffff\1\4\1\5\14\uffff\1\43\3\4\6\31\10\uffff\1\4\16"+
        "\uffff\1\4\2\uffff\1\4\1\uffff\1\0\2\4\1\uffff\1\4\3\uffff\14\0"+
        "\24\uffff\1\0\1\uffff\2\0\2\uffff\7\0\2\uffff\1\0\15\uffff\63\0"+
        "\2\uffff\6\0\2\uffff\6\0\2\uffff\6\0\2\uffff\6\0\2\uffff\6\0\2\uffff"+
        "\11\0\1\uffff\1\0\14\uffff\16\0\65\uffff\2\0\31\uffff\1\0\14\uffff"+
        "\2\0\22\uffff";
    static final String DFA94_maxS =
        "\2\143\1\134\35\uffff\1\143\1\134\14\uffff\1\43\3\116\6\134\10\uffff"+
        "\1\116\16\uffff\1\116\2\uffff\1\116\1\uffff\1\0\2\116\1\uffff\1"+
        "\116\3\uffff\14\0\24\uffff\1\0\1\uffff\2\0\2\uffff\7\0\2\uffff\1"+
        "\0\15\uffff\63\0\2\uffff\6\0\2\uffff\6\0\2\uffff\6\0\2\uffff\6\0"+
        "\2\uffff\6\0\2\uffff\11\0\1\uffff\1\0\14\uffff\16\0\65\uffff\2\0"+
        "\31\uffff\1\0\14\uffff\2\0\22\uffff";
    static final String DFA94_acceptS =
        "\3\uffff\1\2\13\uffff\1\3\11\uffff\1\4\1\5\1\6\1\7\1\10\1\11\1\12"+
        "\2\uffff\1\1\u0168\uffff\1\13";
    static final String DFA94_specialS =
        "\124\uffff\1\0\7\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12"+
        "\1\13\1\14\24\uffff\1\15\1\uffff\1\16\1\17\2\uffff\1\20\1\21\1\22"+
        "\1\23\1\24\1\25\1\26\2\uffff\1\27\15\uffff\1\30\1\31\1\32\1\33\1"+
        "\34\1\35\1\36\1\37\1\40\1\41\1\42\1\43\1\44\1\45\1\46\1\47\1\50"+
        "\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\1\61\1\62\1\63\1\64\1\65"+
        "\1\66\1\67\1\70\1\71\1\72\1\73\1\74\1\75\1\76\1\77\1\100\1\101\1"+
        "\102\1\103\1\104\1\105\1\106\1\107\1\110\1\111\1\112\2\uffff\1\113"+
        "\1\114\1\115\1\116\1\117\1\120\2\uffff\1\121\1\122\1\123\1\124\1"+
        "\125\1\126\2\uffff\1\127\1\130\1\131\1\132\1\133\1\134\2\uffff\1"+
        "\135\1\136\1\137\1\140\1\141\1\142\2\uffff\1\143\1\144\1\145\1\146"+
        "\1\147\1\150\2\uffff\1\151\1\152\1\153\1\154\1\155\1\156\1\157\1"+
        "\160\1\161\1\uffff\1\162\14\uffff\1\163\1\164\1\165\1\166\1\167"+
        "\1\170\1\171\1\172\1\173\1\174\1\175\1\176\1\177\1\u0080\65\uffff"+
        "\1\u0081\1\u0082\31\uffff\1\u0083\14\uffff\1\u0084\1\u0085\22\uffff}>";
    static final String[] DFA94_transitionS = {
            "\2\17\1\2\1\3\4\17\14\uffff\1\1\1\uffff\2\3\1\uffff\1\37\1\uffff"+
            "\3\3\1\uffff\1\17\12\uffff\3\3\3\uffff\2\3\3\uffff\1\17\1\uffff"+
            "\2\3\1\uffff\16\3\3\17\16\uffff\1\31\1\32\1\uffff\1\33\1\34"+
            "\1\35\1\36",
            "\1\62\1\67\1\41\1\42\1\63\1\64\1\65\1\66\14\uffff\1\40\3\42"+
            "\1\uffff\1\42\1\uffff\3\42\1\uffff\1\61\12\uffff\3\42\3\uffff"+
            "\2\42\3\uffff\1\57\1\uffff\2\42\1\uffff\16\42\1\56\2\60\16\uffff"+
            "\2\42\1\uffff\4\42",
            "\3\3\22\uffff\3\3\1\124\1\117\3\3\1\17\1\100\1\uffff\1\126"+
            "\1\17\4\uffff\2\17\1\uffff\3\3\3\uffff\2\3\1\122\1\125\1\130"+
            "\1\3\1\uffff\2\3\1\uffff\16\3\3\uffff\16\17",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\141\1\146\1\134\1\42\1\142\1\143\1\144\1\145\14\uffff\1"+
            "\147\3\42\1\uffff\1\42\1\uffff\3\42\1\uffff\1\140\12\uffff\3"+
            "\42\3\uffff\2\42\3\uffff\1\136\1\uffff\2\42\1\uffff\16\42\1"+
            "\135\2\137\16\uffff\2\42\1\uffff\4\42",
            "\3\42\21\uffff\1\17\4\42\1\u0084\3\42\1\u0086\1\174\1\uffff"+
            "\1\u0082\1\u008b\4\uffff\1\u008b\1\u0083\1\uffff\3\42\3\uffff"+
            "\2\42\1\176\1\177\1\u0087\1\42\1\uffff\2\42\1\uffff\16\42\3"+
            "\uffff\14\u008b\1\u0085\1\u0088",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\u0099",
            "\1\u009f\1\u00a4\1\u009a\1\uffff\1\u00a0\1\u00a1\1\u00a2\1"+
            "\u00a3\14\uffff\1\u00a5\12\uffff\1\u009e\25\uffff\1\u009c\22"+
            "\uffff\1\u009b\2\u009d",
            "\1\u00ab\1\u00b0\1\u00a6\1\uffff\1\u00ac\1\u00ad\1\u00ae\1"+
            "\u00af\14\uffff\1\u00b1\12\uffff\1\u00aa\25\uffff\1\u00a8\22"+
            "\uffff\1\u00a7\2\u00a9",
            "\1\u00b7\1\u00bc\1\u00b2\1\u00c4\1\u00b8\1\u00b9\1\u00ba\1"+
            "\u00bb\14\uffff\1\u00bd\6\uffff\1\u00bf\3\uffff\1\u00b6\12\uffff"+
            "\2\u00be\1\u00c1\3\uffff\2\u00c0\3\uffff\1\u00b4\2\uffff\1\u00c2"+
            "\1\uffff\4\u00c3\1\u00c4\11\u00c5\1\u00b3\2\u00b5",
            "\1\17\3\uffff\1\42\1\u00c7\3\uffff\1\u00c9\2\uffff\2\u00ca"+
            "\4\uffff\1\u00ca\1\u00c6\11\uffff\3\u00ca\26\uffff\14\u00ca"+
            "\1\u00c8\1\u00cb",
            "\1\17\3\uffff\1\42\1\u00cf\3\uffff\1\u00d1\2\uffff\2\u00d2"+
            "\4\uffff\1\u00d2\1\u00ce\11\uffff\3\u00d2\26\uffff\14\u00d2"+
            "\1\u00d0\1\u00d3",
            "\1\17\3\uffff\1\42\1\u00d7\3\uffff\1\u00d9\2\uffff\2\u00da"+
            "\4\uffff\1\u00da\1\u00d6\11\uffff\3\u00da\26\uffff\14\u00da"+
            "\1\u00d8\1\u00db",
            "\1\17\3\uffff\1\42\1\u00df\3\uffff\1\u00e1\2\uffff\2\u00e2"+
            "\4\uffff\1\u00e2\1\u00de\11\uffff\3\u00e2\26\uffff\14\u00e2"+
            "\1\u00e0\1\u00e3",
            "\1\17\3\uffff\1\42\1\u00e7\3\uffff\1\u00e9\2\uffff\2\u00ea"+
            "\4\uffff\1\u00ea\1\u00e6\11\uffff\3\u00ea\26\uffff\14\u00ea"+
            "\1\u00e8\1\u00eb",
            "\1\17\3\uffff\1\42\1\u00ef\3\uffff\1\u00f1\2\uffff\2\u00f2"+
            "\4\uffff\1\u00f2\1\u00ee\11\uffff\3\u00f2\26\uffff\14\u00f2"+
            "\1\u00f0\1\u00f3",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\2\17\1\u00fe\1\u00fc\4\17\14\uffff\1\17\6\uffff\1\u00f7\3"+
            "\uffff\1\17\1\u0100\10\uffff\1\3\2\u00f6\1\u00f9\3\uffff\2\u00f8"+
            "\1\3\2\uffff\1\17\2\uffff\1\u00fa\1\uffff\4\u00fb\1\u00fc\11"+
            "\u00fd\3\17",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\u0112\1\u0117\1\u010d\1\uffff\1\u0113\1\u0114\1\u0115\1"+
            "\u0116\14\uffff\1\u0118\12\uffff\1\u0111\25\uffff\1\u010f\22"+
            "\uffff\1\u010e\2\u0110",
            "",
            "",
            "\2\17\1\u0119\1\uffff\4\17\14\uffff\1\17\3\uffff\3\3\4\uffff"+
            "\1\17\20\uffff\5\3\1\u011a\22\uffff\3\17",
            "",
            "\1\uffff",
            "\2\17\1\u0150\1\uffff\4\17\14\uffff\1\17\3\uffff\3\3\4\uffff"+
            "\1\17\20\uffff\5\3\1\u0151\22\uffff\3\17",
            "\2\17\1\u016b\1\3\4\17\14\uffff\1\17\6\uffff\1\3\3\uffff\1"+
            "\17\2\uffff\1\3\7\uffff\3\3\3\uffff\2\3\3\uffff\1\17\2\uffff"+
            "\1\3\1\uffff\16\3\3\17",
            "",
            "\2\17\1\u0178\1\uffff\4\17\14\uffff\1\17\3\uffff\3\3\4\uffff"+
            "\1\17\20\uffff\5\3\1\u0179\22\uffff\3\17",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA94_eot = DFA.unpackEncodedString(DFA94_eotS);
    static final short[] DFA94_eof = DFA.unpackEncodedString(DFA94_eofS);
    static final char[] DFA94_min = DFA.unpackEncodedStringToUnsignedChars(DFA94_minS);
    static final char[] DFA94_max = DFA.unpackEncodedStringToUnsignedChars(DFA94_maxS);
    static final short[] DFA94_accept = DFA.unpackEncodedString(DFA94_acceptS);
    static final short[] DFA94_special = DFA.unpackEncodedString(DFA94_specialS);
    static final short[][] DFA94_transition;

    static {
        int numStates = DFA94_transitionS.length;
        DFA94_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA94_transition[i] = DFA.unpackEncodedString(DFA94_transitionS[i]);
        }
    }

    class DFA94 extends DFA {

        public DFA94(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 94;
            this.eot = DFA94_eot;
            this.eof = DFA94_eof;
            this.min = DFA94_min;
            this.max = DFA94_max;
            this.accept = DFA94_accept;
            this.special = DFA94_special;
            this.transition = DFA94_transition;
        }
        public String getDescription() {
            return "931:1: statement : ( statementsBlock | declaration | expression ( '=' expression )? ';' | 'return' expression ';' | 'if' '(' expression ')' statement ( 'else' statement )? | 'while' '(' expression ')' statement | 'do' statement 'while' '(' expression ')' ';' | 'for' '(' ( statement )? ';' ( expression )? ';' ( statement )? ')' statement | 'switch' '(' expression ')' '{' ( 'case' expression ':' | statement )* '}' | ';' | IDENTIFIER {...}? '(' varDecl ':' expression ')' statement );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA94_84 = input.LA(1);

                         
                        int index94_84 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred164_ObjCpp()) ) {s = 3;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_84);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA94_92 = input.LA(1);

                         
                        int index94_92 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_92);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA94_93 = input.LA(1);

                         
                        int index94_93 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_93);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA94_94 = input.LA(1);

                         
                        int index94_94 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_94);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA94_95 = input.LA(1);

                         
                        int index94_95 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_95);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA94_96 = input.LA(1);

                         
                        int index94_96 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_96);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA94_97 = input.LA(1);

                         
                        int index94_97 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_97);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA94_98 = input.LA(1);

                         
                        int index94_98 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_98);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA94_99 = input.LA(1);

                         
                        int index94_99 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_99);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA94_100 = input.LA(1);

                         
                        int index94_100 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_100);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA94_101 = input.LA(1);

                         
                        int index94_101 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_101);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA94_102 = input.LA(1);

                         
                        int index94_102 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_102);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA94_103 = input.LA(1);

                         
                        int index94_103 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_103);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA94_124 = input.LA(1);

                         
                        int index94_124 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_124);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA94_126 = input.LA(1);

                         
                        int index94_126 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_126);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA94_127 = input.LA(1);

                         
                        int index94_127 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_127);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA94_130 = input.LA(1);

                         
                        int index94_130 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_130);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA94_131 = input.LA(1);

                         
                        int index94_131 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_131);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA94_132 = input.LA(1);

                         
                        int index94_132 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_132);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA94_133 = input.LA(1);

                         
                        int index94_133 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_133);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA94_134 = input.LA(1);

                         
                        int index94_134 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_134);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA94_135 = input.LA(1);

                         
                        int index94_135 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_135);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA94_136 = input.LA(1);

                         
                        int index94_136 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_136);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA94_139 = input.LA(1);

                         
                        int index94_139 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_139);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA94_153 = input.LA(1);

                         
                        int index94_153 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_153);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA94_154 = input.LA(1);

                         
                        int index94_154 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_154);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA94_155 = input.LA(1);

                         
                        int index94_155 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_155);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA94_156 = input.LA(1);

                         
                        int index94_156 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_156);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA94_157 = input.LA(1);

                         
                        int index94_157 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_157);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA94_158 = input.LA(1);

                         
                        int index94_158 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_158);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA94_159 = input.LA(1);

                         
                        int index94_159 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_159);
                        if ( s>=0 ) return s;
                        break;
                    case 31 : 
                        int LA94_160 = input.LA(1);

                         
                        int index94_160 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_160);
                        if ( s>=0 ) return s;
                        break;
                    case 32 : 
                        int LA94_161 = input.LA(1);

                         
                        int index94_161 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_161);
                        if ( s>=0 ) return s;
                        break;
                    case 33 : 
                        int LA94_162 = input.LA(1);

                         
                        int index94_162 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_162);
                        if ( s>=0 ) return s;
                        break;
                    case 34 : 
                        int LA94_163 = input.LA(1);

                         
                        int index94_163 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_163);
                        if ( s>=0 ) return s;
                        break;
                    case 35 : 
                        int LA94_164 = input.LA(1);

                         
                        int index94_164 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_164);
                        if ( s>=0 ) return s;
                        break;
                    case 36 : 
                        int LA94_165 = input.LA(1);

                         
                        int index94_165 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_165);
                        if ( s>=0 ) return s;
                        break;
                    case 37 : 
                        int LA94_166 = input.LA(1);

                         
                        int index94_166 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_166);
                        if ( s>=0 ) return s;
                        break;
                    case 38 : 
                        int LA94_167 = input.LA(1);

                         
                        int index94_167 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_167);
                        if ( s>=0 ) return s;
                        break;
                    case 39 : 
                        int LA94_168 = input.LA(1);

                         
                        int index94_168 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_168);
                        if ( s>=0 ) return s;
                        break;
                    case 40 : 
                        int LA94_169 = input.LA(1);

                         
                        int index94_169 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_169);
                        if ( s>=0 ) return s;
                        break;
                    case 41 : 
                        int LA94_170 = input.LA(1);

                         
                        int index94_170 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_170);
                        if ( s>=0 ) return s;
                        break;
                    case 42 : 
                        int LA94_171 = input.LA(1);

                         
                        int index94_171 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_171);
                        if ( s>=0 ) return s;
                        break;
                    case 43 : 
                        int LA94_172 = input.LA(1);

                         
                        int index94_172 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_172);
                        if ( s>=0 ) return s;
                        break;
                    case 44 : 
                        int LA94_173 = input.LA(1);

                         
                        int index94_173 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_173);
                        if ( s>=0 ) return s;
                        break;
                    case 45 : 
                        int LA94_174 = input.LA(1);

                         
                        int index94_174 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_174);
                        if ( s>=0 ) return s;
                        break;
                    case 46 : 
                        int LA94_175 = input.LA(1);

                         
                        int index94_175 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_175);
                        if ( s>=0 ) return s;
                        break;
                    case 47 : 
                        int LA94_176 = input.LA(1);

                         
                        int index94_176 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_176);
                        if ( s>=0 ) return s;
                        break;
                    case 48 : 
                        int LA94_177 = input.LA(1);

                         
                        int index94_177 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_177);
                        if ( s>=0 ) return s;
                        break;
                    case 49 : 
                        int LA94_178 = input.LA(1);

                         
                        int index94_178 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_178);
                        if ( s>=0 ) return s;
                        break;
                    case 50 : 
                        int LA94_179 = input.LA(1);

                         
                        int index94_179 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_179);
                        if ( s>=0 ) return s;
                        break;
                    case 51 : 
                        int LA94_180 = input.LA(1);

                         
                        int index94_180 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_180);
                        if ( s>=0 ) return s;
                        break;
                    case 52 : 
                        int LA94_181 = input.LA(1);

                         
                        int index94_181 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_181);
                        if ( s>=0 ) return s;
                        break;
                    case 53 : 
                        int LA94_182 = input.LA(1);

                         
                        int index94_182 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_182);
                        if ( s>=0 ) return s;
                        break;
                    case 54 : 
                        int LA94_183 = input.LA(1);

                         
                        int index94_183 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_183);
                        if ( s>=0 ) return s;
                        break;
                    case 55 : 
                        int LA94_184 = input.LA(1);

                         
                        int index94_184 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_184);
                        if ( s>=0 ) return s;
                        break;
                    case 56 : 
                        int LA94_185 = input.LA(1);

                         
                        int index94_185 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_185);
                        if ( s>=0 ) return s;
                        break;
                    case 57 : 
                        int LA94_186 = input.LA(1);

                         
                        int index94_186 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_186);
                        if ( s>=0 ) return s;
                        break;
                    case 58 : 
                        int LA94_187 = input.LA(1);

                         
                        int index94_187 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_187);
                        if ( s>=0 ) return s;
                        break;
                    case 59 : 
                        int LA94_188 = input.LA(1);

                         
                        int index94_188 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_188);
                        if ( s>=0 ) return s;
                        break;
                    case 60 : 
                        int LA94_189 = input.LA(1);

                         
                        int index94_189 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_189);
                        if ( s>=0 ) return s;
                        break;
                    case 61 : 
                        int LA94_190 = input.LA(1);

                         
                        int index94_190 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_190);
                        if ( s>=0 ) return s;
                        break;
                    case 62 : 
                        int LA94_191 = input.LA(1);

                         
                        int index94_191 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_191);
                        if ( s>=0 ) return s;
                        break;
                    case 63 : 
                        int LA94_192 = input.LA(1);

                         
                        int index94_192 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_192);
                        if ( s>=0 ) return s;
                        break;
                    case 64 : 
                        int LA94_193 = input.LA(1);

                         
                        int index94_193 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_193);
                        if ( s>=0 ) return s;
                        break;
                    case 65 : 
                        int LA94_194 = input.LA(1);

                         
                        int index94_194 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_194);
                        if ( s>=0 ) return s;
                        break;
                    case 66 : 
                        int LA94_195 = input.LA(1);

                         
                        int index94_195 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_195);
                        if ( s>=0 ) return s;
                        break;
                    case 67 : 
                        int LA94_196 = input.LA(1);

                         
                        int index94_196 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_196);
                        if ( s>=0 ) return s;
                        break;
                    case 68 : 
                        int LA94_197 = input.LA(1);

                         
                        int index94_197 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_197);
                        if ( s>=0 ) return s;
                        break;
                    case 69 : 
                        int LA94_198 = input.LA(1);

                         
                        int index94_198 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_198);
                        if ( s>=0 ) return s;
                        break;
                    case 70 : 
                        int LA94_199 = input.LA(1);

                         
                        int index94_199 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_199);
                        if ( s>=0 ) return s;
                        break;
                    case 71 : 
                        int LA94_200 = input.LA(1);

                         
                        int index94_200 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_200);
                        if ( s>=0 ) return s;
                        break;
                    case 72 : 
                        int LA94_201 = input.LA(1);

                         
                        int index94_201 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_201);
                        if ( s>=0 ) return s;
                        break;
                    case 73 : 
                        int LA94_202 = input.LA(1);

                         
                        int index94_202 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_202);
                        if ( s>=0 ) return s;
                        break;
                    case 74 : 
                        int LA94_203 = input.LA(1);

                         
                        int index94_203 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_203);
                        if ( s>=0 ) return s;
                        break;
                    case 75 : 
                        int LA94_206 = input.LA(1);

                         
                        int index94_206 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_206);
                        if ( s>=0 ) return s;
                        break;
                    case 76 : 
                        int LA94_207 = input.LA(1);

                         
                        int index94_207 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_207);
                        if ( s>=0 ) return s;
                        break;
                    case 77 : 
                        int LA94_208 = input.LA(1);

                         
                        int index94_208 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_208);
                        if ( s>=0 ) return s;
                        break;
                    case 78 : 
                        int LA94_209 = input.LA(1);

                         
                        int index94_209 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_209);
                        if ( s>=0 ) return s;
                        break;
                    case 79 : 
                        int LA94_210 = input.LA(1);

                         
                        int index94_210 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_210);
                        if ( s>=0 ) return s;
                        break;
                    case 80 : 
                        int LA94_211 = input.LA(1);

                         
                        int index94_211 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_211);
                        if ( s>=0 ) return s;
                        break;
                    case 81 : 
                        int LA94_214 = input.LA(1);

                         
                        int index94_214 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_214);
                        if ( s>=0 ) return s;
                        break;
                    case 82 : 
                        int LA94_215 = input.LA(1);

                         
                        int index94_215 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_215);
                        if ( s>=0 ) return s;
                        break;
                    case 83 : 
                        int LA94_216 = input.LA(1);

                         
                        int index94_216 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_216);
                        if ( s>=0 ) return s;
                        break;
                    case 84 : 
                        int LA94_217 = input.LA(1);

                         
                        int index94_217 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_217);
                        if ( s>=0 ) return s;
                        break;
                    case 85 : 
                        int LA94_218 = input.LA(1);

                         
                        int index94_218 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_218);
                        if ( s>=0 ) return s;
                        break;
                    case 86 : 
                        int LA94_219 = input.LA(1);

                         
                        int index94_219 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_219);
                        if ( s>=0 ) return s;
                        break;
                    case 87 : 
                        int LA94_222 = input.LA(1);

                         
                        int index94_222 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_222);
                        if ( s>=0 ) return s;
                        break;
                    case 88 : 
                        int LA94_223 = input.LA(1);

                         
                        int index94_223 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_223);
                        if ( s>=0 ) return s;
                        break;
                    case 89 : 
                        int LA94_224 = input.LA(1);

                         
                        int index94_224 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_224);
                        if ( s>=0 ) return s;
                        break;
                    case 90 : 
                        int LA94_225 = input.LA(1);

                         
                        int index94_225 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_225);
                        if ( s>=0 ) return s;
                        break;
                    case 91 : 
                        int LA94_226 = input.LA(1);

                         
                        int index94_226 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_226);
                        if ( s>=0 ) return s;
                        break;
                    case 92 : 
                        int LA94_227 = input.LA(1);

                         
                        int index94_227 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_227);
                        if ( s>=0 ) return s;
                        break;
                    case 93 : 
                        int LA94_230 = input.LA(1);

                         
                        int index94_230 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_230);
                        if ( s>=0 ) return s;
                        break;
                    case 94 : 
                        int LA94_231 = input.LA(1);

                         
                        int index94_231 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_231);
                        if ( s>=0 ) return s;
                        break;
                    case 95 : 
                        int LA94_232 = input.LA(1);

                         
                        int index94_232 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_232);
                        if ( s>=0 ) return s;
                        break;
                    case 96 : 
                        int LA94_233 = input.LA(1);

                         
                        int index94_233 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_233);
                        if ( s>=0 ) return s;
                        break;
                    case 97 : 
                        int LA94_234 = input.LA(1);

                         
                        int index94_234 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_234);
                        if ( s>=0 ) return s;
                        break;
                    case 98 : 
                        int LA94_235 = input.LA(1);

                         
                        int index94_235 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_235);
                        if ( s>=0 ) return s;
                        break;
                    case 99 : 
                        int LA94_238 = input.LA(1);

                         
                        int index94_238 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_238);
                        if ( s>=0 ) return s;
                        break;
                    case 100 : 
                        int LA94_239 = input.LA(1);

                         
                        int index94_239 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_239);
                        if ( s>=0 ) return s;
                        break;
                    case 101 : 
                        int LA94_240 = input.LA(1);

                         
                        int index94_240 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_240);
                        if ( s>=0 ) return s;
                        break;
                    case 102 : 
                        int LA94_241 = input.LA(1);

                         
                        int index94_241 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_241);
                        if ( s>=0 ) return s;
                        break;
                    case 103 : 
                        int LA94_242 = input.LA(1);

                         
                        int index94_242 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_242);
                        if ( s>=0 ) return s;
                        break;
                    case 104 : 
                        int LA94_243 = input.LA(1);

                         
                        int index94_243 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 34;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_243);
                        if ( s>=0 ) return s;
                        break;
                    case 105 : 
                        int LA94_246 = input.LA(1);

                         
                        int index94_246 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred164_ObjCpp()) ) {s = 3;}

                        else if ( (true) ) {s = 395;}

                         
                        input.seek(index94_246);
                        if ( s>=0 ) return s;
                        break;
                    case 106 : 
                        int LA94_247 = input.LA(1);

                         
                        int index94_247 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred164_ObjCpp()) ) {s = 3;}

                        else if ( (true) ) {s = 395;}

                         
                        input.seek(index94_247);
                        if ( s>=0 ) return s;
                        break;
                    case 107 : 
                        int LA94_248 = input.LA(1);

                         
                        int index94_248 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred164_ObjCpp()) ) {s = 3;}

                        else if ( (true) ) {s = 395;}

                         
                        input.seek(index94_248);
                        if ( s>=0 ) return s;
                        break;
                    case 108 : 
                        int LA94_249 = input.LA(1);

                         
                        int index94_249 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred164_ObjCpp()) ) {s = 3;}

                        else if ( (true) ) {s = 395;}

                         
                        input.seek(index94_249);
                        if ( s>=0 ) return s;
                        break;
                    case 109 : 
                        int LA94_250 = input.LA(1);

                         
                        int index94_250 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred164_ObjCpp()) ) {s = 3;}

                        else if ( (true) ) {s = 395;}

                         
                        input.seek(index94_250);
                        if ( s>=0 ) return s;
                        break;
                    case 110 : 
                        int LA94_251 = input.LA(1);

                         
                        int index94_251 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred164_ObjCpp()) ) {s = 3;}

                        else if ( (true) ) {s = 395;}

                         
                        input.seek(index94_251);
                        if ( s>=0 ) return s;
                        break;
                    case 111 : 
                        int LA94_252 = input.LA(1);

                         
                        int index94_252 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred164_ObjCpp()) ) {s = 3;}

                        else if ( (true) ) {s = 395;}

                         
                        input.seek(index94_252);
                        if ( s>=0 ) return s;
                        break;
                    case 112 : 
                        int LA94_253 = input.LA(1);

                         
                        int index94_253 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred164_ObjCpp()) ) {s = 3;}

                        else if ( (true) ) {s = 395;}

                         
                        input.seek(index94_253);
                        if ( s>=0 ) return s;
                        break;
                    case 113 : 
                        int LA94_254 = input.LA(1);

                         
                        int index94_254 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred164_ObjCpp()) ) {s = 3;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                        else if ( (true) ) {s = 395;}

                         
                        input.seek(index94_254);
                        if ( s>=0 ) return s;
                        break;
                    case 114 : 
                        int LA94_256 = input.LA(1);

                         
                        int index94_256 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred164_ObjCpp()) ) {s = 3;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_256);
                        if ( s>=0 ) return s;
                        break;
                    case 115 : 
                        int LA94_269 = input.LA(1);

                         
                        int index94_269 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred164_ObjCpp()) ) {s = 3;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_269);
                        if ( s>=0 ) return s;
                        break;
                    case 116 : 
                        int LA94_270 = input.LA(1);

                         
                        int index94_270 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred164_ObjCpp()) ) {s = 3;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_270);
                        if ( s>=0 ) return s;
                        break;
                    case 117 : 
                        int LA94_271 = input.LA(1);

                         
                        int index94_271 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred164_ObjCpp()) ) {s = 3;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_271);
                        if ( s>=0 ) return s;
                        break;
                    case 118 : 
                        int LA94_272 = input.LA(1);

                         
                        int index94_272 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred164_ObjCpp()) ) {s = 3;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_272);
                        if ( s>=0 ) return s;
                        break;
                    case 119 : 
                        int LA94_273 = input.LA(1);

                         
                        int index94_273 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred164_ObjCpp()) ) {s = 3;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_273);
                        if ( s>=0 ) return s;
                        break;
                    case 120 : 
                        int LA94_274 = input.LA(1);

                         
                        int index94_274 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred164_ObjCpp()) ) {s = 3;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_274);
                        if ( s>=0 ) return s;
                        break;
                    case 121 : 
                        int LA94_275 = input.LA(1);

                         
                        int index94_275 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred164_ObjCpp()) ) {s = 3;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_275);
                        if ( s>=0 ) return s;
                        break;
                    case 122 : 
                        int LA94_276 = input.LA(1);

                         
                        int index94_276 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred164_ObjCpp()) ) {s = 3;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_276);
                        if ( s>=0 ) return s;
                        break;
                    case 123 : 
                        int LA94_277 = input.LA(1);

                         
                        int index94_277 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred164_ObjCpp()) ) {s = 3;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_277);
                        if ( s>=0 ) return s;
                        break;
                    case 124 : 
                        int LA94_278 = input.LA(1);

                         
                        int index94_278 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred164_ObjCpp()) ) {s = 3;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_278);
                        if ( s>=0 ) return s;
                        break;
                    case 125 : 
                        int LA94_279 = input.LA(1);

                         
                        int index94_279 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred164_ObjCpp()) ) {s = 3;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_279);
                        if ( s>=0 ) return s;
                        break;
                    case 126 : 
                        int LA94_280 = input.LA(1);

                         
                        int index94_280 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred164_ObjCpp()) ) {s = 3;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_280);
                        if ( s>=0 ) return s;
                        break;
                    case 127 : 
                        int LA94_281 = input.LA(1);

                         
                        int index94_281 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred164_ObjCpp()) ) {s = 3;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_281);
                        if ( s>=0 ) return s;
                        break;
                    case 128 : 
                        int LA94_282 = input.LA(1);

                         
                        int index94_282 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred164_ObjCpp()) ) {s = 3;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_282);
                        if ( s>=0 ) return s;
                        break;
                    case 129 : 
                        int LA94_336 = input.LA(1);

                         
                        int index94_336 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred164_ObjCpp()) ) {s = 3;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_336);
                        if ( s>=0 ) return s;
                        break;
                    case 130 : 
                        int LA94_337 = input.LA(1);

                         
                        int index94_337 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred164_ObjCpp()) ) {s = 3;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_337);
                        if ( s>=0 ) return s;
                        break;
                    case 131 : 
                        int LA94_363 = input.LA(1);

                         
                        int index94_363 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred164_ObjCpp()) ) {s = 3;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_363);
                        if ( s>=0 ) return s;
                        break;
                    case 132 : 
                        int LA94_376 = input.LA(1);

                         
                        int index94_376 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred164_ObjCpp()) ) {s = 3;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_376);
                        if ( s>=0 ) return s;
                        break;
                    case 133 : 
                        int LA94_377 = input.LA(1);

                         
                        int index94_377 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred164_ObjCpp()) ) {s = 3;}

                        else if ( (synpred166_ObjCpp()) ) {s = 15;}

                         
                        input.seek(index94_377);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 94, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA89_eotS =
        "\105\uffff";
    static final String DFA89_eofS =
        "\1\2\104\uffff";
    static final String DFA89_minS =
        "\1\4\1\0\103\uffff";
    static final String DFA89_maxS =
        "\1\144\1\0\103\uffff";
    static final String DFA89_acceptS =
        "\2\uffff\1\2\101\uffff\1\1";
    static final String DFA89_specialS =
        "\1\uffff\1\0\103\uffff}>";
    static final String[] DFA89_transitionS = {
            "\10\2\14\uffff\4\2\1\uffff\1\2\1\uffff\3\2\1\uffff\2\2\11\uffff"+
            "\3\2\3\uffff\2\2\3\uffff\1\2\1\uffff\2\2\1\uffff\21\2\16\uffff"+
            "\2\2\1\1\5\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA89_eot = DFA.unpackEncodedString(DFA89_eotS);
    static final short[] DFA89_eof = DFA.unpackEncodedString(DFA89_eofS);
    static final char[] DFA89_min = DFA.unpackEncodedStringToUnsignedChars(DFA89_minS);
    static final char[] DFA89_max = DFA.unpackEncodedStringToUnsignedChars(DFA89_maxS);
    static final short[] DFA89_accept = DFA.unpackEncodedString(DFA89_acceptS);
    static final short[] DFA89_special = DFA.unpackEncodedString(DFA89_specialS);
    static final short[][] DFA89_transition;

    static {
        int numStates = DFA89_transitionS.length;
        DFA89_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA89_transition[i] = DFA.unpackEncodedString(DFA89_transitionS[i]);
        }
    }

    class DFA89 extends DFA {

        public DFA89(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 89;
            this.eot = DFA89_eot;
            this.eof = DFA89_eof;
            this.min = DFA89_min;
            this.max = DFA89_max;
            this.accept = DFA89_accept;
            this.special = DFA89_special;
            this.transition = DFA89_transition;
        }
        public String getDescription() {
            return "937:37: ( 'else' statement )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA89_1 = input.LA(1);

                         
                        int index89_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_ObjCpp()) ) {s = 68;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index89_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 89, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA90_eotS =
        "\115\uffff";
    static final String DFA90_eofS =
        "\115\uffff";
    static final String DFA90_minS =
        "\1\4\36\uffff\2\4\14\uffff\2\0\14\uffff\12\0\6\uffff\1\0\1\uffff";
    static final String DFA90_maxS =
        "\1\143\36\uffff\1\116\1\143\14\uffff\2\0\14\uffff\12\0\6\uffff\1"+
        "\0\1\uffff";
    static final String DFA90_acceptS =
        "\1\uffff\1\1\37\uffff\1\2\53\uffff";
    static final String DFA90_specialS =
        "\55\uffff\1\0\1\1\14\uffff\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12"+
        "\1\13\6\uffff\1\14\1\uffff}>";
    static final String[] DFA90_transitionS = {
            "\10\1\14\uffff\1\1\1\uffff\2\1\1\uffff\1\37\1\uffff\3\1\1\uffff"+
            "\1\1\12\uffff\3\1\3\uffff\2\1\3\uffff\1\1\1\uffff\2\1\1\uffff"+
            "\21\1\16\uffff\2\1\1\uffff\4\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\3\41\1\uffff\4\41\14\uffff\1\41\4\uffff\1\40\5\uffff\1\41"+
            "\25\uffff\1\41\22\uffff\3\41",
            "\1\77\1\104\1\56\1\41\1\100\1\101\1\102\1\103\14\uffff\1\55"+
            "\1\uffff\2\41\1\uffff\1\113\1\uffff\3\41\1\uffff\1\76\1\41\11"+
            "\uffff\3\41\3\uffff\2\41\3\uffff\1\74\1\uffff\2\41\1\uffff\16"+
            "\41\1\73\2\75\16\uffff\2\41\1\uffff\4\41",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            ""
    };

    static final short[] DFA90_eot = DFA.unpackEncodedString(DFA90_eotS);
    static final short[] DFA90_eof = DFA.unpackEncodedString(DFA90_eofS);
    static final char[] DFA90_min = DFA.unpackEncodedStringToUnsignedChars(DFA90_minS);
    static final char[] DFA90_max = DFA.unpackEncodedStringToUnsignedChars(DFA90_maxS);
    static final short[] DFA90_accept = DFA.unpackEncodedString(DFA90_acceptS);
    static final short[] DFA90_special = DFA.unpackEncodedString(DFA90_specialS);
    static final short[][] DFA90_transition;

    static {
        int numStates = DFA90_transitionS.length;
        DFA90_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA90_transition[i] = DFA.unpackEncodedString(DFA90_transitionS[i]);
        }
    }

    class DFA90 extends DFA {

        public DFA90(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 90;
            this.eot = DFA90_eot;
            this.eof = DFA90_eof;
            this.min = DFA90_min;
            this.max = DFA90_max;
            this.accept = DFA90_accept;
            this.special = DFA90_special;
            this.transition = DFA90_transition;
        }
        public String getDescription() {
            return "940:13: ( statement )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA90_45 = input.LA(1);

                         
                        int index90_45 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred172_ObjCpp()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index90_45);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA90_46 = input.LA(1);

                         
                        int index90_46 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred172_ObjCpp()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index90_46);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA90_59 = input.LA(1);

                         
                        int index90_59 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred172_ObjCpp()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index90_59);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA90_60 = input.LA(1);

                         
                        int index90_60 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred172_ObjCpp()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index90_60);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA90_61 = input.LA(1);

                         
                        int index90_61 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred172_ObjCpp()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index90_61);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA90_62 = input.LA(1);

                         
                        int index90_62 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred172_ObjCpp()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index90_62);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA90_63 = input.LA(1);

                         
                        int index90_63 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred172_ObjCpp()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index90_63);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA90_64 = input.LA(1);

                         
                        int index90_64 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred172_ObjCpp()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index90_64);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA90_65 = input.LA(1);

                         
                        int index90_65 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred172_ObjCpp()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index90_65);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA90_66 = input.LA(1);

                         
                        int index90_66 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred172_ObjCpp()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index90_66);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA90_67 = input.LA(1);

                         
                        int index90_67 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred172_ObjCpp()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index90_67);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA90_68 = input.LA(1);

                         
                        int index90_68 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred172_ObjCpp()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index90_68);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA90_75 = input.LA(1);

                         
                        int index90_75 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred172_ObjCpp()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index90_75);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 90, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA91_eotS =
        "\16\uffff";
    static final String DFA91_eofS =
        "\16\uffff";
    static final String DFA91_minS =
        "\1\4\15\uffff";
    static final String DFA91_maxS =
        "\1\116\15\uffff";
    static final String DFA91_acceptS =
        "\1\uffff\1\1\13\uffff\1\2";
    static final String DFA91_specialS =
        "\16\uffff}>";
    static final String[] DFA91_transitionS = {
            "\3\1\1\uffff\4\1\14\uffff\1\1\4\uffff\1\15\5\uffff\1\1\25\uffff"+
            "\1\1\22\uffff\3\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA91_eot = DFA.unpackEncodedString(DFA91_eotS);
    static final short[] DFA91_eof = DFA.unpackEncodedString(DFA91_eofS);
    static final char[] DFA91_min = DFA.unpackEncodedStringToUnsignedChars(DFA91_minS);
    static final char[] DFA91_max = DFA.unpackEncodedStringToUnsignedChars(DFA91_maxS);
    static final short[] DFA91_accept = DFA.unpackEncodedString(DFA91_acceptS);
    static final short[] DFA91_special = DFA.unpackEncodedString(DFA91_specialS);
    static final short[][] DFA91_transition;

    static {
        int numStates = DFA91_transitionS.length;
        DFA91_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA91_transition[i] = DFA.unpackEncodedString(DFA91_transitionS[i]);
        }
    }

    class DFA91 extends DFA {

        public DFA91(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 91;
            this.eot = DFA91_eot;
            this.eof = DFA91_eof;
            this.min = DFA91_min;
            this.max = DFA91_max;
            this.accept = DFA91_accept;
            this.special = DFA91_special;
            this.transition = DFA91_transition;
        }
        public String getDescription() {
            return "940:28: ( expression )?";
        }
    }
    static final String DFA92_eotS =
        "\41\uffff";
    static final String DFA92_eofS =
        "\41\uffff";
    static final String DFA92_minS =
        "\1\4\40\uffff";
    static final String DFA92_maxS =
        "\1\143\40\uffff";
    static final String DFA92_acceptS =
        "\1\uffff\1\1\36\uffff\1\2";
    static final String DFA92_specialS =
        "\41\uffff}>";
    static final String[] DFA92_transitionS = {
            "\10\1\14\uffff\1\1\1\uffff\2\1\1\uffff\1\1\1\uffff\3\1\1\uffff"+
            "\1\1\1\40\11\uffff\3\1\3\uffff\2\1\3\uffff\1\1\1\uffff\2\1\1"+
            "\uffff\21\1\16\uffff\2\1\1\uffff\4\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA92_eot = DFA.unpackEncodedString(DFA92_eotS);
    static final short[] DFA92_eof = DFA.unpackEncodedString(DFA92_eofS);
    static final char[] DFA92_min = DFA.unpackEncodedStringToUnsignedChars(DFA92_minS);
    static final char[] DFA92_max = DFA.unpackEncodedStringToUnsignedChars(DFA92_maxS);
    static final short[] DFA92_accept = DFA.unpackEncodedString(DFA92_acceptS);
    static final short[] DFA92_special = DFA.unpackEncodedString(DFA92_specialS);
    static final short[][] DFA92_transition;

    static {
        int numStates = DFA92_transitionS.length;
        DFA92_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA92_transition[i] = DFA.unpackEncodedString(DFA92_transitionS[i]);
        }
    }

    class DFA92 extends DFA {

        public DFA92(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 92;
            this.eot = DFA92_eot;
            this.eof = DFA92_eof;
            this.min = DFA92_min;
            this.max = DFA92_max;
            this.accept = DFA92_accept;
            this.special = DFA92_special;
            this.transition = DFA92_transition;
        }
        public String getDescription() {
            return "940:44: ( statement )?";
        }
    }
    static final String DFA93_eotS =
        "\42\uffff";
    static final String DFA93_eofS =
        "\42\uffff";
    static final String DFA93_minS =
        "\1\4\41\uffff";
    static final String DFA93_maxS =
        "\1\144\41\uffff";
    static final String DFA93_acceptS =
        "\1\uffff\1\3\1\1\1\2\36\uffff";
    static final String DFA93_specialS =
        "\42\uffff}>";
    static final String[] DFA93_transitionS = {
            "\10\3\14\uffff\1\3\1\1\2\3\1\uffff\1\3\1\uffff\3\3\1\uffff\1"+
            "\3\12\uffff\3\3\3\uffff\2\3\3\uffff\1\3\1\uffff\2\3\1\uffff"+
            "\21\3\16\uffff\2\3\1\uffff\4\3\1\2",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA93_eot = DFA.unpackEncodedString(DFA93_eotS);
    static final short[] DFA93_eof = DFA.unpackEncodedString(DFA93_eofS);
    static final char[] DFA93_min = DFA.unpackEncodedStringToUnsignedChars(DFA93_minS);
    static final char[] DFA93_max = DFA.unpackEncodedStringToUnsignedChars(DFA93_maxS);
    static final short[] DFA93_accept = DFA.unpackEncodedString(DFA93_acceptS);
    static final short[] DFA93_special = DFA.unpackEncodedString(DFA93_specialS);
    static final short[][] DFA93_transition;

    static {
        int numStates = DFA93_transitionS.length;
        DFA93_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA93_transition[i] = DFA.unpackEncodedString(DFA93_transitionS[i]);
        }
    }

    class DFA93 extends DFA {

        public DFA93(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 93;
            this.eot = DFA93_eot;
            this.eof = DFA93_eof;
            this.min = DFA93_min;
            this.max = DFA93_max;
            this.accept = DFA93_accept;
            this.special = DFA93_special;
            this.transition = DFA93_transition;
        }
        public String getDescription() {
            return "()* loopback of 942:3: ( 'case' expression ':' | statement )*";
        }
    }
    static final String DFA95_eotS =
        "\34\uffff";
    static final String DFA95_eofS =
        "\34\uffff";
    static final String DFA95_minS =
        "\1\4\3\uffff\1\0\27\uffff";
    static final String DFA95_maxS =
        "\1\13\3\uffff\1\0\27\uffff";
    static final String DFA95_acceptS =
        "\1\uffff\1\1\1\2\1\3\1\uffff\1\5\1\7\23\uffff\1\4\1\6";
    static final String DFA95_specialS =
        "\4\uffff\1\0\27\uffff}>";
    static final String[] DFA95_transitionS = {
            "\1\1\1\6\2\uffff\1\2\1\3\1\4\1\5",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA95_eot = DFA.unpackEncodedString(DFA95_eotS);
    static final short[] DFA95_eof = DFA.unpackEncodedString(DFA95_eofS);
    static final char[] DFA95_min = DFA.unpackEncodedStringToUnsignedChars(DFA95_minS);
    static final char[] DFA95_max = DFA.unpackEncodedStringToUnsignedChars(DFA95_maxS);
    static final short[] DFA95_accept = DFA.unpackEncodedString(DFA95_acceptS);
    static final short[] DFA95_special = DFA.unpackEncodedString(DFA95_specialS);
    static final short[][] DFA95_transition;

    static {
        int numStates = DFA95_transitionS.length;
        DFA95_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA95_transition[i] = DFA.unpackEncodedString(DFA95_transitionS[i]);
        }
    }

    class DFA95 extends DFA {

        public DFA95(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 95;
            this.eot = DFA95_eot;
            this.eof = DFA95_eof;
            this.min = DFA95_min;
            this.max = DFA95_max;
            this.accept = DFA95_accept;
            this.special = DFA95_special;
            this.transition = DFA95_transition;
        }
        public String getDescription() {
            return "950:1: constant returns [Constant constant] : ( DECIMAL_NUMBER | HEXADECIMAL_NUMBER | OCTAL_NUMBER | CHARACTER | FLOAT_NUMBER | CHARACTER | STRING );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA95_4 = input.LA(1);

                         
                        int index95_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred183_ObjCpp()) ) {s = 26;}

                        else if ( (synpred185_ObjCpp()) ) {s = 27;}

                         
                        input.seek(index95_4);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 95, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA114_eotS =
        "\16\uffff";
    static final String DFA114_eofS =
        "\16\uffff";
    static final String DFA114_minS =
        "\1\4\15\uffff";
    static final String DFA114_maxS =
        "\1\116\15\uffff";
    static final String DFA114_acceptS =
        "\1\uffff\1\1\13\uffff\1\2";
    static final String DFA114_specialS =
        "\16\uffff}>";
    static final String[] DFA114_transitionS = {
            "\3\1\1\uffff\4\1\14\uffff\1\1\12\uffff\1\1\25\uffff\1\1\1\15"+
            "\21\uffff\3\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA114_eot = DFA.unpackEncodedString(DFA114_eotS);
    static final short[] DFA114_eof = DFA.unpackEncodedString(DFA114_eofS);
    static final char[] DFA114_min = DFA.unpackEncodedStringToUnsignedChars(DFA114_minS);
    static final char[] DFA114_max = DFA.unpackEncodedStringToUnsignedChars(DFA114_maxS);
    static final short[] DFA114_accept = DFA.unpackEncodedString(DFA114_acceptS);
    static final short[] DFA114_special = DFA.unpackEncodedString(DFA114_specialS);
    static final short[][] DFA114_transition;

    static {
        int numStates = DFA114_transitionS.length;
        DFA114_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA114_transition[i] = DFA.unpackEncodedString(DFA114_transitionS[i]);
        }
    }

    class DFA114 extends DFA {

        public DFA114(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 114;
            this.eot = DFA114_eot;
            this.eof = DFA114_eof;
            this.min = DFA114_min;
            this.max = DFA114_max;
            this.accept = DFA114_accept;
            this.special = DFA114_special;
            this.transition = DFA114_transition;
        }
        public String getDescription() {
            return "637:8: ( expression )?";
        }
    }
 

    public static final BitSet FOLLOW_23_in_lineDirective62 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_DECIMAL_NUMBER_in_lineDirective66 = new BitSet(new long[]{0x0000000000000032L});
    public static final BitSet FOLLOW_STRING_in_lineDirective79 = new BitSet(new long[]{0x0000000000000012L});
    public static final BitSet FOLLOW_DECIMAL_NUMBER_in_lineDirective94 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_declaration_in_sourceFile123 = new BitSet(new long[]{0xD831C0038C8000C0L,0x0000000000000FFFL});
    public static final BitSet FOLLOW_lineDirective_in_sourceFile132 = new BitSet(new long[]{0xD831C0038C8000C0L,0x0000000000000FFFL});
    public static final BitSet FOLLOW_EOF_in_sourceFile142 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_externDeclarations161 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_externDeclarations168 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_24_in_externDeclarations173 = new BitSet(new long[]{0xD831C0038E0000C0L,0x0000000000000FFFL});
    public static final BitSet FOLLOW_declaration_in_externDeclarations187 = new BitSet(new long[]{0xD831C0038E0000C0L,0x0000000000000FFFL});
    public static final BitSet FOLLOW_25_in_externDeclarations200 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_externDeclarations_in_declaration228 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_exportationModifiers_in_declaration237 = new BitSet(new long[]{0xD831C0038C0000C0L,0x0000000000000FFFL});
    public static final BitSet FOLLOW_functionDeclaration_in_declaration255 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_varDecl_in_declaration265 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_objCClassDef_in_declaration275 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeDef_in_declaration285 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_forwardClassDecl_in_declaration295 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_enumDecl_in_declaration305 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_structDef_in_declaration315 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_26_in_declaration325 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_declaration329 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_24_in_declaration331 = new BitSet(new long[]{0xD831C0038E0000C0L,0x0000000000000FFFL});
    public static final BitSet FOLLOW_declaration_in_declaration349 = new BitSet(new long[]{0xD831C0038E0000C0L,0x0000000000000FFFL});
    public static final BitSet FOLLOW_25_in_declaration365 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_27_in_forwardClassDecl405 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_forwardClassDecl412 = new BitSet(new long[]{0x0000000030000000L});
    public static final BitSet FOLLOW_28_in_forwardClassDecl419 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_forwardClassDecl426 = new BitSet(new long[]{0x0000000030000000L});
    public static final BitSet FOLLOW_29_in_forwardClassDecl437 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeRef_in_functionPointerVarDecl455 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_functionPointerVarDecl463 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_enumItem481 = new BitSet(new long[]{0x0000000040000002L});
    public static final BitSet FOLLOW_30_in_enumItem484 = new BitSet(new long[]{0x0200000801000F70L,0x0000000000007000L});
    public static final BitSet FOLLOW_expression_in_enumItem488 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_31_in_enumCore512 = new BitSet(new long[]{0x0000000001000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_enumCore523 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_24_in_enumCore535 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_enumItem_in_enumCore542 = new BitSet(new long[]{0x0000000012000000L});
    public static final BitSet FOLLOW_28_in_enumCore555 = new BitSet(new long[]{0x0000000012000040L});
    public static final BitSet FOLLOW_enumItem_in_enumCore565 = new BitSet(new long[]{0x0000000012000000L});
    public static final BitSet FOLLOW_25_in_enumCore579 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_31_in_enumDecl600 = new BitSet(new long[]{0x0000000001000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_enumDecl611 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_24_in_enumDecl623 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_enumItem_in_enumDecl630 = new BitSet(new long[]{0x0000000012000000L});
    public static final BitSet FOLLOW_28_in_enumDecl643 = new BitSet(new long[]{0x0000000012000040L});
    public static final BitSet FOLLOW_enumItem_in_enumDecl653 = new BitSet(new long[]{0x0000000012000000L});
    public static final BitSet FOLLOW_25_in_enumDecl667 = new BitSet(new long[]{0x0000000020000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_enumDecl678 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_enumDecl689 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_set_in_objCClassDef714 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_objCClassDef725 = new BitSet(new long[]{0x08001C2C81000000L});
    public static final BitSet FOLLOW_34_in_objCClassDef743 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_objCClassDef747 = new BitSet(new long[]{0x08001C2081000000L});
    public static final BitSet FOLLOW_35_in_objCClassDef762 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_objCClassDef766 = new BitSet(new long[]{0x0000001000000000L});
    public static final BitSet FOLLOW_36_in_objCClassDef768 = new BitSet(new long[]{0x08001C2081000000L});
    public static final BitSet FOLLOW_37_in_objCClassDef784 = new BitSet(new long[]{0x0000004000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_objCClassDef794 = new BitSet(new long[]{0x0000004010000000L});
    public static final BitSet FOLLOW_28_in_objCClassDef809 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_objCClassDef819 = new BitSet(new long[]{0x0000004010000000L});
    public static final BitSet FOLLOW_38_in_objCClassDef836 = new BitSet(new long[]{0x08001C0081000000L});
    public static final BitSet FOLLOW_24_in_objCClassDef850 = new BitSet(new long[]{0xD031C380820000C0L,0x0000000000000FFFL});
    public static final BitSet FOLLOW_39_in_objCClassDef862 = new BitSet(new long[]{0xD031C380820000C0L,0x0000000000000FFFL});
    public static final BitSet FOLLOW_40_in_objCClassDef873 = new BitSet(new long[]{0xD031C380820000C0L,0x0000000000000FFFL});
    public static final BitSet FOLLOW_41_in_objCClassDef884 = new BitSet(new long[]{0xD031C380820000C0L,0x0000000000000FFFL});
    public static final BitSet FOLLOW_varDecl_in_objCClassDef909 = new BitSet(new long[]{0xD031C380820000C0L,0x0000000000000FFFL});
    public static final BitSet FOLLOW_functionPointerVarDecl_in_objCClassDef921 = new BitSet(new long[]{0xD031C380820000C0L,0x0000000000000FFFL});
    public static final BitSet FOLLOW_25_in_objCClassDef948 = new BitSet(new long[]{0x08001C0080000000L});
    public static final BitSet FOLLOW_objCMethodDecl_in_objCClassDef966 = new BitSet(new long[]{0x08001C0080000000L});
    public static final BitSet FOLLOW_typeDef_in_objCClassDef975 = new BitSet(new long[]{0x08001C0080000000L});
    public static final BitSet FOLLOW_enumDecl_in_objCClassDef984 = new BitSet(new long[]{0x08001C0080000000L});
    public static final BitSet FOLLOW_42_in_objCClassDef995 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_43_in_objCMethodDecl1029 = new BitSet(new long[]{0x0000000800000040L});
    public static final BitSet FOLLOW_44_in_objCMethodDecl1041 = new BitSet(new long[]{0x0000000800000040L});
    public static final BitSet FOLLOW_35_in_objCMethodDecl1060 = new BitSet(new long[]{0xD031C010800000C0L,0x0000000000000FFFL});
    public static final BitSet FOLLOW_typeRef_in_objCMethodDecl1068 = new BitSet(new long[]{0x0000001000000000L});
    public static final BitSet FOLLOW_36_in_objCMethodDecl1076 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_objCMethodDecl1087 = new BitSet(new long[]{0x0000000420000000L});
    public static final BitSet FOLLOW_34_in_objCMethodDecl1099 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_35_in_objCMethodDecl1101 = new BitSet(new long[]{0xD031C000800000C0L,0x0000000000000FFFL});
    public static final BitSet FOLLOW_typeRef_in_objCMethodDecl1105 = new BitSet(new long[]{0x0000001000000000L});
    public static final BitSet FOLLOW_36_in_objCMethodDecl1107 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_objCMethodDecl1111 = new BitSet(new long[]{0x0000000030000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_objCMethodDecl1126 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_34_in_objCMethodDecl1128 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_35_in_objCMethodDecl1135 = new BitSet(new long[]{0xD031C000800000C0L,0x0000000000000FFFL});
    public static final BitSet FOLLOW_typeRef_in_objCMethodDecl1139 = new BitSet(new long[]{0x0000001000000000L});
    public static final BitSet FOLLOW_36_in_objCMethodDecl1141 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_objCMethodDecl1150 = new BitSet(new long[]{0x0000000030000040L});
    public static final BitSet FOLLOW_28_in_objCMethodDecl1169 = new BitSet(new long[]{0x0000200000000000L});
    public static final BitSet FOLLOW_45_in_objCMethodDecl1171 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_objCMethodDecl1188 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_structCore_in_structDef1206 = new BitSet(new long[]{0x03F0000070000040L});
    public static final BitSet FOLLOW_varStoragesWithInit_in_structDef1217 = new BitSet(new long[]{0x03F0000070000040L});
    public static final BitSet FOLLOW_29_in_structDef1228 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_set_in_structCore1249 = new BitSet(new long[]{0x0000000001000040L});
    public static final BitSet FOLLOW_exportationModifiers_in_structCore1273 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_structCore1285 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_24_in_structCore1297 = new BitSet(new long[]{0xD83FC0038E0000C0L,0x0000000000000FFFL});
    public static final BitSet FOLLOW_49_in_structCore1315 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_50_in_structCore1327 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_51_in_structCore1339 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_34_in_structCore1350 = new BitSet(new long[]{0xD83FC0038E0000C0L,0x0000000000000FFFL});
    public static final BitSet FOLLOW_declaration_in_structCore1358 = new BitSet(new long[]{0xD83FC0038E0000C0L,0x0000000000000FFFL});
    public static final BitSet FOLLOW_25_in_structCore1370 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeRef_in_functionDeclaration1395 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_exportationModifiers_in_functionDeclaration1404 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_functionDeclaration1410 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_35_in_functionDeclaration1417 = new BitSet(new long[]{0xD031E010800000C0L,0x0000000000000FFFL});
    public static final BitSet FOLLOW_argDef_in_functionDeclaration1438 = new BitSet(new long[]{0x0000001010000000L});
    public static final BitSet FOLLOW_28_in_functionDeclaration1455 = new BitSet(new long[]{0xD031E000800000C0L,0x0000000000000FFFL});
    public static final BitSet FOLLOW_argDef_in_functionDeclaration1466 = new BitSet(new long[]{0x0000001010000000L});
    public static final BitSet FOLLOW_36_in_functionDeclaration1494 = new BitSet(new long[]{0x0030000021000040L});
    public static final BitSet FOLLOW_set_in_functionDeclaration1501 = new BitSet(new long[]{0x0030000021000040L});
    public static final BitSet FOLLOW_exportationModifiers_in_functionDeclaration1517 = new BitSet(new long[]{0x0030000021000040L});
    public static final BitSet FOLLOW_29_in_functionDeclaration1529 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_statementsBlock_in_functionDeclaration1536 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_functionDeclaration_in_functionDefinition1553 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_24_in_functionDefinition1555 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_25_in_functionDefinition1557 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_exportationModifier_in_exportationModifiers1584 = new BitSet(new long[]{0x0000000000000042L});
    public static final BitSet FOLLOW_IDENTIFIER_in_exportationModifier1613 = new BitSet(new long[]{0x0000000800000002L});
    public static final BitSet FOLLOW_35_in_exportationModifier1635 = new BitSet(new long[]{0x0000001000000040L});
    public static final BitSet FOLLOW_extendedDeclModifiers_in_exportationModifier1637 = new BitSet(new long[]{0x0000001000000000L});
    public static final BitSet FOLLOW_36_in_exportationModifier1639 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_extendedDeclModifiers1672 = new BitSet(new long[]{0x0000000000000042L});
    public static final BitSet FOLLOW_typeRef_in_argDef1711 = new BitSet(new long[]{0x0000000040000042L});
    public static final BitSet FOLLOW_IDENTIFIER_in_argDef1714 = new BitSet(new long[]{0x0200000040000002L});
    public static final BitSet FOLLOW_arrayTypeMutator_in_argDef1716 = new BitSet(new long[]{0x0000000040000002L});
    public static final BitSet FOLLOW_30_in_argDef1727 = new BitSet(new long[]{0x0200000801000F70L,0x0000000000007000L});
    public static final BitSet FOLLOW_expression_in_argDef1729 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_45_in_argDef1743 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_set_in_varStorage1769 = new BitSet(new long[]{0x03F0000000000042L});
    public static final BitSet FOLLOW_54_in_varStorage1785 = new BitSet(new long[]{0x03F0000000000042L});
    public static final BitSet FOLLOW_55_in_varStorage1795 = new BitSet(new long[]{0x03F0000000000042L});
    public static final BitSet FOLLOW_56_in_varStorage1805 = new BitSet(new long[]{0x03F0000000000042L});
    public static final BitSet FOLLOW_IDENTIFIER_in_varStorage1817 = new BitSet(new long[]{0x0200000000000002L});
    public static final BitSet FOLLOW_57_in_varStorage1830 = new BitSet(new long[]{0x0600000801000F70L,0x0000000000007000L});
    public static final BitSet FOLLOW_expression_in_varStorage1832 = new BitSet(new long[]{0x0400000000000000L});
    public static final BitSet FOLLOW_58_in_varStorage1835 = new BitSet(new long[]{0x0200000000000002L});
    public static final BitSet FOLLOW_plainTypeRef_in_varDecl1862 = new BitSet(new long[]{0x03F0000050000040L});
    public static final BitSet FOLLOW_varStoragesWithInit_in_varDecl1868 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_varDecl1874 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_varStorage_in_varStoragesWithInit1895 = new BitSet(new long[]{0x0000000050000002L});
    public static final BitSet FOLLOW_30_in_varStoragesWithInit1898 = new BitSet(new long[]{0x0200000801000F70L,0x0000000000007000L});
    public static final BitSet FOLLOW_expression_in_varStoragesWithInit1902 = new BitSet(new long[]{0x0000000010000002L});
    public static final BitSet FOLLOW_28_in_varStoragesWithInit1917 = new BitSet(new long[]{0x03F0000050000040L});
    public static final BitSet FOLLOW_varStorage_in_varStoragesWithInit1921 = new BitSet(new long[]{0x0000000050000002L});
    public static final BitSet FOLLOW_30_in_varStoragesWithInit1924 = new BitSet(new long[]{0x0200000801000F70L,0x0000000000007000L});
    public static final BitSet FOLLOW_expression_in_varStoragesWithInit1928 = new BitSet(new long[]{0x0000000010000002L});
    public static final BitSet FOLLOW_59_in_typeDef1960 = new BitSet(new long[]{0xD031C000800000C0L,0x0000000000000FFFL});
    public static final BitSet FOLLOW_plainTypeRef_in_typeDef1965 = new BitSet(new long[]{0x03F0000030000040L});
    public static final BitSet FOLLOW_varStorage_in_typeDef1973 = new BitSet(new long[]{0x0000000030000000L});
    public static final BitSet FOLLOW_28_in_typeDef1980 = new BitSet(new long[]{0x03F0000030000040L});
    public static final BitSet FOLLOW_varStorage_in_typeDef1984 = new BitSet(new long[]{0x0000000030000000L});
    public static final BitSet FOLLOW_29_in_typeDef1992 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_set_in_typeMutator2008 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_54_in_typeMutator2016 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_54_in_typeMutator2024 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_55_in_typeMutator2032 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_57_in_typeMutator2041 = new BitSet(new long[]{0x0400000000000000L});
    public static final BitSet FOLLOW_58_in_typeMutator2043 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_57_in_arrayTypeMutator2061 = new BitSet(new long[]{0x0200000801000F70L,0x0000000000007000L});
    public static final BitSet FOLLOW_expression_in_arrayTypeMutator2067 = new BitSet(new long[]{0x0400000000000000L});
    public static final BitSet FOLLOW_58_in_arrayTypeMutator2076 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_set_in_typeRefCore2095 = new BitSet(new long[]{0xD000C000000000C0L,0x0000000000000FFFL});
    public static final BitSet FOLLOW_set_in_typeRefCore2113 = new BitSet(new long[]{0xD031C000800000C0L,0x0000000000000FFFL});
    public static final BitSet FOLLOW_typeRef_in_typeRefCore2127 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_primitiveTypeRef_in_typeRefCore2144 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_typeRefCore2155 = new BitSet(new long[]{0x0000002000000002L});
    public static final BitSet FOLLOW_37_in_typeRefCore2173 = new BitSet(new long[]{0xD031C040800000C0L,0x0000000000000FFFL});
    public static final BitSet FOLLOW_typeRef_in_typeRefCore2194 = new BitSet(new long[]{0x0000004010000000L});
    public static final BitSet FOLLOW_28_in_typeRefCore2215 = new BitSet(new long[]{0xD031C000800000C0L,0x0000000000000FFFL});
    public static final BitSet FOLLOW_typeRef_in_typeRefCore2228 = new BitSet(new long[]{0x0000004010000000L});
    public static final BitSet FOLLOW_38_in_typeRefCore2256 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_61_in_templateDef2288 = new BitSet(new long[]{0x0000002000000000L});
    public static final BitSet FOLLOW_37_in_templateDef2290 = new BitSet(new long[]{0xD000804000000080L,0x0000000000000FFFL});
    public static final BitSet FOLLOW_templateArgDecl_in_templateDef2293 = new BitSet(new long[]{0x0000004010000000L});
    public static final BitSet FOLLOW_28_in_templateDef2296 = new BitSet(new long[]{0xD000800000000080L,0x0000000000000FFFL});
    public static final BitSet FOLLOW_templateArgDecl_in_templateDef2298 = new BitSet(new long[]{0x0000004010000000L});
    public static final BitSet FOLLOW_38_in_templateDef2305 = new BitSet(new long[]{0x0001C00000000000L});
    public static final BitSet FOLLOW_structDef_in_templateDef2309 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_functionDefinition_in_templateDef2313 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_primitiveTypeRef_in_templateArgDecl2325 = new BitSet(new long[]{0x0000000040000000L});
    public static final BitSet FOLLOW_30_in_templateArgDecl2328 = new BitSet(new long[]{0x0000000000000F30L});
    public static final BitSet FOLLOW_constant_in_templateArgDecl2330 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_set_in_templateArgDecl2337 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_templateArgDecl2345 = new BitSet(new long[]{0x0000000040000000L});
    public static final BitSet FOLLOW_30_in_templateArgDecl2348 = new BitSet(new long[]{0xD031C000800000C0L,0x0000000000000FFFL});
    public static final BitSet FOLLOW_typeRef_in_templateArgDecl2350 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_35_in_functionSignatureSuffix2369 = new BitSet(new long[]{0x0040000000000040L});
    public static final BitSet FOLLOW_exportationModifiers_in_functionSignatureSuffix2371 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_54_in_functionSignatureSuffix2373 = new BitSet(new long[]{0x0000001000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_functionSignatureSuffix2375 = new BitSet(new long[]{0x0000001000000000L});
    public static final BitSet FOLLOW_36_in_functionSignatureSuffix2378 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_35_in_functionSignatureSuffix2384 = new BitSet(new long[]{0xD031E010800000C0L,0x0000000000000FFFL});
    public static final BitSet FOLLOW_argDef_in_functionSignatureSuffix2393 = new BitSet(new long[]{0x0000001010000000L});
    public static final BitSet FOLLOW_28_in_functionSignatureSuffix2406 = new BitSet(new long[]{0xD031E000800000C0L,0x0000000000000FFFL});
    public static final BitSet FOLLOW_argDef_in_functionSignatureSuffix2415 = new BitSet(new long[]{0x0000001010000000L});
    public static final BitSet FOLLOW_36_in_functionSignatureSuffix2430 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_structCore_in_plainTypeRef2448 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_enumCore_in_plainTypeRef2456 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeRefCore_in_plainTypeRef2464 = new BitSet(new long[]{0x0000000800000002L});
    public static final BitSet FOLLOW_functionSignatureSuffix_in_plainTypeRef2475 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_plainTypeRef_in_typeRef2501 = new BitSet(new long[]{0x02F0000000000002L});
    public static final BitSet FOLLOW_typeMutator_in_typeRef2512 = new BitSet(new long[]{0x02F0000000000002L});
    public static final BitSet FOLLOW_set_in_primSignModifier0 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_set_in_primSizeModifier0 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_set_in_primitiveTypeName0 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_primSignModifier_in_primitiveTypeRef2656 = new BitSet(new long[]{0xC000000000000080L,0x0000000000000FFFL});
    public static final BitSet FOLLOW_primSizeModifier_in_primitiveTypeRef2669 = new BitSet(new long[]{0xC000000000000080L,0x0000000000000FFFL});
    public static final BitSet FOLLOW_primSizeModifier_in_primitiveTypeRef2676 = new BitSet(new long[]{0xC000000000000080L,0x0000000000000FFFL});
    public static final BitSet FOLLOW_primitiveTypeName_in_primitiveTypeRef2686 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_primSignModifier_in_primitiveTypeRef2700 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_57_in_objCMethodCall2723 = new BitSet(new long[]{0x0200000801000F70L,0x0000000000007000L});
    public static final BitSet FOLLOW_expression_in_objCMethodCall2727 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_objCMethodCall2731 = new BitSet(new long[]{0x0400000400000000L});
    public static final BitSet FOLLOW_34_in_objCMethodCall2742 = new BitSet(new long[]{0x0200000801000F70L,0x0000000000007000L});
    public static final BitSet FOLLOW_expression_in_objCMethodCall2746 = new BitSet(new long[]{0x0400000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_objCMethodCall2761 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_34_in_objCMethodCall2763 = new BitSet(new long[]{0x0200000801000F70L,0x0000000000007000L});
    public static final BitSet FOLLOW_expression_in_objCMethodCall2767 = new BitSet(new long[]{0x0400000000000040L});
    public static final BitSet FOLLOW_58_in_objCMethodCall2784 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_76_in_functionCall2804 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_35_in_functionCall2806 = new BitSet(new long[]{0xD031C000800000C0L,0x0000000000000FFFL});
    public static final BitSet FOLLOW_typeRef_in_functionCall2808 = new BitSet(new long[]{0x0000001000000000L});
    public static final BitSet FOLLOW_36_in_functionCall2810 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_functionCall2818 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_35_in_functionCall2820 = new BitSet(new long[]{0x0200001801000F70L,0x0000000000007000L});
    public static final BitSet FOLLOW_expression_in_functionCall2833 = new BitSet(new long[]{0x0000001010000000L});
    public static final BitSet FOLLOW_28_in_functionCall2842 = new BitSet(new long[]{0x0200000801000F70L,0x0000000000007000L});
    public static final BitSet FOLLOW_expression_in_functionCall2851 = new BitSet(new long[]{0x0000001010000000L});
    public static final BitSet FOLLOW_36_in_functionCall2869 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_expression2891 = new BitSet(new long[]{0x01C0186440000002L,0x000000001FFF8000L});
    public static final BitSet FOLLOW_functionCall_in_expression2902 = new BitSet(new long[]{0x01C0186440000002L,0x000000001FFF8000L});
    public static final BitSet FOLLOW_objCMethodCall_in_expression2911 = new BitSet(new long[]{0x01C0186440000002L,0x000000001FFF8000L});
    public static final BitSet FOLLOW_set_in_expression2922 = new BitSet(new long[]{0x0200000801000F70L,0x0000000000007000L});
    public static final BitSet FOLLOW_expression_in_expression2932 = new BitSet(new long[]{0x01C0186440000002L,0x000000001FFF8000L});
    public static final BitSet FOLLOW_35_in_expression2941 = new BitSet(new long[]{0xD231C00881000FF0L,0x0000000000007FFFL});
    public static final BitSet FOLLOW_expression_in_expression2951 = new BitSet(new long[]{0x0000001000000000L});
    public static final BitSet FOLLOW_36_in_expression2953 = new BitSet(new long[]{0x01C0186440000002L,0x000000001FFF8000L});
    public static final BitSet FOLLOW_typeRef_in_expression2963 = new BitSet(new long[]{0x0000001000000000L});
    public static final BitSet FOLLOW_36_in_expression2965 = new BitSet(new long[]{0x0200000801000F70L,0x0000000000007000L});
    public static final BitSet FOLLOW_expression_in_expression2969 = new BitSet(new long[]{0x01C0186440000002L,0x000000001FFF8000L});
    public static final BitSet FOLLOW_constant_in_expression2984 = new BitSet(new long[]{0x01C0186440000002L,0x000000001FFF8000L});
    public static final BitSet FOLLOW_24_in_expression2993 = new BitSet(new long[]{0x0200000801000F70L,0x0000000000007000L});
    public static final BitSet FOLLOW_expression_in_expression2995 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_25_in_expression2997 = new BitSet(new long[]{0x01C0186440000002L,0x000000001FFF8000L});
    public static final BitSet FOLLOW_set_in_expression3013 = new BitSet(new long[]{0x0200000801000F70L,0x0000000000007000L});
    public static final BitSet FOLLOW_expression_in_expression3107 = new BitSet(new long[]{0x01C0186440000002L,0x000000001FFF8000L});
    public static final BitSet FOLLOW_30_in_expression3116 = new BitSet(new long[]{0x0200000801000F70L,0x0000000000007000L});
    public static final BitSet FOLLOW_expression_in_expression3120 = new BitSet(new long[]{0x01C0186440000002L,0x000000001FFF8000L});
    public static final BitSet FOLLOW_91_in_expression3129 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_expression3133 = new BitSet(new long[]{0x01C0186440000002L,0x000000001FFF8000L});
    public static final BitSet FOLLOW_34_in_expression3145 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_34_in_expression3147 = new BitSet(new long[]{0x0000000000000040L,0x0000000000001000L});
    public static final BitSet FOLLOW_44_in_expression3151 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38_in_expression3153 = new BitSet(new long[]{0x0000000000000040L,0x0000000000001000L});
    public static final BitSet FOLLOW_91_in_expression3157 = new BitSet(new long[]{0x0000000000000040L,0x0000000000001000L});
    public static final BitSet FOLLOW_functionCall_in_expression3162 = new BitSet(new long[]{0x01C0186440000002L,0x000000001FFF8000L});
    public static final BitSet FOLLOW_92_in_expression3171 = new BitSet(new long[]{0x0200000801000F70L,0x0000000000007000L});
    public static final BitSet FOLLOW_expression_in_expression3175 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_34_in_expression3177 = new BitSet(new long[]{0x0200000801000F70L,0x0000000000007000L});
    public static final BitSet FOLLOW_expression_in_expression3181 = new BitSet(new long[]{0x01C0186440000002L,0x000000001FFF8000L});
    public static final BitSet FOLLOW_24_in_statementsBlock3202 = new BitSet(new long[]{0xDA31C00BAF000FF0L,0x0000000F60007FFFL});
    public static final BitSet FOLLOW_statement_in_statementsBlock3204 = new BitSet(new long[]{0xDA31C00BAF000FF0L,0x0000000F60007FFFL});
    public static final BitSet FOLLOW_25_in_statementsBlock3207 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_statementsBlock_in_statement3220 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_declaration_in_statement3226 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_statement3232 = new BitSet(new long[]{0x0000000060000000L});
    public static final BitSet FOLLOW_30_in_statement3235 = new BitSet(new long[]{0x0200000801000F70L,0x0000000000007000L});
    public static final BitSet FOLLOW_expression_in_statement3237 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_statement3242 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_93_in_statement3248 = new BitSet(new long[]{0x0200000801000F70L,0x0000000000007000L});
    public static final BitSet FOLLOW_expression_in_statement3250 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_statement3252 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_94_in_statement3258 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_35_in_statement3260 = new BitSet(new long[]{0x0200000801000F70L,0x0000000000007000L});
    public static final BitSet FOLLOW_expression_in_statement3262 = new BitSet(new long[]{0x0000001000000000L});
    public static final BitSet FOLLOW_36_in_statement3264 = new BitSet(new long[]{0xDA31C00BAD000FF0L,0x0000000F60007FFFL});
    public static final BitSet FOLLOW_statement_in_statement3266 = new BitSet(new long[]{0x0000000000000002L,0x0000000080000000L});
    public static final BitSet FOLLOW_95_in_statement3269 = new BitSet(new long[]{0xDA31C00BAD000FF0L,0x0000000F60007FFFL});
    public static final BitSet FOLLOW_statement_in_statement3271 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_96_in_statement3279 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_35_in_statement3281 = new BitSet(new long[]{0x0200000801000F70L,0x0000000000007000L});
    public static final BitSet FOLLOW_expression_in_statement3283 = new BitSet(new long[]{0x0000001000000000L});
    public static final BitSet FOLLOW_36_in_statement3285 = new BitSet(new long[]{0xDA31C00BAD000FF0L,0x0000000F60007FFFL});
    public static final BitSet FOLLOW_statement_in_statement3287 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_97_in_statement3293 = new BitSet(new long[]{0xDA31C00BAD000FF0L,0x0000000F60007FFFL});
    public static final BitSet FOLLOW_statement_in_statement3295 = new BitSet(new long[]{0x0000000000000000L,0x0000000100000000L});
    public static final BitSet FOLLOW_96_in_statement3297 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_35_in_statement3299 = new BitSet(new long[]{0x0200000801000F70L,0x0000000000007000L});
    public static final BitSet FOLLOW_expression_in_statement3301 = new BitSet(new long[]{0x0000001000000000L});
    public static final BitSet FOLLOW_36_in_statement3303 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_statement3305 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_98_in_statement3311 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_35_in_statement3313 = new BitSet(new long[]{0xDA31C00BAD000FF0L,0x0000000F60007FFFL});
    public static final BitSet FOLLOW_statement_in_statement3315 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_statement3318 = new BitSet(new long[]{0x0200000821000F70L,0x0000000000007000L});
    public static final BitSet FOLLOW_expression_in_statement3320 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_statement3323 = new BitSet(new long[]{0xDA31C01BAD000FF0L,0x0000000F60007FFFL});
    public static final BitSet FOLLOW_statement_in_statement3325 = new BitSet(new long[]{0x0000001000000000L});
    public static final BitSet FOLLOW_36_in_statement3328 = new BitSet(new long[]{0xDA31C00BAD000FF0L,0x0000000F60007FFFL});
    public static final BitSet FOLLOW_statement_in_statement3330 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_99_in_statement3336 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_35_in_statement3338 = new BitSet(new long[]{0x0200000801000F70L,0x0000000000007000L});
    public static final BitSet FOLLOW_expression_in_statement3340 = new BitSet(new long[]{0x0000001000000000L});
    public static final BitSet FOLLOW_36_in_statement3342 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_24_in_statement3344 = new BitSet(new long[]{0xDA31C00BAF000FF0L,0x0000001F60007FFFL});
    public static final BitSet FOLLOW_100_in_statement3350 = new BitSet(new long[]{0x0200000801000F70L,0x0000000000007000L});
    public static final BitSet FOLLOW_expression_in_statement3352 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_34_in_statement3354 = new BitSet(new long[]{0xDA31C00BAF000FF0L,0x0000001F60007FFFL});
    public static final BitSet FOLLOW_statement_in_statement3361 = new BitSet(new long[]{0xDA31C00BAF000FF0L,0x0000001F60007FFFL});
    public static final BitSet FOLLOW_25_in_statement3370 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_29_in_statement3376 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_statement3382 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_35_in_statement3386 = new BitSet(new long[]{0xD031C000800000C0L,0x0000000000000FFFL});
    public static final BitSet FOLLOW_varDecl_in_statement3388 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_34_in_statement3390 = new BitSet(new long[]{0x0200000801000F70L,0x0000000000007000L});
    public static final BitSet FOLLOW_expression_in_statement3392 = new BitSet(new long[]{0x0000001000000000L});
    public static final BitSet FOLLOW_36_in_statement3394 = new BitSet(new long[]{0xDA31C00BAD000FF0L,0x0000000F60007FFFL});
    public static final BitSet FOLLOW_statement_in_statement3396 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DECIMAL_NUMBER_in_constant3412 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_HEXADECIMAL_NUMBER_in_constant3420 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OCTAL_NUMBER_in_constant3428 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARACTER_in_constant3436 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_FLOAT_NUMBER_in_constant3444 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARACTER_in_constant3452 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_STRING_in_constant3460 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_functionDeclaration_in_synpred7_ObjCpp255 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_varDecl_in_synpred8_ObjCpp265 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_enumDecl_in_synpred12_ObjCpp305 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_structDef_in_synpred13_ObjCpp315 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_varDecl_in_synpred33_ObjCpp909 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_varStoragesWithInit_in_synpred45_ObjCpp1217 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_exportationModifiers_in_synpred48_ObjCpp1273 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeRef_in_synpred54_ObjCpp1395 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_exportationModifier_in_synpred61_ObjCpp1584 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_set_in_synpred69_ObjCpp1769 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_54_in_synpred70_ObjCpp1785 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_55_in_synpred71_ObjCpp1795 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_56_in_synpred72_ObjCpp1805 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_synpred73_ObjCpp1817 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_57_in_synpred75_ObjCpp1830 = new BitSet(new long[]{0x0600000801000F70L,0x0000000000007000L});
    public static final BitSet FOLLOW_expression_in_synpred75_ObjCpp1832 = new BitSet(new long[]{0x0400000000000000L});
    public static final BitSet FOLLOW_58_in_synpred75_ObjCpp1835 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_30_in_synpred76_ObjCpp1898 = new BitSet(new long[]{0x0200000801000F70L,0x0000000000007000L});
    public static final BitSet FOLLOW_expression_in_synpred76_ObjCpp1902 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_30_in_synpred77_ObjCpp1924 = new BitSet(new long[]{0x0200000801000F70L,0x0000000000007000L});
    public static final BitSet FOLLOW_expression_in_synpred77_ObjCpp1928 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_28_in_synpred78_ObjCpp1917 = new BitSet(new long[]{0x03F0000040000040L});
    public static final BitSet FOLLOW_varStorage_in_synpred78_ObjCpp1921 = new BitSet(new long[]{0x0000000040000002L});
    public static final BitSet FOLLOW_30_in_synpred78_ObjCpp1924 = new BitSet(new long[]{0x0200000801000F70L,0x0000000000007000L});
    public static final BitSet FOLLOW_expression_in_synpred78_ObjCpp1928 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_structCore_in_synpred102_ObjCpp2448 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_functionSignatureSuffix_in_synpred104_ObjCpp2475 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeMutator_in_synpred105_ObjCpp2512 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_synpred134_ObjCpp2951 = new BitSet(new long[]{0x0000001000000000L});
    public static final BitSet FOLLOW_36_in_synpred134_ObjCpp2953 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_set_in_synpred155_ObjCpp3013 = new BitSet(new long[]{0x0200000801000F70L,0x0000000000007000L});
    public static final BitSet FOLLOW_expression_in_synpred155_ObjCpp3107 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_30_in_synpred156_ObjCpp3116 = new BitSet(new long[]{0x0200000801000F70L,0x0000000000007000L});
    public static final BitSet FOLLOW_expression_in_synpred156_ObjCpp3120 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_91_in_synpred157_ObjCpp3129 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_synpred157_ObjCpp3133 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_34_in_synpred160_ObjCpp3145 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_34_in_synpred160_ObjCpp3147 = new BitSet(new long[]{0x0000000000000040L,0x0000000000001000L});
    public static final BitSet FOLLOW_44_in_synpred160_ObjCpp3151 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38_in_synpred160_ObjCpp3153 = new BitSet(new long[]{0x0000000000000040L,0x0000000000001000L});
    public static final BitSet FOLLOW_91_in_synpred160_ObjCpp3157 = new BitSet(new long[]{0x0000000000000040L,0x0000000000001000L});
    public static final BitSet FOLLOW_functionCall_in_synpred160_ObjCpp3162 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_92_in_synpred161_ObjCpp3171 = new BitSet(new long[]{0x0200000801000F70L,0x0000000000007000L});
    public static final BitSet FOLLOW_expression_in_synpred161_ObjCpp3175 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_34_in_synpred161_ObjCpp3177 = new BitSet(new long[]{0x0200000801000F70L,0x0000000000007000L});
    public static final BitSet FOLLOW_expression_in_synpred161_ObjCpp3181 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_statementsBlock_in_synpred163_ObjCpp3220 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_declaration_in_synpred164_ObjCpp3226 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_synpred166_ObjCpp3232 = new BitSet(new long[]{0x0000000060000000L});
    public static final BitSet FOLLOW_30_in_synpred166_ObjCpp3235 = new BitSet(new long[]{0x0200000801000F70L,0x0000000000007000L});
    public static final BitSet FOLLOW_expression_in_synpred166_ObjCpp3237 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_synpred166_ObjCpp3242 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_95_in_synpred168_ObjCpp3269 = new BitSet(new long[]{0xDA31C00BAD000FF0L,0x0000000F60007FFFL});
    public static final BitSet FOLLOW_statement_in_synpred168_ObjCpp3271 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_statement_in_synpred172_ObjCpp3315 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARACTER_in_synpred183_ObjCpp3436 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARACTER_in_synpred185_ObjCpp3452 = new BitSet(new long[]{0x0000000000000002L});

}