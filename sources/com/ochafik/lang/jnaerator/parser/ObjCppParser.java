// $ANTLR 3.1.2 /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g 2009-04-10 09:50:49
 
/*
	Copyright (c) 2009 Olivier Chafik, All Rights Reserved
	
	This file is part of JNAerator (http://jnaerator.googlecode.com/).
	
	JNAerator is free software: you can redistribute it and/or modify
	it under the terms of the GNU Lesser General Public License as published by
	the Free Software Foundation, either version 3 of the License, or
	(at your option) any later version.
	
	JNAerator is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU Lesser General Public License for more details.
	
	You should have received a copy of the GNU Lesser General Public License
	along with JNAerator.  If not, see <http://www.gnu.org/licenses/>.
*/

package com.ochafik.lang.jnaerator.parser;
import java.util.Arrays;
import java.util.EnumSet;
import static com.ochafik.lang.jnaerator.parser.TypeRef.*;
import static com.ochafik.lang.jnaerator.parser.Expression.*;
import static com.ochafik.lang.jnaerator.parser.Declaration.*;
import static com.ochafik.lang.jnaerator.parser.Statement.*;
import static com.ochafik.lang.jnaerator.parser.Declarator.*;
import static com.ochafik.lang.jnaerator.parser.StoredDeclarations.*;


import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.tree.*;

/**
	This grammar is by no mean complete.
	It is able to parse preprocessed C & Objective-C files and can tolerate some amount of C++. 
	It lacks serious expression support, which is being worked on.
	Complex variable declarations may not be supported, such as complex signatures of functions that return function pointers...
*/
public class ObjCppParser extends Parser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "DECIMAL_NUMBER", "STRING", "IDENTIFIER", "HEXADECIMAL_NUMBER", "OCTAL_NUMBER", "CHARACTER", "FLOAT_NUMBER", "Letter", "FloatingPointExponentSuffix", "FloatingPointConstantSuffix", "OctalEscape", "CharEscape", "HexDigit", "UnicodeEscape", "IntegerConstantSuffix", "WS", "COMMENT", "LINE_COMMENT", "'#line'", "'{'", "'}'", "'namespace'", "'@class'", "','", "';'", "'='", "'enum'", "'@protocol'", "'@interface'", "':'", "'('", "')'", "'<'", "'>'", "'@public'", "'@private'", "'@protected'", "'@end'", "'+'", "'-'", "'...'", "'struct'", "'class'", "'union'", "'public'", "'private'", "'protected'", "'*'", "'&'", "'['", "']'", "'return'", "'template'", "'typename'", "'^'", "'typedef'", "'signed'", "'unsigned'", "'__signed'", "'__unsigned'", "'long'", "'short'", "'int'", "'double'", "'float'", "'char'", "'void'", "'__int8'", "'__int16'", "'__int32'", "'__int64'", "'/'", "'%'", "'<<'", "'>>>'", "'>>'", "'||'", "'|'", "'&&'", "'<='", "'>='", "'=='", "'!='", "'@selector'", "'@encode'", "'*='", "'/='", "'%='", "'+='", "'-='", "'<<='", "'>>='", "'&='", "'^='", "'|='", "'?'", "'sizeof'", "'++'", "'--'", "'~'", "'!'", "'.'", "'->'", "'if'", "'else'", "'while'", "'do'", "'for'", "'switch'", "'case'"
    };
    public static final int T__29=29;
    public static final int T__28=28;
    public static final int T__27=27;
    public static final int T__26=26;
    public static final int T__25=25;
    public static final int T__24=24;
    public static final int T__23=23;
    public static final int T__22=22;
    public static final int EOF=-1;
    public static final int CHARACTER=9;
    public static final int T__93=93;
    public static final int T__94=94;
    public static final int T__91=91;
    public static final int T__92=92;
    public static final int T__90=90;
    public static final int COMMENT=20;
    public static final int T__99=99;
    public static final int OCTAL_NUMBER=8;
    public static final int T__98=98;
    public static final int T__97=97;
    public static final int T__96=96;
    public static final int DECIMAL_NUMBER=4;
    public static final int T__95=95;
    public static final int T__80=80;
    public static final int T__81=81;
    public static final int T__82=82;
    public static final int T__83=83;
    public static final int LINE_COMMENT=21;
    public static final int T__85=85;
    public static final int T__84=84;
    public static final int T__87=87;
    public static final int T__86=86;
    public static final int T__89=89;
    public static final int T__88=88;
    public static final int WS=19;
    public static final int T__71=71;
    public static final int T__72=72;
    public static final int FloatingPointConstantSuffix=13;
    public static final int T__70=70;
    public static final int IntegerConstantSuffix=18;
    public static final int T__76=76;
    public static final int T__75=75;
    public static final int T__74=74;
    public static final int Letter=11;
    public static final int T__73=73;
    public static final int T__79=79;
    public static final int T__78=78;
    public static final int T__77=77;
    public static final int T__68=68;
    public static final int T__69=69;
    public static final int T__66=66;
    public static final int T__67=67;
    public static final int T__64=64;
    public static final int T__65=65;
    public static final int T__62=62;
    public static final int T__63=63;
    public static final int HEXADECIMAL_NUMBER=7;
    public static final int T__61=61;
    public static final int T__60=60;
    public static final int HexDigit=16;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__57=57;
    public static final int T__58=58;
    public static final int T__51=51;
    public static final int T__52=52;
    public static final int T__53=53;
    public static final int T__54=54;
    public static final int T__107=107;
    public static final int T__108=108;
    public static final int T__109=109;
    public static final int IDENTIFIER=6;
    public static final int CharEscape=15;
    public static final int T__59=59;
    public static final int T__103=103;
    public static final int T__104=104;
    public static final int T__105=105;
    public static final int T__106=106;
    public static final int T__111=111;
    public static final int T__110=110;
    public static final int T__113=113;
    public static final int T__112=112;
    public static final int T__50=50;
    public static final int T__42=42;
    public static final int T__43=43;
    public static final int T__40=40;
    public static final int T__41=41;
    public static final int FloatingPointExponentSuffix=12;
    public static final int FLOAT_NUMBER=10;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int T__102=102;
    public static final int T__101=101;
    public static final int T__100=100;
    public static final int T__30=30;
    public static final int T__31=31;
    public static final int T__32=32;
    public static final int T__33=33;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__36=36;
    public static final int T__37=37;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int UnicodeEscape=17;
    public static final int OctalEscape=14;
    public static final int STRING=5;

    // delegates
    // delegators


        public ObjCppParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public ObjCppParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        
    protected TreeAdaptor adaptor = new CommonTreeAdaptor();

    public void setTreeAdaptor(TreeAdaptor adaptor) {
        this.adaptor = adaptor;
    }
    public TreeAdaptor getTreeAdaptor() {
        return adaptor;
    }

    public String[] getTokenNames() { return ObjCppParser.tokenNames; }
    public String getGrammarFileName() { return "/Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g"; }


    	public enum Language {
    		C, CPlusPlus, ObjectiveC
    	}
    	public EnumSet<Language> possibleLanguages = EnumSet.allOf(Language.class);
    	
    	String lastComment;
    	String file;
    	int sourceLineDelta = 0; // line(token) = token.line - lastLineToken.line + lastLine; sourceLineDelta = lastLine - lastLineToken.line
    	//String pack;
    	public void setFile(String file) {
    		this.file = file;
    		possibleLanguages = guessPossibleLanguages(file);
    	}
    	
    	public EnumSet<Language> guessPossibleLanguages(String file) {
    		int i = file.lastIndexOf(".");
    		if (i > 0) {
    			String ext = file.substring(i + 1).toLowerCase();
    		
    			if (ext.equals("h"))
    				return EnumSet.allOf(Language.class);
    			else if (ext.equals("c"))
    				return EnumSet.of(Language.C);
    			else if (ext.startsWith("c") || ext.startsWith("h")) // cxx, hxx
    				return EnumSet.of(Language.C, Language.CPlusPlus);
    			else if (ext.equals("m"))
    				return EnumSet.of(Language.C, Language.ObjectiveC);
    			else if (ext.equals("mm"))
    				return EnumSet.allOf(Language.class);
    		}
    		return EnumSet.allOf(Language.class);
    	}
    	public String getFile() { 
    		return file; 
    	}
    	
    	public int getLine() {
    		return getLine(getTokenStream().get(getTokenStream().index()));
    	}
    	
    	public int getLine(Token token) {
    		return token.getLine();// + sourceLineDelta;
    	}
    	
    	protected <T extends Element> T mark(T element, int tokenLine) {
    		element.setElementFile(getFile());
    		if (tokenLine >= 0)
    			element.setElementLine(tokenLine + sourceLineDelta);
    		return element;
    	}
    	protected String getCommentBefore() {
    		return getCommentBefore(getTokenStream().index());
    	}
    	protected String getCommentBefore(int index) {
    		String comment = null;
    		boolean toleratedNewLine = false;
    		while (index > 0) {
    			Token token = getTokenStream().get(--index);
    			if (token.getType() == COMMENT || token.getType() == LINE_COMMENT) {
    				//if (comment != null)
    				//return comment;
    				if (comment != null && comment.endsWith("\n") && toleratedNewLine)
        					return null;
    				if (comment != null)
    					return comment;
    				comment = token.getText();
    	  			if (comment != null && comment.endsWith("\n") && toleratedNewLine)
        					return null;
    			} else if (token.getType() == WS) {
    				if (token.getText().indexOf("\n") >= 0) {
    					if (comment != null)
    						return comment;
    					else if (toleratedNewLine)
    						return null;
    					else
    						toleratedNewLine = true;
    				}
    			} else
    				return null;
    		}
    		return comment;
    	}
    	protected String getCommentAfterOnSameLine() {
    		return getCommentAfterOnSameLine(getTokenStream().index() - 1);
    	}	
    	protected String getCommentAfterOnSameLine(int index) {
    		int size = getTokenStream().size();
    		while (index < size) {
    			Token token = getTokenStream().get(index++);
    			if (token.getType() == COMMENT || token.getType() == LINE_COMMENT)
    				return token.getText();
    			else if (token.getText().indexOf("\n") >= 0)
    				break;
    		}
    		return null;
    	}
    	protected Declaration decl(TaggedTypeRef type) {
    		return mark(new TaggedTypeRefDeclaration(type), type.getElementLine());
    	} 
    	
    	protected String next() {
    		return input.LT(1).getText();
    	}
    	protected boolean next(Modifier.Kind... anyModKind) {
    		return Modifier.parseModifier(next(), anyModKind) != null;
    	} 
    	protected boolean next(String... ss) {
    		String n = next();
    		for (String s : ss)
    			if (s.equals(n))
    				return true;
    				
    		return false;
    	}


    public static class lineDirective_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "lineDirective"
    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:207:1: lineDirective : ln= '#line' line= DECIMAL_NUMBER (unescapedString= STRING )? (depth= DECIMAL_NUMBER )? ;
    public final ObjCppParser.lineDirective_return lineDirective() throws RecognitionException {
        ObjCppParser.lineDirective_return retval = new ObjCppParser.lineDirective_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        Token ln=null;
        Token line=null;
        Token unescapedString=null;
        Token depth=null;

        Object ln_tree=null;
        Object line_tree=null;
        Object unescapedString_tree=null;
        Object depth_tree=null;

        try {
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:208:2: (ln= '#line' line= DECIMAL_NUMBER (unescapedString= STRING )? (depth= DECIMAL_NUMBER )? )
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:208:4: ln= '#line' line= DECIMAL_NUMBER (unescapedString= STRING )? (depth= DECIMAL_NUMBER )?
            {
            root_0 = (Object)adaptor.nil();

            ln=(Token)match(input,22,FOLLOW_22_in_lineDirective66); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            ln_tree = (Object)adaptor.create(ln);
            adaptor.addChild(root_0, ln_tree);
            }
            line=(Token)match(input,DECIMAL_NUMBER,FOLLOW_DECIMAL_NUMBER_in_lineDirective70); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            line_tree = (Object)adaptor.create(line);
            adaptor.addChild(root_0, line_tree);
            }
            if ( state.backtracking==0 ) {

              			try {
              				sourceLineDelta = Integer.parseInt((line!=null?line.getText():null)) - ln.getLine() - 1;
              			} catch (Exception ex) {
              				System.err.println("ERROR: unparsable line in #line directive : " + (line!=null?line.getText():null));
              				sourceLineDelta = 0;
              			}
              		
            }
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:216:3: (unescapedString= STRING )?
            int alt1=2;
            alt1 = dfa1.predict(input);
            switch (alt1) {
                case 1 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:217:4: unescapedString= STRING
                    {
                    unescapedString=(Token)match(input,STRING,FOLLOW_STRING_in_lineDirective83); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    unescapedString_tree = (Object)adaptor.create(unescapedString);
                    adaptor.addChild(root_0, unescapedString_tree);
                    }
                    if ( state.backtracking==0 ) {

                      				String fileStr = (unescapedString!=null?unescapedString.getText():null).trim();
                      				if (fileStr.startsWith("\"")) {
                      					fileStr = fileStr.substring(1);
                      					if (fileStr.endsWith("\""))
                      						fileStr = fileStr.substring(0, fileStr.length() - 1);
                      				}				
                      				setFile(fileStr);
                      			
                    }

                    }
                    break;

            }

            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:227:8: (depth= DECIMAL_NUMBER )?
            int alt2=2;
            alt2 = dfa2.predict(input);
            switch (alt2) {
                case 1 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:0:0: depth= DECIMAL_NUMBER
                    {
                    depth=(Token)match(input,DECIMAL_NUMBER,FOLLOW_DECIMAL_NUMBER_in_lineDirective98); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    depth_tree = (Object)adaptor.create(depth);
                    adaptor.addChild(root_0, depth_tree);
                    }

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "lineDirective"

    public static class sourceFile_return extends ParserRuleReturnScope {
        public SourceFile sourceFile;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "sourceFile"
    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:230:1: sourceFile returns [SourceFile sourceFile] : ( declaration | lineDirective )* EOF ;
    public final ObjCppParser.sourceFile_return sourceFile() throws RecognitionException {
        ObjCppParser.sourceFile_return retval = new ObjCppParser.sourceFile_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        Token EOF3=null;
        ObjCppParser.declaration_return declaration1 = null;

        ObjCppParser.lineDirective_return lineDirective2 = null;


        Object EOF3_tree=null;

        try {
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:231:2: ( ( declaration | lineDirective )* EOF )
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:232:3: ( declaration | lineDirective )* EOF
            {
            root_0 = (Object)adaptor.nil();

            if ( state.backtracking==0 ) {
               retval.sourceFile = new SourceFile(); 
            }
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:233:3: ( declaration | lineDirective )*
            loop3:
            do {
                int alt3=3;
                alt3 = dfa3.predict(input);
                switch (alt3) {
            	case 1 :
            	    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:234:4: declaration
            	    {
            	    pushFollow(FOLLOW_declaration_in_sourceFile127);
            	    declaration1=declaration();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, declaration1.getTree());
            	    if ( state.backtracking==0 ) {
            	       
            	      				for (Declaration d : (declaration1!=null?declaration1.declarations:null))
            	      					retval.sourceFile.addDeclaration(d); 
            	      			
            	    }

            	    }
            	    break;
            	case 2 :
            	    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:238:4: lineDirective
            	    {
            	    pushFollow(FOLLOW_lineDirective_in_sourceFile136);
            	    lineDirective2=lineDirective();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, lineDirective2.getTree());
            	    if ( state.backtracking==0 ) {

            	      				if (retval.sourceFile.getElementFile() == null)
            	      					retval.sourceFile.setElementFile(getFile());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop3;
                }
            } while (true);

            EOF3=(Token)match(input,EOF,FOLLOW_EOF_in_sourceFile149); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            EOF3_tree = (Object)adaptor.create(EOF3);
            adaptor.addChild(root_0, EOF3_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "sourceFile"

    public static class externDeclarations_return extends ParserRuleReturnScope {
        public ExternDeclarations declarations;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "externDeclarations"
    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:246:1: externDeclarations returns [ExternDeclarations declarations] : {...}? IDENTIFIER STRING '{' (ed= declaration )* '}' ;
    public final ObjCppParser.externDeclarations_return externDeclarations() throws RecognitionException {
        ObjCppParser.externDeclarations_return retval = new ObjCppParser.externDeclarations_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        Token IDENTIFIER4=null;
        Token STRING5=null;
        Token char_literal6=null;
        Token char_literal7=null;
        ObjCppParser.declaration_return ed = null;


        Object IDENTIFIER4_tree=null;
        Object STRING5_tree=null;
        Object char_literal6_tree=null;
        Object char_literal7_tree=null;

        try {
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:247:2: ({...}? IDENTIFIER STRING '{' (ed= declaration )* '}' )
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:247:4: {...}? IDENTIFIER STRING '{' (ed= declaration )* '}'
            {
            root_0 = (Object)adaptor.nil();

            if ( !(( next("extern") )) ) {
                if (state.backtracking>0) {state.failed=true; return retval;}
                throw new FailedPredicateException(input, "externDeclarations", " next(\"extern\") ");
            }
            IDENTIFIER4=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_externDeclarations167); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IDENTIFIER4_tree = (Object)adaptor.create(IDENTIFIER4);
            adaptor.addChild(root_0, IDENTIFIER4_tree);
            }
            STRING5=(Token)match(input,STRING,FOLLOW_STRING_in_externDeclarations171); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            STRING5_tree = (Object)adaptor.create(STRING5);
            adaptor.addChild(root_0, STRING5_tree);
            }
            if ( state.backtracking==0 ) {

              			retval.declarations = mark(new ExternDeclarations(), getLine(STRING5));
              			retval.declarations.setLanguage((STRING5!=null?STRING5.getText():null));
              		
            }
            char_literal6=(Token)match(input,23,FOLLOW_23_in_externDeclarations177); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal6_tree = (Object)adaptor.create(char_literal6);
            adaptor.addChild(root_0, char_literal6_tree);
            }
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:253:4: (ed= declaration )*
            loop4:
            do {
                int alt4=2;
                alt4 = dfa4.predict(input);
                switch (alt4) {
            	case 1 :
            	    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:254:5: ed= declaration
            	    {
            	    pushFollow(FOLLOW_declaration_in_externDeclarations191);
            	    ed=declaration();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, ed.getTree());
            	    if ( state.backtracking==0 ) {
            	       
            	      					retval.declarations.addDeclarations((ed!=null?ed.declarations:null)); 
            	      				
            	    }

            	    }
            	    break;

            	default :
            	    break loop4;
                }
            } while (true);

            char_literal7=(Token)match(input,24,FOLLOW_24_in_externDeclarations204); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal7_tree = (Object)adaptor.create(char_literal7);
            adaptor.addChild(root_0, char_literal7_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "externDeclarations"

    public static class declaration_return extends ParserRuleReturnScope {
        public List<Declaration> declarations;
        public List<Modifier> modifiers;
        public String preComment;
        public int startTokenIndex;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "declaration"
    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:261:1: declaration returns [List<Declaration> declarations, List<Modifier> modifiers, String preComment, int startTokenIndex] : ( ( functionDeclaration | externDeclarations | varDecl | objCClassDef | typeDef | forwardClassDecl | 'namespace' ns= IDENTIFIER '{' (subD= declaration )* '}' ) ) ;
    public final ObjCppParser.declaration_return declaration() throws RecognitionException {
        ObjCppParser.declaration_return retval = new ObjCppParser.declaration_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        Token ns=null;
        Token string_literal14=null;
        Token char_literal15=null;
        Token char_literal16=null;
        ObjCppParser.declaration_return subD = null;

        ObjCppParser.functionDeclaration_return functionDeclaration8 = null;

        ObjCppParser.externDeclarations_return externDeclarations9 = null;

        ObjCppParser.varDecl_return varDecl10 = null;

        ObjCppParser.objCClassDef_return objCClassDef11 = null;

        ObjCppParser.typeDef_return typeDef12 = null;

        ObjCppParser.forwardClassDecl_return forwardClassDecl13 = null;


        Object ns_tree=null;
        Object string_literal14_tree=null;
        Object char_literal15_tree=null;
        Object char_literal16_tree=null;

        try {
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:262:2: ( ( ( functionDeclaration | externDeclarations | varDecl | objCClassDef | typeDef | forwardClassDecl | 'namespace' ns= IDENTIFIER '{' (subD= declaration )* '}' ) ) )
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:263:3: ( ( functionDeclaration | externDeclarations | varDecl | objCClassDef | typeDef | forwardClassDecl | 'namespace' ns= IDENTIFIER '{' (subD= declaration )* '}' ) )
            {
            root_0 = (Object)adaptor.nil();

            if ( state.backtracking==0 ) {
               retval.declarations = new ArrayList<Declaration>(); 
              		  retval.modifiers = new ArrayList<Modifier>();
              		  retval.startTokenIndex = getTokenStream().index();
              		  retval.preComment = getCommentBefore(retval.startTokenIndex);
              		
            }
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:268:3: ( ( functionDeclaration | externDeclarations | varDecl | objCClassDef | typeDef | forwardClassDecl | 'namespace' ns= IDENTIFIER '{' (subD= declaration )* '}' ) )
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:275:4: ( functionDeclaration | externDeclarations | varDecl | objCClassDef | typeDef | forwardClassDecl | 'namespace' ns= IDENTIFIER '{' (subD= declaration )* '}' )
            {
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:275:4: ( functionDeclaration | externDeclarations | varDecl | objCClassDef | typeDef | forwardClassDecl | 'namespace' ns= IDENTIFIER '{' (subD= declaration )* '}' )
            int alt6=7;
            alt6 = dfa6.predict(input);
            switch (alt6) {
                case 1 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:277:5: functionDeclaration
                    {
                    pushFollow(FOLLOW_functionDeclaration_in_declaration247);
                    functionDeclaration8=functionDeclaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, functionDeclaration8.getTree());
                    if ( state.backtracking==0 ) {

                      					retval.declarations.add((functionDeclaration8!=null?functionDeclaration8.function:null));
                      				
                    }

                    }
                    break;
                case 2 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:280:5: externDeclarations
                    {
                    pushFollow(FOLLOW_externDeclarations_in_declaration257);
                    externDeclarations9=externDeclarations();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, externDeclarations9.getTree());
                    if ( state.backtracking==0 ) {

                      					retval.declarations.add((externDeclarations9!=null?externDeclarations9.declarations:null)); 
                      				
                    }

                    }
                    break;
                case 3 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:283:5: varDecl
                    {
                    pushFollow(FOLLOW_varDecl_in_declaration267);
                    varDecl10=varDecl();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, varDecl10.getTree());
                    if ( state.backtracking==0 ) {
                       
                      					retval.declarations.add((varDecl10!=null?varDecl10.decl:null)); 
                      				
                    }

                    }
                    break;
                case 4 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:286:5: objCClassDef
                    {
                    pushFollow(FOLLOW_objCClassDef_in_declaration277);
                    objCClassDef11=objCClassDef();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, objCClassDef11.getTree());
                    if ( state.backtracking==0 ) {
                       
                      					retval.declarations.add(decl((objCClassDef11!=null?objCClassDef11.struct:null))); 
                      				
                    }

                    }
                    break;
                case 5 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:289:5: typeDef
                    {
                    pushFollow(FOLLOW_typeDef_in_declaration287);
                    typeDef12=typeDef();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, typeDef12.getTree());
                    if ( state.backtracking==0 ) {

                      					retval.declarations.add((typeDef12!=null?typeDef12.typeDef:null)); 
                      				
                    }

                    }
                    break;
                case 6 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:292:5: forwardClassDecl
                    {
                    pushFollow(FOLLOW_forwardClassDecl_in_declaration297);
                    forwardClassDecl13=forwardClassDecl();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, forwardClassDecl13.getTree());
                    if ( state.backtracking==0 ) {

                      					retval.declarations.addAll((forwardClassDecl13!=null?forwardClassDecl13.declarations:null)); 
                      				
                    }

                    }
                    break;
                case 7 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:295:5: 'namespace' ns= IDENTIFIER '{' (subD= declaration )* '}'
                    {
                    string_literal14=(Token)match(input,25,FOLLOW_25_in_declaration307); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal14_tree = (Object)adaptor.create(string_literal14);
                    adaptor.addChild(root_0, string_literal14_tree);
                    }
                    ns=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_declaration311); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    ns_tree = (Object)adaptor.create(ns);
                    adaptor.addChild(root_0, ns_tree);
                    }
                    char_literal15=(Token)match(input,23,FOLLOW_23_in_declaration313); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal15_tree = (Object)adaptor.create(char_literal15);
                    adaptor.addChild(root_0, char_literal15_tree);
                    }
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:296:6: (subD= declaration )*
                    loop5:
                    do {
                        int alt5=2;
                        alt5 = dfa5.predict(input);
                        switch (alt5) {
                    	case 1 :
                    	    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:297:7: subD= declaration
                    	    {
                    	    pushFollow(FOLLOW_declaration_in_declaration331);
                    	    subD=declaration();

                    	    state._fsp--;
                    	    if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) adaptor.addChild(root_0, subD.getTree());
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      							for (Declaration d : (subD!=null?subD.declarations:null)) {
                    	      								d.addNameSpace((ns!=null?ns.getText():null));
                    	      								retval.declarations.add(d);
                    	      							}
                    	      						
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop5;
                        }
                    } while (true);

                    char_literal16=(Token)match(input,24,FOLLOW_24_in_declaration347); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal16_tree = (Object)adaptor.create(char_literal16);
                    adaptor.addChild(root_0, char_literal16_tree);
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              				String commentAfter = getCommentAfterOnSameLine(retval.startTokenIndex);
              				for (Declaration d  : retval.declarations) {
              					if (d == null)
              						continue;
              					d.setCommentBefore(retval.preComment);
              					d.setCommentAfter(commentAfter);
              					d.addModifiers(retval.modifiers);
              				}
              				
              			
            }

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "declaration"

    public static class forwardClassDecl_return extends ParserRuleReturnScope {
        public List<Declaration> declarations;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "forwardClassDecl"
    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:321:1: forwardClassDecl returns [List<Declaration> declarations] : '@class' n1= IDENTIFIER ( ',' nx= IDENTIFIER )* ';' ;
    public final ObjCppParser.forwardClassDecl_return forwardClassDecl() throws RecognitionException {
        ObjCppParser.forwardClassDecl_return retval = new ObjCppParser.forwardClassDecl_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        Token n1=null;
        Token nx=null;
        Token string_literal17=null;
        Token char_literal18=null;
        Token char_literal19=null;

        Object n1_tree=null;
        Object nx_tree=null;
        Object string_literal17_tree=null;
        Object char_literal18_tree=null;
        Object char_literal19_tree=null;

        try {
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:322:2: ( '@class' n1= IDENTIFIER ( ',' nx= IDENTIFIER )* ';' )
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:322:5: '@class' n1= IDENTIFIER ( ',' nx= IDENTIFIER )* ';'
            {
            root_0 = (Object)adaptor.nil();

            if ( state.backtracking==0 ) {
               retval.declarations = new ArrayList<Declaration>(); 
            }
            string_literal17=(Token)match(input,26,FOLLOW_26_in_forwardClassDecl387); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal17_tree = (Object)adaptor.create(string_literal17);
            adaptor.addChild(root_0, string_literal17_tree);
            }
            n1=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_forwardClassDecl394); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            n1_tree = (Object)adaptor.create(n1);
            adaptor.addChild(root_0, n1_tree);
            }
            if ( state.backtracking==0 ) {
               retval.declarations.add(decl(Struct.forwardDecl((n1!=null?n1.getText():null), Struct.Type.ObjCClass))); 
            }
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:325:3: ( ',' nx= IDENTIFIER )*
            loop7:
            do {
                int alt7=2;
                int LA7_0 = input.LA(1);

                if ( (LA7_0==27) ) {
                    alt7=1;
                }


                switch (alt7) {
            	case 1 :
            	    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:325:4: ',' nx= IDENTIFIER
            	    {
            	    char_literal18=(Token)match(input,27,FOLLOW_27_in_forwardClassDecl401); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal18_tree = (Object)adaptor.create(char_literal18);
            	    adaptor.addChild(root_0, char_literal18_tree);
            	    }
            	    nx=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_forwardClassDecl408); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    nx_tree = (Object)adaptor.create(nx);
            	    adaptor.addChild(root_0, nx_tree);
            	    }
            	    if ( state.backtracking==0 ) {
            	       retval.declarations.add(decl(Struct.forwardDecl((nx!=null?nx.getText():null), Struct.Type.ObjCClass))); 
            	    }

            	    }
            	    break;

            	default :
            	    break loop7;
                }
            } while (true);

            char_literal19=(Token)match(input,28,FOLLOW_28_in_forwardClassDecl419); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal19_tree = (Object)adaptor.create(char_literal19);
            adaptor.addChild(root_0, char_literal19_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "forwardClassDecl"

    public static class functionPointerVarDecl_return extends ParserRuleReturnScope {
        public List<? extends Declaration> declarations;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "functionPointerVarDecl"
    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:331:1: functionPointerVarDecl returns [List<? extends Declaration> declarations] : typeRef {...}? ';' ;
    public final ObjCppParser.functionPointerVarDecl_return functionPointerVarDecl() throws RecognitionException {
        ObjCppParser.functionPointerVarDecl_return retval = new ObjCppParser.functionPointerVarDecl_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        Token char_literal21=null;
        ObjCppParser.typeRef_return typeRef20 = null;


        Object char_literal21_tree=null;

        try {
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:332:2: ( typeRef {...}? ';' )
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:332:4: typeRef {...}? ';'
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_typeRef_in_functionPointerVarDecl437);
            typeRef20=typeRef();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, typeRef20.getTree());
            if ( !((
            			((typeRef20!=null?typeRef20.type:null) instanceof FunctionSignature) && 
            			((FunctionSignature)(typeRef20!=null?typeRef20.type:null)).getFunction().getName() != null
            		)) ) {
                if (state.backtracking>0) {state.failed=true; return retval;}
                throw new FailedPredicateException(input, "functionPointerVarDecl", "\n\t\t\t($typeRef.type instanceof FunctionSignature) && \n\t\t\t((FunctionSignature)$typeRef.type).getFunction().getName() != null\n\t\t");
            }
            if ( state.backtracking==0 ) {

              			retval.declarations = Arrays.asList(new FunctionPointerDeclaration(((FunctionSignature)(typeRef20!=null?typeRef20.type:null))));
              		
            }
            char_literal21=(Token)match(input,28,FOLLOW_28_in_functionPointerVarDecl445); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal21_tree = (Object)adaptor.create(char_literal21);
            adaptor.addChild(root_0, char_literal21_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "functionPointerVarDecl"

    public static class enumItem_return extends ParserRuleReturnScope {
        public Enum.EnumItem item;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "enumItem"
    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:341:1: enumItem returns [Enum.EnumItem item] : n= IDENTIFIER ( '=' v= expression )? ;
    public final ObjCppParser.enumItem_return enumItem() throws RecognitionException {
        ObjCppParser.enumItem_return retval = new ObjCppParser.enumItem_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        Token n=null;
        Token char_literal22=null;
        ObjCppParser.expression_return v = null;


        Object n_tree=null;
        Object char_literal22_tree=null;

        try {
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:342:2: (n= IDENTIFIER ( '=' v= expression )? )
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:342:4: n= IDENTIFIER ( '=' v= expression )?
            {
            root_0 = (Object)adaptor.nil();

            n=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_enumItem463); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            n_tree = (Object)adaptor.create(n);
            adaptor.addChild(root_0, n_tree);
            }
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:342:17: ( '=' v= expression )?
            int alt8=2;
            int LA8_0 = input.LA(1);

            if ( (LA8_0==29) ) {
                alt8=1;
            }
            switch (alt8) {
                case 1 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:342:18: '=' v= expression
                    {
                    char_literal22=(Token)match(input,29,FOLLOW_29_in_enumItem466); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal22_tree = (Object)adaptor.create(char_literal22);
                    adaptor.addChild(root_0, char_literal22_tree);
                    }
                    pushFollow(FOLLOW_expression_in_enumItem470);
                    v=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, v.getTree());

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			retval.item = mark(new Enum.EnumItem((n!=null?n.getText():null), (v!=null?input.toString(v.start,v.stop):null) == null ? null : (v!=null?v.expr:null)), getLine(n));
              			retval.item.setCommentBefore(getCommentBefore(n.getTokenIndex()));
              			retval.item.setCommentAfter(getCommentAfterOnSameLine(n.getTokenIndex() - 1));
              		
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "enumItem"

    public static class enumCore_return extends ParserRuleReturnScope {
        public Enum e;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "enumCore"
    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:349:1: enumCore returns [Enum e] : t= 'enum' (n1= IDENTIFIER )? ( '{' (i1= enumItem ( ',' (ix= enumItem )? )* )? '}' )? ;
    public final ObjCppParser.enumCore_return enumCore() throws RecognitionException {
        ObjCppParser.enumCore_return retval = new ObjCppParser.enumCore_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        Token t=null;
        Token n1=null;
        Token char_literal23=null;
        Token char_literal24=null;
        Token char_literal25=null;
        ObjCppParser.enumItem_return i1 = null;

        ObjCppParser.enumItem_return ix = null;


        Object t_tree=null;
        Object n1_tree=null;
        Object char_literal23_tree=null;
        Object char_literal24_tree=null;
        Object char_literal25_tree=null;

        try {
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:350:2: (t= 'enum' (n1= IDENTIFIER )? ( '{' (i1= enumItem ( ',' (ix= enumItem )? )* )? '}' )? )
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:351:3: t= 'enum' (n1= IDENTIFIER )? ( '{' (i1= enumItem ( ',' (ix= enumItem )? )* )? '}' )?
            {
            root_0 = (Object)adaptor.nil();

            t=(Token)match(input,30,FOLLOW_30_in_enumCore494); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            t_tree = (Object)adaptor.create(t);
            adaptor.addChild(root_0, t_tree);
            }
            if ( state.backtracking==0 ) {
               
              			retval.e = mark(new Enum(), getLine(t));
              			retval.e.setCommentBefore(getCommentBefore(t.getTokenIndex()));
              			retval.e.setForwardDeclaration(true);
              		
            }
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:356:3: (n1= IDENTIFIER )?
            int alt9=2;
            alt9 = dfa9.predict(input);
            switch (alt9) {
                case 1 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:357:4: n1= IDENTIFIER
                    {
                    n1=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_enumCore508); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    n1_tree = (Object)adaptor.create(n1);
                    adaptor.addChild(root_0, n1_tree);
                    }
                    if ( state.backtracking==0 ) {

                      				retval.e.setTag((n1!=null?n1.getText():null));
                      			
                    }

                    }
                    break;

            }

            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:361:3: ( '{' (i1= enumItem ( ',' (ix= enumItem )? )* )? '}' )?
            int alt13=2;
            alt13 = dfa13.predict(input);
            switch (alt13) {
                case 1 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:362:4: '{' (i1= enumItem ( ',' (ix= enumItem )? )* )? '}'
                    {
                    char_literal23=(Token)match(input,23,FOLLOW_23_in_enumCore525); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal23_tree = (Object)adaptor.create(char_literal23);
                    adaptor.addChild(root_0, char_literal23_tree);
                    }
                    if ( state.backtracking==0 ) {
                       retval.e.setForwardDeclaration(false); 
                    }
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:363:5: (i1= enumItem ( ',' (ix= enumItem )? )* )?
                    int alt12=2;
                    int LA12_0 = input.LA(1);

                    if ( (LA12_0==IDENTIFIER) ) {
                        alt12=1;
                    }
                    switch (alt12) {
                        case 1 :
                            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:364:6: i1= enumItem ( ',' (ix= enumItem )? )*
                            {
                            pushFollow(FOLLOW_enumItem_in_enumCore544);
                            i1=enumItem();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, i1.getTree());
                            if ( state.backtracking==0 ) {
                               
                              						if ((i1!=null?input.toString(i1.start,i1.stop):null) != null)
                              							retval.e.addItem((i1!=null?i1.item:null)); 
                              					
                            }
                            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:368:6: ( ',' (ix= enumItem )? )*
                            loop11:
                            do {
                                int alt11=2;
                                int LA11_0 = input.LA(1);

                                if ( (LA11_0==27) ) {
                                    alt11=1;
                                }


                                switch (alt11) {
                            	case 1 :
                            	    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:369:7: ',' (ix= enumItem )?
                            	    {
                            	    char_literal24=(Token)match(input,27,FOLLOW_27_in_enumCore561); if (state.failed) return retval;
                            	    if ( state.backtracking==0 ) {
                            	    char_literal24_tree = (Object)adaptor.create(char_literal24);
                            	    adaptor.addChild(root_0, char_literal24_tree);
                            	    }
                            	    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:370:7: (ix= enumItem )?
                            	    int alt10=2;
                            	    int LA10_0 = input.LA(1);

                            	    if ( (LA10_0==IDENTIFIER) ) {
                            	        alt10=1;
                            	    }
                            	    switch (alt10) {
                            	        case 1 :
                            	            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:370:8: ix= enumItem
                            	            {
                            	            pushFollow(FOLLOW_enumItem_in_enumCore573);
                            	            ix=enumItem();

                            	            state._fsp--;
                            	            if (state.failed) return retval;
                            	            if ( state.backtracking==0 ) adaptor.addChild(root_0, ix.getTree());
                            	            if ( state.backtracking==0 ) {
                            	               
                            	              							if ((ix!=null?input.toString(ix.start,ix.stop):null) != null)
                            	              								retval.e.addItem((ix!=null?ix.item:null)); 
                            	              						
                            	            }

                            	            }
                            	            break;

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop11;
                                }
                            } while (true);


                            }
                            break;

                    }

                    char_literal25=(Token)match(input,24,FOLLOW_24_in_enumCore597); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal25_tree = (Object)adaptor.create(char_literal25);
                    adaptor.addChild(root_0, char_literal25_tree);
                    }

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "enumCore"

    public static class objCClassDef_return extends ParserRuleReturnScope {
        public Struct struct;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "objCClassDef"
    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:387:1: objCClassDef returns [Struct struct] : octype= ( '@protocol' | '@interface' ) className= IDENTIFIER ( ( ':' parentClass= IDENTIFIER )? | '(' categoryName= IDENTIFIER ')' ) ( '<' (p1= IDENTIFIER ( ',' px= IDENTIFIER )* )? '>' )? ( '{' ( '@public' | '@private' | '@protected' | ( (fv= varDecl | functionPointerVarDecl ) ) )* '}' )? ( objCMethodDecl | typeDef | vd= varDecl {...}?)* '@end' ;
    public final ObjCppParser.objCClassDef_return objCClassDef() throws RecognitionException {
        ObjCppParser.objCClassDef_return retval = new ObjCppParser.objCClassDef_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        Token octype=null;
        Token className=null;
        Token parentClass=null;
        Token categoryName=null;
        Token p1=null;
        Token px=null;
        Token char_literal26=null;
        Token char_literal27=null;
        Token char_literal28=null;
        Token char_literal29=null;
        Token char_literal30=null;
        Token char_literal31=null;
        Token char_literal32=null;
        Token string_literal33=null;
        Token string_literal34=null;
        Token string_literal35=null;
        Token char_literal37=null;
        Token string_literal40=null;
        ObjCppParser.varDecl_return fv = null;

        ObjCppParser.varDecl_return vd = null;

        ObjCppParser.functionPointerVarDecl_return functionPointerVarDecl36 = null;

        ObjCppParser.objCMethodDecl_return objCMethodDecl38 = null;

        ObjCppParser.typeDef_return typeDef39 = null;


        Object octype_tree=null;
        Object className_tree=null;
        Object parentClass_tree=null;
        Object categoryName_tree=null;
        Object p1_tree=null;
        Object px_tree=null;
        Object char_literal26_tree=null;
        Object char_literal27_tree=null;
        Object char_literal28_tree=null;
        Object char_literal29_tree=null;
        Object char_literal30_tree=null;
        Object char_literal31_tree=null;
        Object char_literal32_tree=null;
        Object string_literal33_tree=null;
        Object string_literal34_tree=null;
        Object string_literal35_tree=null;
        Object char_literal37_tree=null;
        Object string_literal40_tree=null;

        try {
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:388:2: (octype= ( '@protocol' | '@interface' ) className= IDENTIFIER ( ( ':' parentClass= IDENTIFIER )? | '(' categoryName= IDENTIFIER ')' ) ( '<' (p1= IDENTIFIER ( ',' px= IDENTIFIER )* )? '>' )? ( '{' ( '@public' | '@private' | '@protected' | ( (fv= varDecl | functionPointerVarDecl ) ) )* '}' )? ( objCMethodDecl | typeDef | vd= varDecl {...}?)* '@end' )
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:389:3: octype= ( '@protocol' | '@interface' ) className= IDENTIFIER ( ( ':' parentClass= IDENTIFIER )? | '(' categoryName= IDENTIFIER ')' ) ( '<' (p1= IDENTIFIER ( ',' px= IDENTIFIER )* )? '>' )? ( '{' ( '@public' | '@private' | '@protected' | ( (fv= varDecl | functionPointerVarDecl ) ) )* '}' )? ( objCMethodDecl | typeDef | vd= varDecl {...}?)* '@end'
            {
            root_0 = (Object)adaptor.nil();

            octype=(Token)input.LT(1);
            if ( (input.LA(1)>=31 && input.LA(1)<=32) ) {
                input.consume();
                if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(octype));
                state.errorRecovery=false;state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }

            className=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_objCClassDef640); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            className_tree = (Object)adaptor.create(className);
            adaptor.addChild(root_0, className_tree);
            }
            if ( state.backtracking==0 ) {

              			retval.struct = mark(new Struct(), getLine(octype));
              			retval.struct.setCommentBefore(getCommentBefore(octype.getTokenIndex()));
              			retval.struct.setType((octype!=null?octype.getText():null).equals("@interface") ?
              				Struct.Type.ObjCClass :
              				Struct.Type.ObjCProtocol
              			);
              			retval.struct.setTag((className!=null?className.getText():null));
              		
            }
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:399:3: ( ( ':' parentClass= IDENTIFIER )? | '(' categoryName= IDENTIFIER ')' )
            int alt15=2;
            alt15 = dfa15.predict(input);
            switch (alt15) {
                case 1 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:400:4: ( ':' parentClass= IDENTIFIER )?
                    {
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:400:4: ( ':' parentClass= IDENTIFIER )?
                    int alt14=2;
                    alt14 = dfa14.predict(input);
                    switch (alt14) {
                        case 1 :
                            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:401:5: ':' parentClass= IDENTIFIER
                            {
                            char_literal26=(Token)match(input,33,FOLLOW_33_in_objCClassDef658); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            char_literal26_tree = (Object)adaptor.create(char_literal26);
                            adaptor.addChild(root_0, char_literal26_tree);
                            }
                            parentClass=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_objCClassDef662); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            parentClass_tree = (Object)adaptor.create(parentClass);
                            adaptor.addChild(root_0, parentClass_tree);
                            }
                            if ( state.backtracking==0 ) {

                              				if ((parentClass!=null?parentClass.getText():null) != null)
                              					retval.struct.addParent((parentClass!=null?parentClass.getText():null));
                              				
                            }

                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:406:4: '(' categoryName= IDENTIFIER ')'
                    {
                    char_literal27=(Token)match(input,34,FOLLOW_34_in_objCClassDef677); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal27_tree = (Object)adaptor.create(char_literal27);
                    adaptor.addChild(root_0, char_literal27_tree);
                    }
                    categoryName=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_objCClassDef681); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    categoryName_tree = (Object)adaptor.create(categoryName);
                    adaptor.addChild(root_0, categoryName_tree);
                    }
                    char_literal28=(Token)match(input,35,FOLLOW_35_in_objCClassDef683); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal28_tree = (Object)adaptor.create(char_literal28);
                    adaptor.addChild(root_0, char_literal28_tree);
                    }
                    if ( state.backtracking==0 ) {

                      				retval.struct.setCategoryName((categoryName!=null?categoryName.getText():null));
                      			
                    }

                    }
                    break;

            }

            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:410:3: ( '<' (p1= IDENTIFIER ( ',' px= IDENTIFIER )* )? '>' )?
            int alt18=2;
            alt18 = dfa18.predict(input);
            switch (alt18) {
                case 1 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:411:4: '<' (p1= IDENTIFIER ( ',' px= IDENTIFIER )* )? '>'
                    {
                    char_literal29=(Token)match(input,36,FOLLOW_36_in_objCClassDef699); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal29_tree = (Object)adaptor.create(char_literal29);
                    adaptor.addChild(root_0, char_literal29_tree);
                    }
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:411:8: (p1= IDENTIFIER ( ',' px= IDENTIFIER )* )?
                    int alt17=2;
                    int LA17_0 = input.LA(1);

                    if ( (LA17_0==IDENTIFIER) ) {
                        alt17=1;
                    }
                    switch (alt17) {
                        case 1 :
                            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:412:5: p1= IDENTIFIER ( ',' px= IDENTIFIER )*
                            {
                            p1=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_objCClassDef709); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            p1_tree = (Object)adaptor.create(p1);
                            adaptor.addChild(root_0, p1_tree);
                            }
                            if ( state.backtracking==0 ) {
                               retval.struct.addProtocol((p1!=null?p1.getText():null)); 
                            }
                            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:413:5: ( ',' px= IDENTIFIER )*
                            loop16:
                            do {
                                int alt16=2;
                                int LA16_0 = input.LA(1);

                                if ( (LA16_0==27) ) {
                                    alt16=1;
                                }


                                switch (alt16) {
                            	case 1 :
                            	    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:414:6: ',' px= IDENTIFIER
                            	    {
                            	    char_literal30=(Token)match(input,27,FOLLOW_27_in_objCClassDef724); if (state.failed) return retval;
                            	    if ( state.backtracking==0 ) {
                            	    char_literal30_tree = (Object)adaptor.create(char_literal30);
                            	    adaptor.addChild(root_0, char_literal30_tree);
                            	    }
                            	    px=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_objCClassDef734); if (state.failed) return retval;
                            	    if ( state.backtracking==0 ) {
                            	    px_tree = (Object)adaptor.create(px);
                            	    adaptor.addChild(root_0, px_tree);
                            	    }
                            	    if ( state.backtracking==0 ) {
                            	       retval.struct.addProtocol((px!=null?px.getText():null)); 
                            	    }

                            	    }
                            	    break;

                            	default :
                            	    break loop16;
                                }
                            } while (true);


                            }
                            break;

                    }

                    char_literal31=(Token)match(input,37,FOLLOW_37_in_objCClassDef751); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal31_tree = (Object)adaptor.create(char_literal31);
                    adaptor.addChild(root_0, char_literal31_tree);
                    }

                    }
                    break;

            }

            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:419:3: ( '{' ( '@public' | '@private' | '@protected' | ( (fv= varDecl | functionPointerVarDecl ) ) )* '}' )?
            int alt21=2;
            alt21 = dfa21.predict(input);
            switch (alt21) {
                case 1 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:420:4: '{' ( '@public' | '@private' | '@protected' | ( (fv= varDecl | functionPointerVarDecl ) ) )* '}'
                    {
                    char_literal32=(Token)match(input,23,FOLLOW_23_in_objCClassDef765); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal32_tree = (Object)adaptor.create(char_literal32);
                    adaptor.addChild(root_0, char_literal32_tree);
                    }
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:421:4: ( '@public' | '@private' | '@protected' | ( (fv= varDecl | functionPointerVarDecl ) ) )*
                    loop20:
                    do {
                        int alt20=5;
                        alt20 = dfa20.predict(input);
                        switch (alt20) {
                    	case 1 :
                    	    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:422:5: '@public'
                    	    {
                    	    string_literal33=(Token)match(input,38,FOLLOW_38_in_objCClassDef777); if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) {
                    	    string_literal33_tree = (Object)adaptor.create(string_literal33);
                    	    adaptor.addChild(root_0, string_literal33_tree);
                    	    }
                    	    if ( state.backtracking==0 ) {
                    	       retval.struct.setNextMemberVisibility(Struct.MemberVisibility.Public); 
                    	    }

                    	    }
                    	    break;
                    	case 2 :
                    	    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:423:5: '@private'
                    	    {
                    	    string_literal34=(Token)match(input,39,FOLLOW_39_in_objCClassDef788); if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) {
                    	    string_literal34_tree = (Object)adaptor.create(string_literal34);
                    	    adaptor.addChild(root_0, string_literal34_tree);
                    	    }
                    	    if ( state.backtracking==0 ) {
                    	       retval.struct.setNextMemberVisibility(Struct.MemberVisibility.Private); 
                    	    }

                    	    }
                    	    break;
                    	case 3 :
                    	    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:424:5: '@protected'
                    	    {
                    	    string_literal35=(Token)match(input,40,FOLLOW_40_in_objCClassDef799); if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) {
                    	    string_literal35_tree = (Object)adaptor.create(string_literal35);
                    	    adaptor.addChild(root_0, string_literal35_tree);
                    	    }
                    	    if ( state.backtracking==0 ) {
                    	       retval.struct.setNextMemberVisibility(Struct.MemberVisibility.Protected); 
                    	    }

                    	    }
                    	    break;
                    	case 4 :
                    	    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:425:5: ( (fv= varDecl | functionPointerVarDecl ) )
                    	    {
                    	    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:425:5: ( (fv= varDecl | functionPointerVarDecl ) )
                    	    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:426:6: (fv= varDecl | functionPointerVarDecl )
                    	    {
                    	    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:426:6: (fv= varDecl | functionPointerVarDecl )
                    	    int alt19=2;
                    	    alt19 = dfa19.predict(input);
                    	    switch (alt19) {
                    	        case 1 :
                    	            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:427:7: fv= varDecl
                    	            {
                    	            pushFollow(FOLLOW_varDecl_in_objCClassDef826);
                    	            fv=varDecl();

                    	            state._fsp--;
                    	            if (state.failed) return retval;
                    	            if ( state.backtracking==0 ) adaptor.addChild(root_0, fv.getTree());
                    	            if ( state.backtracking==0 ) {
                    	               
                    	              							retval.struct.addDeclaration((fv!=null?fv.decl:null)); 
                    	              						
                    	            }

                    	            }
                    	            break;
                    	        case 2 :
                    	            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:430:7: functionPointerVarDecl
                    	            {
                    	            pushFollow(FOLLOW_functionPointerVarDecl_in_objCClassDef838);
                    	            functionPointerVarDecl36=functionPointerVarDecl();

                    	            state._fsp--;
                    	            if (state.failed) return retval;
                    	            if ( state.backtracking==0 ) adaptor.addChild(root_0, functionPointerVarDecl36.getTree());
                    	            if ( state.backtracking==0 ) {
                    	               
                    	              							retval.struct.addDeclarations((functionPointerVarDecl36!=null?functionPointerVarDecl36.declarations:null)); 
                    	              						
                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop20;
                        }
                    } while (true);

                    char_literal37=(Token)match(input,24,FOLLOW_24_in_objCClassDef865); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal37_tree = (Object)adaptor.create(char_literal37);
                    adaptor.addChild(root_0, char_literal37_tree);
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               retval.struct.setNextMemberVisibility(Struct.MemberVisibility.Public); 
            }
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:439:3: ( objCMethodDecl | typeDef | vd= varDecl {...}?)*
            loop22:
            do {
                int alt22=4;
                alt22 = dfa22.predict(input);
                switch (alt22) {
            	case 1 :
            	    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:440:4: objCMethodDecl
            	    {
            	    pushFollow(FOLLOW_objCMethodDecl_in_objCClassDef883);
            	    objCMethodDecl38=objCMethodDecl();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, objCMethodDecl38.getTree());
            	    if ( state.backtracking==0 ) {
            	       
            	      				retval.struct.addDeclaration((objCMethodDecl38!=null?objCMethodDecl38.function:null)); 
            	      			
            	    }

            	    }
            	    break;
            	case 2 :
            	    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:443:4: typeDef
            	    {
            	    pushFollow(FOLLOW_typeDef_in_objCClassDef892);
            	    typeDef39=typeDef();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, typeDef39.getTree());
            	    if ( state.backtracking==0 ) {

            	      				retval.struct.addDeclaration((typeDef39!=null?typeDef39.typeDef:null)); 
            	      			
            	    }

            	    }
            	    break;
            	case 3 :
            	    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:446:4: vd= varDecl {...}?
            	    {
            	    pushFollow(FOLLOW_varDecl_in_objCClassDef903);
            	    vd=varDecl();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, vd.getTree());
            	    if ( !(( !((vd!=null?vd.decl:null) instanceof VariablesDeclaration) )) ) {
            	        if (state.backtracking>0) {state.failed=true; return retval;}
            	        throw new FailedPredicateException(input, "objCClassDef", " !($vd.decl instanceof VariablesDeclaration) ");
            	    }
            	    if ( state.backtracking==0 ) {

            	      				retval.struct.addDeclaration((vd!=null?vd.decl:null));
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop22;
                }
            } while (true);

            string_literal40=(Token)match(input,41,FOLLOW_41_in_objCClassDef916); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal40_tree = (Object)adaptor.create(string_literal40);
            adaptor.addChild(root_0, string_literal40_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "objCClassDef"

    public static class objCMethodDecl_return extends ParserRuleReturnScope {
        public Function function;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "objCMethodDecl"
    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:453:1: objCMethodDecl returns [Function function] : tk= (tp= '+' | tm= '-' ) ( '(' (returnTypeRef= typeRef )? ')' )? methodName= IDENTIFIER ( ':' '(' argType1= typeRef ')' argName1= IDENTIFIER (sel= IDENTIFIER ':' '(' argType= typeRef ')' argName= IDENTIFIER )* ( ',' '...' )? )? ';' ;
    public final ObjCppParser.objCMethodDecl_return objCMethodDecl() throws RecognitionException {
        ObjCppParser.objCMethodDecl_return retval = new ObjCppParser.objCMethodDecl_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        Token tp=null;
        Token tm=null;
        Token tk=null;
        Token methodName=null;
        Token argName1=null;
        Token sel=null;
        Token argName=null;
        Token char_literal41=null;
        Token char_literal42=null;
        Token char_literal43=null;
        Token char_literal44=null;
        Token char_literal45=null;
        Token char_literal46=null;
        Token char_literal47=null;
        Token char_literal48=null;
        Token char_literal49=null;
        Token string_literal50=null;
        Token char_literal51=null;
        ObjCppParser.typeRef_return returnTypeRef = null;

        ObjCppParser.typeRef_return argType1 = null;

        ObjCppParser.typeRef_return argType = null;


        Object tp_tree=null;
        Object tm_tree=null;
        Object tk_tree=null;
        Object methodName_tree=null;
        Object argName1_tree=null;
        Object sel_tree=null;
        Object argName_tree=null;
        Object char_literal41_tree=null;
        Object char_literal42_tree=null;
        Object char_literal43_tree=null;
        Object char_literal44_tree=null;
        Object char_literal45_tree=null;
        Object char_literal46_tree=null;
        Object char_literal47_tree=null;
        Object char_literal48_tree=null;
        Object char_literal49_tree=null;
        Object string_literal50_tree=null;
        Object char_literal51_tree=null;

        try {
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:454:2: (tk= (tp= '+' | tm= '-' ) ( '(' (returnTypeRef= typeRef )? ')' )? methodName= IDENTIFIER ( ':' '(' argType1= typeRef ')' argName1= IDENTIFIER (sel= IDENTIFIER ':' '(' argType= typeRef ')' argName= IDENTIFIER )* ( ',' '...' )? )? ';' )
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:454:4: tk= (tp= '+' | tm= '-' ) ( '(' (returnTypeRef= typeRef )? ')' )? methodName= IDENTIFIER ( ':' '(' argType1= typeRef ')' argName1= IDENTIFIER (sel= IDENTIFIER ':' '(' argType= typeRef ')' argName= IDENTIFIER )* ( ',' '...' )? )? ';'
            {
            root_0 = (Object)adaptor.nil();

            if ( state.backtracking==0 ) {
               	
              			retval.function = new Function(); 
              			retval.function.setType(Function.Type.ObjCMethod);
              		
            }
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:458:6: (tp= '+' | tm= '-' )
            int alt23=2;
            int LA23_0 = input.LA(1);

            if ( (LA23_0==42) ) {
                alt23=1;
            }
            else if ( (LA23_0==43) ) {
                alt23=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 23, 0, input);

                throw nvae;
            }
            switch (alt23) {
                case 1 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:459:4: tp= '+'
                    {
                    tp=(Token)match(input,42,FOLLOW_42_in_objCMethodDecl950); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    tp_tree = (Object)adaptor.create(tp);
                    adaptor.addChild(root_0, tp_tree);
                    }
                    if ( state.backtracking==0 ) {
                       
                      				retval.function.addModifiers(Modifier.Static); 
                      				retval.function = mark(retval.function, getLine(tp)); 
                      				retval.function.setCommentBefore(getCommentBefore(tp.getTokenIndex()));
                      			
                    }

                    }
                    break;
                case 2 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:464:4: tm= '-'
                    {
                    tm=(Token)match(input,43,FOLLOW_43_in_objCMethodDecl962); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    tm_tree = (Object)adaptor.create(tm);
                    adaptor.addChild(root_0, tm_tree);
                    }
                    if ( state.backtracking==0 ) {

                      				retval.function = mark(retval.function, getLine(tm)); 
                      				retval.function.setCommentBefore(getCommentBefore(tm.getTokenIndex()));
                      			
                    }

                    }
                    break;

            }

            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:469:3: ( '(' (returnTypeRef= typeRef )? ')' )?
            int alt25=2;
            int LA25_0 = input.LA(1);

            if ( (LA25_0==34) ) {
                alt25=1;
            }
            switch (alt25) {
                case 1 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:471:4: '(' (returnTypeRef= typeRef )? ')'
                    {
                    char_literal41=(Token)match(input,34,FOLLOW_34_in_objCMethodDecl981); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal41_tree = (Object)adaptor.create(char_literal41);
                    adaptor.addChild(root_0, char_literal41_tree);
                    }
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:472:18: (returnTypeRef= typeRef )?
                    int alt24=2;
                    int LA24_0 = input.LA(1);

                    if ( (LA24_0==IDENTIFIER||LA24_0==30||(LA24_0>=45 && LA24_0<=47)||(LA24_0>=60 && LA24_0<=74)) ) {
                        alt24=1;
                    }
                    switch (alt24) {
                        case 1 :
                            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:0:0: returnTypeRef= typeRef
                            {
                            pushFollow(FOLLOW_typeRef_in_objCMethodDecl989);
                            returnTypeRef=typeRef();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, returnTypeRef.getTree());

                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {
                       
                      					retval.function.setValueType((returnTypeRef!=null?returnTypeRef.type:null)); 
                      				
                    }
                    char_literal42=(Token)match(input,35,FOLLOW_35_in_objCMethodDecl997); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal42_tree = (Object)adaptor.create(char_literal42);
                    adaptor.addChild(root_0, char_literal42_tree);
                    }

                    }
                    break;

            }

            methodName=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_objCMethodDecl1008); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            methodName_tree = (Object)adaptor.create(methodName);
            adaptor.addChild(root_0, methodName_tree);
            }
            if ( state.backtracking==0 ) {
               
              			retval.function.setName((methodName!=null?methodName.getText():null)); 
              			retval.function.setCommentAfter(getCommentAfterOnSameLine(methodName.getTokenIndex()));
              		
            }
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:481:3: ( ':' '(' argType1= typeRef ')' argName1= IDENTIFIER (sel= IDENTIFIER ':' '(' argType= typeRef ')' argName= IDENTIFIER )* ( ',' '...' )? )?
            int alt28=2;
            int LA28_0 = input.LA(1);

            if ( (LA28_0==33) ) {
                alt28=1;
            }
            switch (alt28) {
                case 1 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:482:4: ':' '(' argType1= typeRef ')' argName1= IDENTIFIER (sel= IDENTIFIER ':' '(' argType= typeRef ')' argName= IDENTIFIER )* ( ',' '...' )?
                    {
                    char_literal43=(Token)match(input,33,FOLLOW_33_in_objCMethodDecl1020); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal43_tree = (Object)adaptor.create(char_literal43);
                    adaptor.addChild(root_0, char_literal43_tree);
                    }
                    char_literal44=(Token)match(input,34,FOLLOW_34_in_objCMethodDecl1022); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal44_tree = (Object)adaptor.create(char_literal44);
                    adaptor.addChild(root_0, char_literal44_tree);
                    }
                    pushFollow(FOLLOW_typeRef_in_objCMethodDecl1026);
                    argType1=typeRef();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, argType1.getTree());
                    char_literal45=(Token)match(input,35,FOLLOW_35_in_objCMethodDecl1028); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal45_tree = (Object)adaptor.create(char_literal45);
                    adaptor.addChild(root_0, char_literal45_tree);
                    }
                    argName1=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_objCMethodDecl1032); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    argName1_tree = (Object)adaptor.create(argName1);
                    adaptor.addChild(root_0, argName1_tree);
                    }
                    if ( state.backtracking==0 ) {

                      				Arg arg = new Arg((argName1!=null?argName1.getText():null), (argType1!=null?argType1.type:null));
                      				arg.setSelector((methodName!=null?methodName.getText():null));
                      				retval.function.addArg(arg);
                      			
                    }
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:487:4: (sel= IDENTIFIER ':' '(' argType= typeRef ')' argName= IDENTIFIER )*
                    loop26:
                    do {
                        int alt26=2;
                        int LA26_0 = input.LA(1);

                        if ( (LA26_0==IDENTIFIER) ) {
                            alt26=1;
                        }


                        switch (alt26) {
                    	case 1 :
                    	    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:488:5: sel= IDENTIFIER ':' '(' argType= typeRef ')' argName= IDENTIFIER
                    	    {
                    	    sel=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_objCMethodDecl1047); if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) {
                    	    sel_tree = (Object)adaptor.create(sel);
                    	    adaptor.addChild(root_0, sel_tree);
                    	    }
                    	    char_literal46=(Token)match(input,33,FOLLOW_33_in_objCMethodDecl1049); if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) {
                    	    char_literal46_tree = (Object)adaptor.create(char_literal46);
                    	    adaptor.addChild(root_0, char_literal46_tree);
                    	    }
                    	    char_literal47=(Token)match(input,34,FOLLOW_34_in_objCMethodDecl1056); if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) {
                    	    char_literal47_tree = (Object)adaptor.create(char_literal47);
                    	    adaptor.addChild(root_0, char_literal47_tree);
                    	    }
                    	    pushFollow(FOLLOW_typeRef_in_objCMethodDecl1060);
                    	    argType=typeRef();

                    	    state._fsp--;
                    	    if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) adaptor.addChild(root_0, argType.getTree());
                    	    char_literal48=(Token)match(input,35,FOLLOW_35_in_objCMethodDecl1062); if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) {
                    	    char_literal48_tree = (Object)adaptor.create(char_literal48);
                    	    adaptor.addChild(root_0, char_literal48_tree);
                    	    }
                    	    argName=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_objCMethodDecl1071); if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) {
                    	    argName_tree = (Object)adaptor.create(argName);
                    	    adaptor.addChild(root_0, argName_tree);
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      					Arg arg = new Arg((argName!=null?argName.getText():null), (argType!=null?argType.type:null));
                    	      					arg.setSelector((sel!=null?sel.getText():null));
                    	      					retval.function.addArg(arg);
                    	      				
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop26;
                        }
                    } while (true);

                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:496:4: ( ',' '...' )?
                    int alt27=2;
                    int LA27_0 = input.LA(1);

                    if ( (LA27_0==27) ) {
                        alt27=1;
                    }
                    switch (alt27) {
                        case 1 :
                            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:497:5: ',' '...'
                            {
                            char_literal49=(Token)match(input,27,FOLLOW_27_in_objCMethodDecl1090); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            char_literal49_tree = (Object)adaptor.create(char_literal49);
                            adaptor.addChild(root_0, char_literal49_tree);
                            }
                            string_literal50=(Token)match(input,44,FOLLOW_44_in_objCMethodDecl1092); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            string_literal50_tree = (Object)adaptor.create(string_literal50);
                            adaptor.addChild(root_0, string_literal50_tree);
                            }
                            if ( state.backtracking==0 ) {

                              					retval.function.addArg(Arg.createVarArgs());
                              				
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            char_literal51=(Token)match(input,28,FOLLOW_28_in_objCMethodDecl1109); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal51_tree = (Object)adaptor.create(char_literal51);
            adaptor.addChild(root_0, char_literal51_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "objCMethodDecl"

    public static class structCore_return extends ParserRuleReturnScope {
        public Struct struct;
        public List<Modifier> modifiers;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "structCore"
    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:518:1: structCore returns [Struct struct, List<Modifier> modifiers] : t= ( 'struct' | 'class' | 'union' ) ( (n0= IDENTIFIER ) | ( ( exportationModifiers )? n1= IDENTIFIER )? '{' ( ( 'public' | 'private' | 'protected' ) ':' | declaration )* '}' ) ;
    public final ObjCppParser.structCore_return structCore() throws RecognitionException {
        ObjCppParser.structCore_return retval = new ObjCppParser.structCore_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        Token t=null;
        Token n0=null;
        Token n1=null;
        Token char_literal53=null;
        Token string_literal54=null;
        Token string_literal55=null;
        Token string_literal56=null;
        Token char_literal57=null;
        Token char_literal59=null;
        ObjCppParser.exportationModifiers_return exportationModifiers52 = null;

        ObjCppParser.declaration_return declaration58 = null;


        Object t_tree=null;
        Object n0_tree=null;
        Object n1_tree=null;
        Object char_literal53_tree=null;
        Object string_literal54_tree=null;
        Object string_literal55_tree=null;
        Object string_literal56_tree=null;
        Object char_literal57_tree=null;
        Object char_literal59_tree=null;

        try {
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:519:2: (t= ( 'struct' | 'class' | 'union' ) ( (n0= IDENTIFIER ) | ( ( exportationModifiers )? n1= IDENTIFIER )? '{' ( ( 'public' | 'private' | 'protected' ) ':' | declaration )* '}' ) )
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:521:3: t= ( 'struct' | 'class' | 'union' ) ( (n0= IDENTIFIER ) | ( ( exportationModifiers )? n1= IDENTIFIER )? '{' ( ( 'public' | 'private' | 'protected' ) ':' | declaration )* '}' )
            {
            root_0 = (Object)adaptor.nil();

            t=(Token)input.LT(1);
            if ( (input.LA(1)>=45 && input.LA(1)<=47) ) {
                input.consume();
                if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(t));
                state.errorRecovery=false;state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }

            if ( state.backtracking==0 ) {
               
              			retval.struct = mark(new Struct(), getLine(t)); 
              			retval.struct.setType(
              				(t!=null?t.getText():null).equals("struct") ?	Struct.Type.CStruct :
              				(t!=null?t.getText():null).equals("union") ?	Struct.Type.CUnion :
              							Struct.Type.CPPClass
              			);
              			retval.struct.setForwardDeclaration(true); // until proven wrong
              		
            }
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:530:3: ( (n0= IDENTIFIER ) | ( ( exportationModifiers )? n1= IDENTIFIER )? '{' ( ( 'public' | 'private' | 'protected' ) ':' | declaration )* '}' )
            int alt33=2;
            alt33 = dfa33.predict(input);
            switch (alt33) {
                case 1 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:531:4: (n0= IDENTIFIER )
                    {
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:531:4: (n0= IDENTIFIER )
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:532:5: n0= IDENTIFIER
                    {
                    n0=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_structCore1164); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    n0_tree = (Object)adaptor.create(n0);
                    adaptor.addChild(root_0, n0_tree);
                    }
                    if ( state.backtracking==0 ) {

                      					retval.struct.setTag((n0!=null?n0.getText():null));
                      					retval.struct.setForwardDeclaration(true);
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:537:4: ( ( exportationModifiers )? n1= IDENTIFIER )? '{' ( ( 'public' | 'private' | 'protected' ) ':' | declaration )* '}'
                    {
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:537:4: ( ( exportationModifiers )? n1= IDENTIFIER )?
                    int alt30=2;
                    int LA30_0 = input.LA(1);

                    if ( (LA30_0==IDENTIFIER) ) {
                        alt30=1;
                    }
                    switch (alt30) {
                        case 1 :
                            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:538:5: ( exportationModifiers )? n1= IDENTIFIER
                            {
                            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:538:5: ( exportationModifiers )?
                            int alt29=2;
                            int LA29_0 = input.LA(1);

                            if ( (LA29_0==IDENTIFIER) ) {
                                int LA29_1 = input.LA(2);

                                if ( (synpred44_ObjCpp()) ) {
                                    alt29=1;
                                }
                            }
                            switch (alt29) {
                                case 1 :
                                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:538:7: exportationModifiers
                                    {
                                    pushFollow(FOLLOW_exportationModifiers_in_structCore1187);
                                    exportationModifiers52=exportationModifiers();

                                    state._fsp--;
                                    if (state.failed) return retval;
                                    if ( state.backtracking==0 ) adaptor.addChild(root_0, exportationModifiers52.getTree());
                                    if ( state.backtracking==0 ) {

                                      					retval.struct.addModifiers((exportationModifiers52!=null?exportationModifiers52.modifiers:null));
                                      				
                                    }

                                    }
                                    break;

                            }

                            n1=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_structCore1200); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            n1_tree = (Object)adaptor.create(n1);
                            adaptor.addChild(root_0, n1_tree);
                            }
                            if ( state.backtracking==0 ) {
                               retval.struct.setTag((n1!=null?n1.getText():null)); 
                            }

                            }
                            break;

                    }

                    char_literal53=(Token)match(input,23,FOLLOW_23_in_structCore1214); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal53_tree = (Object)adaptor.create(char_literal53);
                    adaptor.addChild(root_0, char_literal53_tree);
                    }
                    if ( state.backtracking==0 ) {
                       retval.struct.setForwardDeclaration(false); 
                    }
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:544:5: ( ( 'public' | 'private' | 'protected' ) ':' | declaration )*
                    loop32:
                    do {
                        int alt32=3;
                        alt32 = dfa32.predict(input);
                        switch (alt32) {
                    	case 1 :
                    	    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:545:6: ( 'public' | 'private' | 'protected' ) ':'
                    	    {
                    	    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:545:6: ( 'public' | 'private' | 'protected' )
                    	    int alt31=3;
                    	    switch ( input.LA(1) ) {
                    	    case 48:
                    	        {
                    	        alt31=1;
                    	        }
                    	        break;
                    	    case 49:
                    	        {
                    	        alt31=2;
                    	        }
                    	        break;
                    	    case 50:
                    	        {
                    	        alt31=3;
                    	        }
                    	        break;
                    	    default:
                    	        if (state.backtracking>0) {state.failed=true; return retval;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 31, 0, input);

                    	        throw nvae;
                    	    }

                    	    switch (alt31) {
                    	        case 1 :
                    	            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:546:7: 'public'
                    	            {
                    	            string_literal54=(Token)match(input,48,FOLLOW_48_in_structCore1237); if (state.failed) return retval;
                    	            if ( state.backtracking==0 ) {
                    	            string_literal54_tree = (Object)adaptor.create(string_literal54);
                    	            adaptor.addChild(root_0, string_literal54_tree);
                    	            }
                    	            if ( state.backtracking==0 ) {
                    	               retval.struct.setNextMemberVisibility(Struct.MemberVisibility.Public); 
                    	            }

                    	            }
                    	            break;
                    	        case 2 :
                    	            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:547:7: 'private'
                    	            {
                    	            string_literal55=(Token)match(input,49,FOLLOW_49_in_structCore1250); if (state.failed) return retval;
                    	            if ( state.backtracking==0 ) {
                    	            string_literal55_tree = (Object)adaptor.create(string_literal55);
                    	            adaptor.addChild(root_0, string_literal55_tree);
                    	            }
                    	            if ( state.backtracking==0 ) {
                    	               retval.struct.setNextMemberVisibility(Struct.MemberVisibility.Private); 
                    	            }

                    	            }
                    	            break;
                    	        case 3 :
                    	            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:548:7: 'protected'
                    	            {
                    	            string_literal56=(Token)match(input,50,FOLLOW_50_in_structCore1263); if (state.failed) return retval;
                    	            if ( state.backtracking==0 ) {
                    	            string_literal56_tree = (Object)adaptor.create(string_literal56);
                    	            adaptor.addChild(root_0, string_literal56_tree);
                    	            }
                    	            if ( state.backtracking==0 ) {
                    	               retval.struct.setNextMemberVisibility(Struct.MemberVisibility.Protected); 
                    	            }

                    	            }
                    	            break;

                    	    }

                    	    char_literal57=(Token)match(input,33,FOLLOW_33_in_structCore1275); if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) {
                    	    char_literal57_tree = (Object)adaptor.create(char_literal57);
                    	    adaptor.addChild(root_0, char_literal57_tree);
                    	    }

                    	    }
                    	    break;
                    	case 2 :
                    	    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:550:6: declaration
                    	    {
                    	    pushFollow(FOLLOW_declaration_in_structCore1284);
                    	    declaration58=declaration();

                    	    state._fsp--;
                    	    if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) adaptor.addChild(root_0, declaration58.getTree());
                    	    if ( state.backtracking==0 ) {

                    	      						retval.struct.addDeclarations((declaration58!=null?declaration58.declarations:null));
                    	      					
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop32;
                        }
                    } while (true);

                    char_literal59=(Token)match(input,24,FOLLOW_24_in_structCore1298); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal59_tree = (Object)adaptor.create(char_literal59);
                    adaptor.addChild(root_0, char_literal59_tree);
                    }
                    if ( state.backtracking==0 ) {

                      				Function.Type forcedType = null;
                      				if (retval.struct.getType() == Struct.Type.CPPClass)
                      					forcedType = Function.Type.CppMethod;
                      				
                      				if (forcedType != null)
                      				for (Declaration d : retval.struct.getDeclarations()) {
                      					if (d instanceof Function)
                      						((Function)d).setType(forcedType);
                      				}
                      			
                    }

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "structCore"

    public static class functionDeclaration_return extends ParserRuleReturnScope {
        public Function function;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "functionDeclaration"
    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:569:1: functionDeclaration returns [Function function] : ({...}? IDENTIFIER STRING | )? preMods1= exportationModifiers (returnTypeRef= typeRef )? preMods2= exportationModifiers n= IDENTIFIER argList ({...}?ct= IDENTIFIER | ) postMods= exportationModifiers ( ';' | statementsBlock ) ;
    public final ObjCppParser.functionDeclaration_return functionDeclaration() throws RecognitionException {
        ObjCppParser.functionDeclaration_return retval = new ObjCppParser.functionDeclaration_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        Token n=null;
        Token ct=null;
        Token IDENTIFIER60=null;
        Token STRING61=null;
        Token char_literal63=null;
        ObjCppParser.exportationModifiers_return preMods1 = null;

        ObjCppParser.typeRef_return returnTypeRef = null;

        ObjCppParser.exportationModifiers_return preMods2 = null;

        ObjCppParser.exportationModifiers_return postMods = null;

        ObjCppParser.argList_return argList62 = null;

        ObjCppParser.statementsBlock_return statementsBlock64 = null;


        Object n_tree=null;
        Object ct_tree=null;
        Object IDENTIFIER60_tree=null;
        Object STRING61_tree=null;
        Object char_literal63_tree=null;

        try {
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:570:2: ( ({...}? IDENTIFIER STRING | )? preMods1= exportationModifiers (returnTypeRef= typeRef )? preMods2= exportationModifiers n= IDENTIFIER argList ({...}?ct= IDENTIFIER | ) postMods= exportationModifiers ( ';' | statementsBlock ) )
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:570:4: ({...}? IDENTIFIER STRING | )? preMods1= exportationModifiers (returnTypeRef= typeRef )? preMods2= exportationModifiers n= IDENTIFIER argList ({...}?ct= IDENTIFIER | ) postMods= exportationModifiers ( ';' | statementsBlock )
            {
            root_0 = (Object)adaptor.nil();

            if ( state.backtracking==0 ) {
               	
              			retval.function = mark(new Function(), -1);
              			retval.function.setType(Function.Type.CFunction);
              		
            }
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:577:3: ({...}? IDENTIFIER STRING | )?
            int alt34=3;
            alt34 = dfa34.predict(input);
            switch (alt34) {
                case 1 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:578:4: {...}? IDENTIFIER STRING
                    {
                    if ( !(( next("extern") )) ) {
                        if (state.backtracking>0) {state.failed=true; return retval;}
                        throw new FailedPredicateException(input, "functionDeclaration", " next(\"extern\") ");
                    }
                    IDENTIFIER60=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_functionDeclaration1337); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    IDENTIFIER60_tree = (Object)adaptor.create(IDENTIFIER60);
                    adaptor.addChild(root_0, IDENTIFIER60_tree);
                    }
                    STRING61=(Token)match(input,STRING,FOLLOW_STRING_in_functionDeclaration1339); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    STRING61_tree = (Object)adaptor.create(STRING61);
                    adaptor.addChild(root_0, STRING61_tree);
                    }
                    if ( state.backtracking==0 ) {
                       
                      				retval.function.addModifiers(Modifier.Extern); 
                      			
                    }

                    }
                    break;
                case 2 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:581:3: 
                    {
                    }
                    break;

            }

            pushFollow(FOLLOW_exportationModifiers_in_functionDeclaration1354);
            preMods1=exportationModifiers();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, preMods1.getTree());
            if ( state.backtracking==0 ) {

              			retval.function.addModifiers((preMods1!=null?preMods1.modifiers:null));
              		
            }
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:585:16: (returnTypeRef= typeRef )?
            int alt35=2;
            alt35 = dfa35.predict(input);
            switch (alt35) {
                case 1 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:0:0: returnTypeRef= typeRef
                    {
                    pushFollow(FOLLOW_typeRef_in_functionDeclaration1362);
                    returnTypeRef=typeRef();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, returnTypeRef.getTree());

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               
              			retval.function.setValueType((returnTypeRef!=null?returnTypeRef.type:null)); 
              		
            }
            pushFollow(FOLLOW_exportationModifiers_in_functionDeclaration1371);
            preMods2=exportationModifiers();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, preMods2.getTree());
            if ( state.backtracking==0 ) {

              			retval.function.addModifiers((preMods2!=null?preMods2.modifiers:null));
              		
            }
            n=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_functionDeclaration1379); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            n_tree = (Object)adaptor.create(n);
            adaptor.addChild(root_0, n_tree);
            }
            if ( state.backtracking==0 ) {
               
              			retval.function.setName((n!=null?n.getText():null)); 
              			retval.function = mark(retval.function, getLine(n));
              		
            }
            pushFollow(FOLLOW_argList_in_functionDeclaration1386);
            argList62=argList();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, argList62.getTree());
            if ( state.backtracking==0 ) {

              			retval.function.setArgs((argList62!=null?argList62.args:null));
              		
            }
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:598:3: ({...}?ct= IDENTIFIER | )
            int alt36=2;
            int LA36_0 = input.LA(1);

            if ( (LA36_0==IDENTIFIER) ) {
                int LA36_1 = input.LA(2);

                if ( ((synpred53_ObjCpp()&&( next("const", "__const") ))) ) {
                    alt36=1;
                }
                else if ( (true) ) {
                    alt36=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 36, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA36_0==23||LA36_0==28) ) {
                alt36=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 36, 0, input);

                throw nvae;
            }
            switch (alt36) {
                case 1 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:598:4: {...}?ct= IDENTIFIER
                    {
                    if ( !(( next("const", "__const") )) ) {
                        if (state.backtracking>0) {state.failed=true; return retval;}
                        throw new FailedPredicateException(input, "functionDeclaration", " next(\"const\", \"__const\") ");
                    }
                    ct=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_functionDeclaration1397); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    ct_tree = (Object)adaptor.create(ct);
                    adaptor.addChild(root_0, ct_tree);
                    }
                    if ( state.backtracking==0 ) {

                      			if ((ct!=null?ct.getText():null) != null)
                      				retval.function.addModifiers(Modifier.Const);
                      		
                    }

                    }
                    break;
                case 2 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:601:6: 
                    {
                    }
                    break;

            }

            pushFollow(FOLLOW_exportationModifiers_in_functionDeclaration1408);
            postMods=exportationModifiers();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, postMods.getTree());
            if ( state.backtracking==0 ) {

              			for (Modifier m : (postMods!=null?postMods.modifiers:null))
              				retval.function.addModifiers(m);
              		
            }
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:606:3: ( ';' | statementsBlock )
            int alt37=2;
            int LA37_0 = input.LA(1);

            if ( (LA37_0==28) ) {
                alt37=1;
            }
            else if ( (LA37_0==23) ) {
                alt37=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 37, 0, input);

                throw nvae;
            }
            switch (alt37) {
                case 1 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:607:4: ';'
                    {
                    char_literal63=(Token)match(input,28,FOLLOW_28_in_functionDeclaration1420); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal63_tree = (Object)adaptor.create(char_literal63);
                    adaptor.addChild(root_0, char_literal63_tree);
                    }

                    }
                    break;
                case 2 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:608:4: statementsBlock
                    {
                    pushFollow(FOLLOW_statementsBlock_in_functionDeclaration1427);
                    statementsBlock64=statementsBlock();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, statementsBlock64.getTree());
                    if ( state.backtracking==0 ) {

                      				
                      			
                    }

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "functionDeclaration"

    public static class exportationModifiers_return extends ParserRuleReturnScope {
        public List<Modifier> modifiers;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "exportationModifiers"
    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:614:1: exportationModifiers returns [List<Modifier> modifiers] : ( exportationModifier )* ;
    public final ObjCppParser.exportationModifiers_return exportationModifiers() throws RecognitionException {
        ObjCppParser.exportationModifiers_return retval = new ObjCppParser.exportationModifiers_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        ObjCppParser.exportationModifier_return exportationModifier65 = null;



        try {
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:615:2: ( ( exportationModifier )* )
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:615:5: ( exportationModifier )*
            {
            root_0 = (Object)adaptor.nil();

            if ( state.backtracking==0 ) {
               retval.modifiers = new ArrayList<Modifier>(); 
            }
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:616:3: ( exportationModifier )*
            loop38:
            do {
                int alt38=2;
                alt38 = dfa38.predict(input);
                switch (alt38) {
            	case 1 :
            	    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:617:4: exportationModifier
            	    {
            	    pushFollow(FOLLOW_exportationModifier_in_exportationModifiers1460);
            	    exportationModifier65=exportationModifier();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, exportationModifier65.getTree());
            	    if ( state.backtracking==0 ) {
            	       
            	      				retval.modifiers.addAll((exportationModifier65!=null?exportationModifier65.modifiers:null)); 
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop38;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "exportationModifiers"

    public static class modifier_return extends ParserRuleReturnScope {
        public Modifier modifier;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "modifier"
    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:623:1: modifier returns [Modifier modifier] : {...}? IDENTIFIER ;
    public final ObjCppParser.modifier_return modifier() throws RecognitionException {
        ObjCppParser.modifier_return retval = new ObjCppParser.modifier_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        Token IDENTIFIER66=null;

        Object IDENTIFIER66_tree=null;

        try {
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:624:2: ({...}? IDENTIFIER )
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:624:4: {...}? IDENTIFIER
            {
            root_0 = (Object)adaptor.nil();

            if ( !(( Modifier.parseModifier(next()) != null )) ) {
                if (state.backtracking>0) {state.failed=true; return retval;}
                throw new FailedPredicateException(input, "modifier", " Modifier.parseModifier(next()) != null ");
            }
            IDENTIFIER66=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_modifier1487); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IDENTIFIER66_tree = (Object)adaptor.create(IDENTIFIER66);
            adaptor.addChild(root_0, IDENTIFIER66_tree);
            }
            if ( state.backtracking==0 ) {

              			retval.modifier = Modifier.parseModifier((IDENTIFIER66!=null?IDENTIFIER66.getText():null));
              		
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "modifier"

    public static class exportationModifier_return extends ParserRuleReturnScope {
        public List<Modifier> modifiers;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "exportationModifier"
    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:637:1: exportationModifier returns [List<Modifier> modifiers] : ({...}? modifier | IDENTIFIER {...}? '(' extendedModifiers ')' ) ;
    public final ObjCppParser.exportationModifier_return exportationModifier() throws RecognitionException {
        ObjCppParser.exportationModifier_return retval = new ObjCppParser.exportationModifier_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        Token IDENTIFIER68=null;
        Token char_literal69=null;
        Token char_literal71=null;
        ObjCppParser.modifier_return modifier67 = null;

        ObjCppParser.extendedModifiers_return extendedModifiers70 = null;


        Object IDENTIFIER68_tree=null;
        Object char_literal69_tree=null;
        Object char_literal71_tree=null;

        try {
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:638:2: ( ({...}? modifier | IDENTIFIER {...}? '(' extendedModifiers ')' ) )
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:638:5: ({...}? modifier | IDENTIFIER {...}? '(' extendedModifiers ')' )
            {
            root_0 = (Object)adaptor.nil();

            if ( state.backtracking==0 ) {
               retval.modifiers = new ArrayList<Modifier>(); 
            }
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:639:3: ({...}? modifier | IDENTIFIER {...}? '(' extendedModifiers ')' )
            int alt39=2;
            alt39 = dfa39.predict(input);
            switch (alt39) {
                case 1 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:640:4: {...}? modifier
                    {
                    if ( !(( next(Modifier.Kind.Plain) )) ) {
                        if (state.backtracking>0) {state.failed=true; return retval;}
                        throw new FailedPredicateException(input, "exportationModifier", " next(Modifier.Kind.Plain) ");
                    }
                    pushFollow(FOLLOW_modifier_in_exportationModifier1519);
                    modifier67=modifier();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, modifier67.getTree());
                    if ( state.backtracking==0 ) {

                      				retval.modifiers.add((modifier67!=null?modifier67.modifier:null));
                      			
                    }

                    }
                    break;
                case 2 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:643:4: IDENTIFIER {...}? '(' extendedModifiers ')'
                    {
                    IDENTIFIER68=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_exportationModifier1528); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    IDENTIFIER68_tree = (Object)adaptor.create(IDENTIFIER68);
                    adaptor.addChild(root_0, IDENTIFIER68_tree);
                    }
                    if ( !(( (IDENTIFIER68!=null?IDENTIFIER68.getText():null).equals("__declspec") || (IDENTIFIER68!=null?IDENTIFIER68.getText():null).equals("__attribute__") )) ) {
                        if (state.backtracking>0) {state.failed=true; return retval;}
                        throw new FailedPredicateException(input, "exportationModifier", " $IDENTIFIER.text.equals(\"__declspec\") || $IDENTIFIER.text.equals(\"__attribute__\") ");
                    }
                    char_literal69=(Token)match(input,34,FOLLOW_34_in_exportationModifier1536); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal69_tree = (Object)adaptor.create(char_literal69);
                    adaptor.addChild(root_0, char_literal69_tree);
                    }
                    pushFollow(FOLLOW_extendedModifiers_in_exportationModifier1538);
                    extendedModifiers70=extendedModifiers();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, extendedModifiers70.getTree());
                    char_literal71=(Token)match(input,35,FOLLOW_35_in_exportationModifier1540); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal71_tree = (Object)adaptor.create(char_literal71);
                    adaptor.addChild(root_0, char_literal71_tree);
                    }
                    if ( state.backtracking==0 ) {

                      					retval.modifiers.addAll((extendedModifiers70!=null?extendedModifiers70.modifiers:null));
                      			
                    }

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "exportationModifier"

    public static class extendedModifiers_return extends ParserRuleReturnScope {
        public List<Modifier> modifiers;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "extendedModifiers"
    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:651:1: extendedModifiers returns [List<Modifier> modifiers] : ({...}?m= modifier () )* ;
    public final ObjCppParser.extendedModifiers_return extendedModifiers() throws RecognitionException {
        ObjCppParser.extendedModifiers_return retval = new ObjCppParser.extendedModifiers_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        ObjCppParser.modifier_return m = null;



        try {
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:652:2: ( ({...}?m= modifier () )* )
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:652:4: ({...}?m= modifier () )*
            {
            root_0 = (Object)adaptor.nil();

            if ( state.backtracking==0 ) {
               retval.modifiers = new ArrayList<Modifier>(); 
            }
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:653:3: ({...}?m= modifier () )*
            loop40:
            do {
                int alt40=2;
                int LA40_0 = input.LA(1);

                if ( (LA40_0==IDENTIFIER) ) {
                    alt40=1;
                }


                switch (alt40) {
            	case 1 :
            	    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:654:4: {...}?m= modifier ()
            	    {
            	    if ( !(( next(Modifier.Kind.Extended) )) ) {
            	        if (state.backtracking>0) {state.failed=true; return retval;}
            	        throw new FailedPredicateException(input, "extendedModifiers", " next(Modifier.Kind.Extended) ");
            	    }
            	    pushFollow(FOLLOW_modifier_in_extendedModifiers1575);
            	    m=modifier();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, m.getTree());
            	    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:655:4: ()
            	    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:656:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					retval.modifiers.add((m!=null?m.modifier:null));
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop40;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "extendedModifiers"

    public static class argDef_return extends ParserRuleReturnScope {
        public Arg arg;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "argDef"
    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:666:1: argDef returns [Arg arg] : ( ({...}?sm= modifier | {...}?tm= modifier )* ( typeRef ) ( ( declarator )? ) ( '=' expression )? | '...' );
    public final ObjCppParser.argDef_return argDef() throws RecognitionException {
        ObjCppParser.argDef_return retval = new ObjCppParser.argDef_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        Token char_literal74=null;
        Token string_literal76=null;
        ObjCppParser.modifier_return sm = null;

        ObjCppParser.modifier_return tm = null;

        ObjCppParser.typeRef_return typeRef72 = null;

        ObjCppParser.declarator_return declarator73 = null;

        ObjCppParser.expression_return expression75 = null;


        Object char_literal74_tree=null;
        Object string_literal76_tree=null;


        	List<Modifier> stoMods = new ArrayList<Modifier>(), typMods = new ArrayList<Modifier>();

        try {
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:670:2: ( ({...}?sm= modifier | {...}?tm= modifier )* ( typeRef ) ( ( declarator )? ) ( '=' expression )? | '...' )
            int alt44=2;
            int LA44_0 = input.LA(1);

            if ( (LA44_0==IDENTIFIER||LA44_0==30||(LA44_0>=45 && LA44_0<=47)||(LA44_0>=60 && LA44_0<=74)) ) {
                alt44=1;
            }
            else if ( (LA44_0==44) ) {
                alt44=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 44, 0, input);

                throw nvae;
            }
            switch (alt44) {
                case 1 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:670:4: ({...}?sm= modifier | {...}?tm= modifier )* ( typeRef ) ( ( declarator )? ) ( '=' expression )?
                    {
                    root_0 = (Object)adaptor.nil();

                    if ( state.backtracking==0 ) {
                       
                      			retval.arg = new Arg(); 
                      			int i = getTokenStream().index() + 1;
                      			retval.arg.setCommentBefore(getCommentBefore(i));
                      			retval.arg.setCommentAfter(getCommentAfterOnSameLine(i));
                      		
                    }
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:676:3: ({...}?sm= modifier | {...}?tm= modifier )*
                    loop41:
                    do {
                        int alt41=3;
                        alt41 = dfa41.predict(input);
                        switch (alt41) {
                    	case 1 :
                    	    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:677:4: {...}?sm= modifier
                    	    {
                    	    if ( !(( next(Modifier.Kind.StorageClassSpecifier) )) ) {
                    	        if (state.backtracking>0) {state.failed=true; return retval;}
                    	        throw new FailedPredicateException(input, "argDef", " next(Modifier.Kind.StorageClassSpecifier) ");
                    	    }
                    	    pushFollow(FOLLOW_modifier_in_argDef1634);
                    	    sm=modifier();

                    	    state._fsp--;
                    	    if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) adaptor.addChild(root_0, sm.getTree());
                    	    if ( state.backtracking==0 ) {
                    	       stoMods.add((sm!=null?sm.modifier:null)); 
                    	    }

                    	    }
                    	    break;
                    	case 2 :
                    	    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:679:4: {...}?tm= modifier
                    	    {
                    	    if ( !(( next(Modifier.Kind.TypeQualifier) )) ) {
                    	        if (state.backtracking>0) {state.failed=true; return retval;}
                    	        throw new FailedPredicateException(input, "argDef", " next(Modifier.Kind.TypeQualifier) ");
                    	    }
                    	    pushFollow(FOLLOW_modifier_in_argDef1651);
                    	    tm=modifier();

                    	    state._fsp--;
                    	    if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) adaptor.addChild(root_0, tm.getTree());
                    	    if ( state.backtracking==0 ) {
                    	       typMods.add((tm!=null?tm.modifier:null)); 
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop41;
                        }
                    } while (true);

                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:682:3: ( typeRef )
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:685:4: typeRef
                    {
                    pushFollow(FOLLOW_typeRef_in_argDef1675);
                    typeRef72=typeRef();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, typeRef72.getTree());
                    if ( state.backtracking==0 ) {
                       
                      				if ((typeRef72!=null?typeRef72.type:null) != null) {
                      					(typeRef72!=null?typeRef72.type:null).addModifiers(typMods);
                      					(typeRef72!=null?typeRef72.type:null).addModifiers(stoMods);
                      					retval.arg.setValueType((typeRef72!=null?typeRef72.type:null)); 
                      				}
                      			
                    }

                    }

                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:693:3: ( ( declarator )? )
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:694:4: ( declarator )?
                    {
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:694:4: ( declarator )?
                    int alt42=2;
                    int LA42_0 = input.LA(1);

                    if ( (LA42_0==IDENTIFIER||LA42_0==34||(LA42_0>=51 && LA42_0<=52)||LA42_0==58) ) {
                        alt42=1;
                    }
                    switch (alt42) {
                        case 1 :
                            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:0:0: declarator
                            {
                            pushFollow(FOLLOW_declarator_in_argDef1690);
                            declarator73=declarator();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, declarator73.getTree());

                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {
                       
                      				if ((declarator73!=null?declarator73.declarator:null) != null)
                      					retval.arg.setDeclarator((declarator73!=null?declarator73.declarator:null)); 
                      				else if (retval.arg.getValueType() instanceof FunctionSignature) {
                      					FunctionSignature fs = (FunctionSignature)retval.arg.getValueType();
                      					if (fs != null && fs.getFunction() != null) {
                      						retval.arg.setName(fs.getFunction().getName());
                      						fs.getFunction().setName(null);
                      					}
                      				}
                      			
                    }

                    }

                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:725:3: ( '=' expression )?
                    int alt43=2;
                    int LA43_0 = input.LA(1);

                    if ( (LA43_0==29) ) {
                        alt43=1;
                    }
                    switch (alt43) {
                        case 1 :
                            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:725:4: '=' expression
                            {
                            char_literal74=(Token)match(input,29,FOLLOW_29_in_argDef1710); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            char_literal74_tree = (Object)adaptor.create(char_literal74);
                            adaptor.addChild(root_0, char_literal74_tree);
                            }
                            pushFollow(FOLLOW_expression_in_argDef1712);
                            expression75=expression();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression75.getTree());
                            if ( state.backtracking==0 ) {

                              			retval.arg.setDefaultValue((expression75!=null?expression75.expr:null));
                              		
                            }

                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:729:3: '...'
                    {
                    root_0 = (Object)adaptor.nil();

                    string_literal76=(Token)match(input,44,FOLLOW_44_in_argDef1726); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal76_tree = (Object)adaptor.create(string_literal76);
                    adaptor.addChild(root_0, string_literal76_tree);
                    }
                    if ( state.backtracking==0 ) {
                       
                      			retval.arg = Arg.createVarArgs(); 
                      		
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "argDef"

    public static class typeMutator_return extends ParserRuleReturnScope {
        public TypeMutator mutator;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "typeMutator"
    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:747:1: typeMutator returns [TypeMutator mutator] : ({...}? IDENTIFIER '*' | '*' | '&' | '[' ']' );
    public final ObjCppParser.typeMutator_return typeMutator() throws RecognitionException {
        ObjCppParser.typeMutator_return retval = new ObjCppParser.typeMutator_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        Token IDENTIFIER77=null;
        Token char_literal78=null;
        Token char_literal79=null;
        Token char_literal80=null;
        Token char_literal81=null;
        Token char_literal82=null;

        Object IDENTIFIER77_tree=null;
        Object char_literal78_tree=null;
        Object char_literal79_tree=null;
        Object char_literal80_tree=null;
        Object char_literal81_tree=null;
        Object char_literal82_tree=null;

        try {
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:748:2: ({...}? IDENTIFIER '*' | '*' | '&' | '[' ']' )
            int alt45=4;
            switch ( input.LA(1) ) {
            case IDENTIFIER:
                {
                alt45=1;
                }
                break;
            case 51:
                {
                alt45=2;
                }
                break;
            case 52:
                {
                alt45=3;
                }
                break;
            case 53:
                {
                alt45=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 45, 0, input);

                throw nvae;
            }

            switch (alt45) {
                case 1 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:748:4: {...}? IDENTIFIER '*'
                    {
                    root_0 = (Object)adaptor.nil();

                    if ( !(( next("const", "__const") )) ) {
                        if (state.backtracking>0) {state.failed=true; return retval;}
                        throw new FailedPredicateException(input, "typeMutator", " next(\"const\", \"__const\") ");
                    }
                    IDENTIFIER77=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_typeMutator1746); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    IDENTIFIER77_tree = (Object)adaptor.create(IDENTIFIER77);
                    adaptor.addChild(root_0, IDENTIFIER77_tree);
                    }
                    char_literal78=(Token)match(input,51,FOLLOW_51_in_typeMutator1748); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal78_tree = (Object)adaptor.create(char_literal78);
                    adaptor.addChild(root_0, char_literal78_tree);
                    }
                    if ( state.backtracking==0 ) {
                       retval.mutator = TypeMutator.CONST_STAR; 
                    }

                    }
                    break;
                case 2 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:749:3: '*'
                    {
                    root_0 = (Object)adaptor.nil();

                    char_literal79=(Token)match(input,51,FOLLOW_51_in_typeMutator1756); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal79_tree = (Object)adaptor.create(char_literal79);
                    adaptor.addChild(root_0, char_literal79_tree);
                    }
                    if ( state.backtracking==0 ) {
                       retval.mutator = TypeMutator.STAR; 
                    }

                    }
                    break;
                case 3 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:750:3: '&'
                    {
                    root_0 = (Object)adaptor.nil();

                    char_literal80=(Token)match(input,52,FOLLOW_52_in_typeMutator1764); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal80_tree = (Object)adaptor.create(char_literal80);
                    adaptor.addChild(root_0, char_literal80_tree);
                    }
                    if ( state.backtracking==0 ) {
                       retval.mutator = TypeMutator.AMPERSTAND; 
                    }

                    }
                    break;
                case 4 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:751:3: '[' ']'
                    {
                    root_0 = (Object)adaptor.nil();

                    char_literal81=(Token)match(input,53,FOLLOW_53_in_typeMutator1773); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal81_tree = (Object)adaptor.create(char_literal81);
                    adaptor.addChild(root_0, char_literal81_tree);
                    }
                    char_literal82=(Token)match(input,54,FOLLOW_54_in_typeMutator1775); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal82_tree = (Object)adaptor.create(char_literal82);
                    adaptor.addChild(root_0, char_literal82_tree);
                    }
                    if ( state.backtracking==0 ) {
                       retval.mutator = TypeMutator.BRACKETS; 
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "typeMutator"

    public static class arrayTypeMutator_return extends ParserRuleReturnScope {
        public TypeMutator mutator;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "arrayTypeMutator"
    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:754:1: arrayTypeMutator returns [TypeMutator mutator] : '[' expression ']' ;
    public final ObjCppParser.arrayTypeMutator_return arrayTypeMutator() throws RecognitionException {
        ObjCppParser.arrayTypeMutator_return retval = new ObjCppParser.arrayTypeMutator_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        Token char_literal83=null;
        Token char_literal85=null;
        ObjCppParser.expression_return expression84 = null;


        Object char_literal83_tree=null;
        Object char_literal85_tree=null;

        try {
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:755:2: ( '[' expression ']' )
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:755:4: '[' expression ']'
            {
            root_0 = (Object)adaptor.nil();

            char_literal83=(Token)match(input,53,FOLLOW_53_in_arrayTypeMutator1793); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal83_tree = (Object)adaptor.create(char_literal83);
            adaptor.addChild(root_0, char_literal83_tree);
            }
            pushFollow(FOLLOW_expression_in_arrayTypeMutator1799);
            expression84=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression84.getTree());
            if ( state.backtracking==0 ) {

              				retval.mutator = TypeMutator.array((expression84!=null?expression84.expr:null)); 
              			
            }
            char_literal85=(Token)match(input,54,FOLLOW_54_in_arrayTypeMutator1808); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal85_tree = (Object)adaptor.create(char_literal85);
            adaptor.addChild(root_0, char_literal85_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "arrayTypeMutator"

    public static class typeRefCore_return extends ParserRuleReturnScope {
        public TypeRef type;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "typeRefCore"
    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:762:1: typeRefCore returns [TypeRef type] : ({...}? IDENTIFIER '(' 'return' binaryOp expression ')' | {...}?m1a= modifier '(' expression ')' | {...}?m2a= modifier '(' expression ',' expression ')' )? ({...}?m= modifier )? ({...}?m1= modifier tr= typeRef | ( primitiveTypeRef | {...}?ref= IDENTIFIER ( | '<' (t1= typeRef ( ',' tx= typeRef )* )? '>' ) ) ) ;
    public final ObjCppParser.typeRefCore_return typeRefCore() throws RecognitionException {
        ObjCppParser.typeRefCore_return retval = new ObjCppParser.typeRefCore_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        Token ref=null;
        Token IDENTIFIER86=null;
        Token char_literal87=null;
        Token string_literal88=null;
        Token char_literal91=null;
        Token char_literal92=null;
        Token char_literal94=null;
        Token char_literal95=null;
        Token char_literal97=null;
        Token char_literal99=null;
        Token char_literal101=null;
        Token char_literal102=null;
        Token char_literal103=null;
        ObjCppParser.modifier_return m1a = null;

        ObjCppParser.modifier_return m2a = null;

        ObjCppParser.modifier_return m = null;

        ObjCppParser.modifier_return m1 = null;

        ObjCppParser.typeRef_return tr = null;

        ObjCppParser.typeRef_return t1 = null;

        ObjCppParser.typeRef_return tx = null;

        ObjCppParser.binaryOp_return binaryOp89 = null;

        ObjCppParser.expression_return expression90 = null;

        ObjCppParser.expression_return expression93 = null;

        ObjCppParser.expression_return expression96 = null;

        ObjCppParser.expression_return expression98 = null;

        ObjCppParser.primitiveTypeRef_return primitiveTypeRef100 = null;


        Object ref_tree=null;
        Object IDENTIFIER86_tree=null;
        Object char_literal87_tree=null;
        Object string_literal88_tree=null;
        Object char_literal91_tree=null;
        Object char_literal92_tree=null;
        Object char_literal94_tree=null;
        Object char_literal95_tree=null;
        Object char_literal97_tree=null;
        Object char_literal99_tree=null;
        Object char_literal101_tree=null;
        Object char_literal102_tree=null;
        Object char_literal103_tree=null;

         List<Modifier> mods = new ArrayList<Modifier>(); 
        try {
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:764:2: ( ({...}? IDENTIFIER '(' 'return' binaryOp expression ')' | {...}?m1a= modifier '(' expression ')' | {...}?m2a= modifier '(' expression ',' expression ')' )? ({...}?m= modifier )? ({...}?m1= modifier tr= typeRef | ( primitiveTypeRef | {...}?ref= IDENTIFIER ( | '<' (t1= typeRef ( ',' tx= typeRef )* )? '>' ) ) ) )
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:765:3: ({...}? IDENTIFIER '(' 'return' binaryOp expression ')' | {...}?m1a= modifier '(' expression ')' | {...}?m2a= modifier '(' expression ',' expression ')' )? ({...}?m= modifier )? ({...}?m1= modifier tr= typeRef | ( primitiveTypeRef | {...}?ref= IDENTIFIER ( | '<' (t1= typeRef ( ',' tx= typeRef )* )? '>' ) ) )
            {
            root_0 = (Object)adaptor.nil();

            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:765:3: ({...}? IDENTIFIER '(' 'return' binaryOp expression ')' | {...}?m1a= modifier '(' expression ')' | {...}?m2a= modifier '(' expression ',' expression ')' )?
            int alt46=4;
            alt46 = dfa46.predict(input);
            switch (alt46) {
                case 1 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:768:4: {...}? IDENTIFIER '(' 'return' binaryOp expression ')'
                    {
                    if ( !(( "__success".equals(next()) )) ) {
                        if (state.backtracking>0) {state.failed=true; return retval;}
                        throw new FailedPredicateException(input, "typeRefCore", " \"__success\".equals(next()) ");
                    }
                    IDENTIFIER86=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_typeRefCore1848); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    IDENTIFIER86_tree = (Object)adaptor.create(IDENTIFIER86);
                    adaptor.addChild(root_0, IDENTIFIER86_tree);
                    }
                    char_literal87=(Token)match(input,34,FOLLOW_34_in_typeRefCore1851); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal87_tree = (Object)adaptor.create(char_literal87);
                    adaptor.addChild(root_0, char_literal87_tree);
                    }
                    string_literal88=(Token)match(input,55,FOLLOW_55_in_typeRefCore1853); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal88_tree = (Object)adaptor.create(string_literal88);
                    adaptor.addChild(root_0, string_literal88_tree);
                    }
                    pushFollow(FOLLOW_binaryOp_in_typeRefCore1855);
                    binaryOp89=binaryOp();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, binaryOp89.getTree());
                    pushFollow(FOLLOW_expression_in_typeRefCore1857);
                    expression90=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression90.getTree());
                    char_literal91=(Token)match(input,35,FOLLOW_35_in_typeRefCore1859); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal91_tree = (Object)adaptor.create(char_literal91);
                    adaptor.addChild(root_0, char_literal91_tree);
                    }

                    }
                    break;
                case 2 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:769:4: {...}?m1a= modifier '(' expression ')'
                    {
                    if ( !(( next(Modifier.Kind.VCAnnotation1Arg) )) ) {
                        if (state.backtracking>0) {state.failed=true; return retval;}
                        throw new FailedPredicateException(input, "typeRefCore", " next(Modifier.Kind.VCAnnotation1Arg) ");
                    }
                    pushFollow(FOLLOW_modifier_in_typeRefCore1870);
                    m1a=modifier();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, m1a.getTree());
                    char_literal92=(Token)match(input,34,FOLLOW_34_in_typeRefCore1873); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal92_tree = (Object)adaptor.create(char_literal92);
                    adaptor.addChild(root_0, char_literal92_tree);
                    }
                    pushFollow(FOLLOW_expression_in_typeRefCore1875);
                    expression93=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression93.getTree());
                    char_literal94=(Token)match(input,35,FOLLOW_35_in_typeRefCore1877); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal94_tree = (Object)adaptor.create(char_literal94);
                    adaptor.addChild(root_0, char_literal94_tree);
                    }
                    if ( state.backtracking==0 ) {
                       mods.add((m1a!=null?m1a.modifier:null)); 
                    }

                    }
                    break;
                case 3 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:770:4: {...}?m2a= modifier '(' expression ',' expression ')'
                    {
                    if ( !(( next(Modifier.Kind.VCAnnotation2Args) )) ) {
                        if (state.backtracking>0) {state.failed=true; return retval;}
                        throw new FailedPredicateException(input, "typeRefCore", " next(Modifier.Kind.VCAnnotation2Args) ");
                    }
                    pushFollow(FOLLOW_modifier_in_typeRefCore1890);
                    m2a=modifier();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, m2a.getTree());
                    char_literal95=(Token)match(input,34,FOLLOW_34_in_typeRefCore1893); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal95_tree = (Object)adaptor.create(char_literal95);
                    adaptor.addChild(root_0, char_literal95_tree);
                    }
                    pushFollow(FOLLOW_expression_in_typeRefCore1895);
                    expression96=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression96.getTree());
                    char_literal97=(Token)match(input,27,FOLLOW_27_in_typeRefCore1897); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal97_tree = (Object)adaptor.create(char_literal97);
                    adaptor.addChild(root_0, char_literal97_tree);
                    }
                    pushFollow(FOLLOW_expression_in_typeRefCore1899);
                    expression98=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression98.getTree());
                    char_literal99=(Token)match(input,35,FOLLOW_35_in_typeRefCore1901); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal99_tree = (Object)adaptor.create(char_literal99);
                    adaptor.addChild(root_0, char_literal99_tree);
                    }
                    if ( state.backtracking==0 ) {
                       mods.add((m2a!=null?m2a.modifier:null)); 
                    }

                    }
                    break;

            }

            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:772:3: ({...}?m= modifier )?
            int alt47=2;
            alt47 = dfa47.predict(input);
            switch (alt47) {
                case 1 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:772:4: {...}?m= modifier
                    {
                    if ( !(( next(Modifier.Kind.TypeQualifier, Modifier.Kind.VCAnnotationNoArg) )) ) {
                        if (state.backtracking>0) {state.failed=true; return retval;}
                        throw new FailedPredicateException(input, "typeRefCore", " next(Modifier.Kind.TypeQualifier, Modifier.Kind.VCAnnotationNoArg) ");
                    }
                    pushFollow(FOLLOW_modifier_in_typeRefCore1918);
                    m=modifier();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, m.getTree());
                    if ( state.backtracking==0 ) {
                       mods.add((m!=null?m.modifier:null)); 
                    }

                    }
                    break;

            }

            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:773:3: ({...}?m1= modifier tr= typeRef | ( primitiveTypeRef | {...}?ref= IDENTIFIER ( | '<' (t1= typeRef ( ',' tx= typeRef )* )? '>' ) ) )
            int alt52=2;
            alt52 = dfa52.predict(input);
            switch (alt52) {
                case 1 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:774:4: {...}?m1= modifier tr= typeRef
                    {
                    if ( !(( next(Modifier.Kind.ReferenceQualifier) )) ) {
                        if (state.backtracking>0) {state.failed=true; return retval;}
                        throw new FailedPredicateException(input, "typeRefCore", " next(Modifier.Kind.ReferenceQualifier) ");
                    }
                    pushFollow(FOLLOW_modifier_in_typeRefCore1935);
                    m1=modifier();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, m1.getTree());
                    if ( state.backtracking==0 ) {
                       mods.add((m1!=null?m1.modifier:null)); 
                    }
                    pushFollow(FOLLOW_typeRef_in_typeRefCore1944);
                    tr=typeRef();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, tr.getTree());
                    if ( state.backtracking==0 ) {
                       retval.type = (tr!=null?tr.type:null); 
                    }

                    }
                    break;
                case 2 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:777:4: ( primitiveTypeRef | {...}?ref= IDENTIFIER ( | '<' (t1= typeRef ( ',' tx= typeRef )* )? '>' ) )
                    {
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:777:4: ( primitiveTypeRef | {...}?ref= IDENTIFIER ( | '<' (t1= typeRef ( ',' tx= typeRef )* )? '>' ) )
                    int alt51=2;
                    int LA51_0 = input.LA(1);

                    if ( ((LA51_0>=60 && LA51_0<=74)) ) {
                        alt51=1;
                    }
                    else if ( (LA51_0==IDENTIFIER) ) {
                        alt51=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 51, 0, input);

                        throw nvae;
                    }
                    switch (alt51) {
                        case 1 :
                            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:778:5: primitiveTypeRef
                            {
                            pushFollow(FOLLOW_primitiveTypeRef_in_typeRefCore1964);
                            primitiveTypeRef100=primitiveTypeRef();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, primitiveTypeRef100.getTree());
                            if ( state.backtracking==0 ) {
                               retval.type = (primitiveTypeRef100!=null?primitiveTypeRef100.type:null); 
                            }

                            }
                            break;
                        case 2 :
                            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:779:5: {...}?ref= IDENTIFIER ( | '<' (t1= typeRef ( ',' tx= typeRef )* )? '>' )
                            {
                            if ( !(( Modifier.parseModifier(next()) == null )) ) {
                                if (state.backtracking>0) {state.failed=true; return retval;}
                                throw new FailedPredicateException(input, "typeRefCore", " Modifier.parseModifier(next()) == null ");
                            }
                            ref=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_typeRefCore1979); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            ref_tree = (Object)adaptor.create(ref);
                            adaptor.addChild(root_0, ref_tree);
                            }
                            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:779:64: ( | '<' (t1= typeRef ( ',' tx= typeRef )* )? '>' )
                            int alt50=2;
                            alt50 = dfa50.predict(input);
                            switch (alt50) {
                                case 1 :
                                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:780:6: 
                                    {
                                    if ( state.backtracking==0 ) {
                                       retval.type = new SimpleTypeRef((ref!=null?ref.getText():null)); 
                                    }

                                    }
                                    break;
                                case 2 :
                                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:781:6: '<' (t1= typeRef ( ',' tx= typeRef )* )? '>'
                                    {
                                    char_literal101=(Token)match(input,36,FOLLOW_36_in_typeRefCore1997); if (state.failed) return retval;
                                    if ( state.backtracking==0 ) {
                                    char_literal101_tree = (Object)adaptor.create(char_literal101);
                                    adaptor.addChild(root_0, char_literal101_tree);
                                    }
                                    if ( state.backtracking==0 ) {
                                       retval.type = new TemplateRef((ref!=null?ref.getText():null)); 
                                    }
                                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:782:7: (t1= typeRef ( ',' tx= typeRef )* )?
                                    int alt49=2;
                                    int LA49_0 = input.LA(1);

                                    if ( (LA49_0==IDENTIFIER||LA49_0==30||(LA49_0>=45 && LA49_0<=47)||(LA49_0>=60 && LA49_0<=74)) ) {
                                        alt49=1;
                                    }
                                    switch (alt49) {
                                        case 1 :
                                            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:783:8: t1= typeRef ( ',' tx= typeRef )*
                                            {
                                            pushFollow(FOLLOW_typeRef_in_typeRefCore2018);
                                            t1=typeRef();

                                            state._fsp--;
                                            if (state.failed) return retval;
                                            if ( state.backtracking==0 ) adaptor.addChild(root_0, t1.getTree());
                                            if ( state.backtracking==0 ) {
                                               ((TemplateRef)retval.type).addParameter((t1!=null?t1.type:null)); 
                                            }
                                            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:784:8: ( ',' tx= typeRef )*
                                            loop48:
                                            do {
                                                int alt48=2;
                                                int LA48_0 = input.LA(1);

                                                if ( (LA48_0==27) ) {
                                                    alt48=1;
                                                }


                                                switch (alt48) {
                                            	case 1 :
                                            	    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:785:9: ',' tx= typeRef
                                            	    {
                                            	    char_literal102=(Token)match(input,27,FOLLOW_27_in_typeRefCore2039); if (state.failed) return retval;
                                            	    if ( state.backtracking==0 ) {
                                            	    char_literal102_tree = (Object)adaptor.create(char_literal102);
                                            	    adaptor.addChild(root_0, char_literal102_tree);
                                            	    }
                                            	    pushFollow(FOLLOW_typeRef_in_typeRefCore2052);
                                            	    tx=typeRef();

                                            	    state._fsp--;
                                            	    if (state.failed) return retval;
                                            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, tx.getTree());
                                            	    if ( state.backtracking==0 ) {
                                            	       ((TemplateRef)retval.type).addParameter((tx!=null?tx.type:null)); 
                                            	    }

                                            	    }
                                            	    break;

                                            	default :
                                            	    break loop48;
                                                }
                                            } while (true);


                                            }
                                            break;

                                    }

                                    char_literal103=(Token)match(input,37,FOLLOW_37_in_typeRefCore2080); if (state.failed) return retval;
                                    if ( state.backtracking==0 ) {
                                    char_literal103_tree = (Object)adaptor.create(char_literal103);
                                    adaptor.addChild(root_0, char_literal103_tree);
                                    }

                                    }
                                    break;

                            }

                            if ( state.backtracking==0 ) {

                              					retval.type = mark(retval.type, getLine(ref));
                              				
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               
              			if (retval.type != null)
              				retval.type.addModifiers(mods); 
              		
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "typeRefCore"

    public static class templateDef_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "templateDef"
    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:800:1: templateDef : ( 'template' '<' ( templateArgDecl ( ',' templateArgDecl )* )? '>' structCore | functionDeclaration );
    public final ObjCppParser.templateDef_return templateDef() throws RecognitionException {
        ObjCppParser.templateDef_return retval = new ObjCppParser.templateDef_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        Token string_literal104=null;
        Token char_literal105=null;
        Token char_literal107=null;
        Token char_literal109=null;
        ObjCppParser.templateArgDecl_return templateArgDecl106 = null;

        ObjCppParser.templateArgDecl_return templateArgDecl108 = null;

        ObjCppParser.structCore_return structCore110 = null;

        ObjCppParser.functionDeclaration_return functionDeclaration111 = null;


        Object string_literal104_tree=null;
        Object char_literal105_tree=null;
        Object char_literal107_tree=null;
        Object char_literal109_tree=null;

        try {
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:801:2: ( 'template' '<' ( templateArgDecl ( ',' templateArgDecl )* )? '>' structCore | functionDeclaration )
            int alt55=2;
            int LA55_0 = input.LA(1);

            if ( (LA55_0==56) ) {
                alt55=1;
            }
            else if ( (LA55_0==IDENTIFIER||LA55_0==30||(LA55_0>=45 && LA55_0<=47)||(LA55_0>=60 && LA55_0<=74)) ) {
                alt55=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 55, 0, input);

                throw nvae;
            }
            switch (alt55) {
                case 1 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:801:4: 'template' '<' ( templateArgDecl ( ',' templateArgDecl )* )? '>' structCore
                    {
                    root_0 = (Object)adaptor.nil();

                    string_literal104=(Token)match(input,56,FOLLOW_56_in_templateDef2112); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal104_tree = (Object)adaptor.create(string_literal104);
                    adaptor.addChild(root_0, string_literal104_tree);
                    }
                    char_literal105=(Token)match(input,36,FOLLOW_36_in_templateDef2114); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal105_tree = (Object)adaptor.create(char_literal105);
                    adaptor.addChild(root_0, char_literal105_tree);
                    }
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:801:19: ( templateArgDecl ( ',' templateArgDecl )* )?
                    int alt54=2;
                    int LA54_0 = input.LA(1);

                    if ( (LA54_0==46||LA54_0==57||(LA54_0>=60 && LA54_0<=74)) ) {
                        alt54=1;
                    }
                    switch (alt54) {
                        case 1 :
                            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:801:20: templateArgDecl ( ',' templateArgDecl )*
                            {
                            pushFollow(FOLLOW_templateArgDecl_in_templateDef2117);
                            templateArgDecl106=templateArgDecl();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, templateArgDecl106.getTree());
                            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:801:36: ( ',' templateArgDecl )*
                            loop53:
                            do {
                                int alt53=2;
                                int LA53_0 = input.LA(1);

                                if ( (LA53_0==27) ) {
                                    alt53=1;
                                }


                                switch (alt53) {
                            	case 1 :
                            	    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:801:37: ',' templateArgDecl
                            	    {
                            	    char_literal107=(Token)match(input,27,FOLLOW_27_in_templateDef2120); if (state.failed) return retval;
                            	    if ( state.backtracking==0 ) {
                            	    char_literal107_tree = (Object)adaptor.create(char_literal107);
                            	    adaptor.addChild(root_0, char_literal107_tree);
                            	    }
                            	    pushFollow(FOLLOW_templateArgDecl_in_templateDef2122);
                            	    templateArgDecl108=templateArgDecl();

                            	    state._fsp--;
                            	    if (state.failed) return retval;
                            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, templateArgDecl108.getTree());

                            	    }
                            	    break;

                            	default :
                            	    break loop53;
                                }
                            } while (true);


                            }
                            break;

                    }

                    char_literal109=(Token)match(input,37,FOLLOW_37_in_templateDef2129); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal109_tree = (Object)adaptor.create(char_literal109);
                    adaptor.addChild(root_0, char_literal109_tree);
                    }
                    pushFollow(FOLLOW_structCore_in_templateDef2133);
                    structCore110=structCore();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, structCore110.getTree());

                    }
                    break;
                case 2 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:802:16: functionDeclaration
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_functionDeclaration_in_templateDef2137);
                    functionDeclaration111=functionDeclaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, functionDeclaration111.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "templateDef"

    public static class templateArgDecl_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "templateArgDecl"
    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:805:1: templateArgDecl : ( primitiveTypeRef ( '=' constant ) | ( 'typename' | 'class' ) IDENTIFIER ( '=' typeRef ) );
    public final ObjCppParser.templateArgDecl_return templateArgDecl() throws RecognitionException {
        ObjCppParser.templateArgDecl_return retval = new ObjCppParser.templateArgDecl_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        Token char_literal113=null;
        Token set115=null;
        Token IDENTIFIER116=null;
        Token char_literal117=null;
        ObjCppParser.primitiveTypeRef_return primitiveTypeRef112 = null;

        ObjCppParser.constant_return constant114 = null;

        ObjCppParser.typeRef_return typeRef118 = null;


        Object char_literal113_tree=null;
        Object set115_tree=null;
        Object IDENTIFIER116_tree=null;
        Object char_literal117_tree=null;

        try {
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:806:2: ( primitiveTypeRef ( '=' constant ) | ( 'typename' | 'class' ) IDENTIFIER ( '=' typeRef ) )
            int alt56=2;
            int LA56_0 = input.LA(1);

            if ( ((LA56_0>=60 && LA56_0<=74)) ) {
                alt56=1;
            }
            else if ( (LA56_0==46||LA56_0==57) ) {
                alt56=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 56, 0, input);

                throw nvae;
            }
            switch (alt56) {
                case 1 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:806:4: primitiveTypeRef ( '=' constant )
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_primitiveTypeRef_in_templateArgDecl2149);
                    primitiveTypeRef112=primitiveTypeRef();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, primitiveTypeRef112.getTree());
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:806:21: ( '=' constant )
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:806:22: '=' constant
                    {
                    char_literal113=(Token)match(input,29,FOLLOW_29_in_templateArgDecl2152); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal113_tree = (Object)adaptor.create(char_literal113);
                    adaptor.addChild(root_0, char_literal113_tree);
                    }
                    pushFollow(FOLLOW_constant_in_templateArgDecl2154);
                    constant114=constant();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, constant114.getTree());

                    }


                    }
                    break;
                case 2 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:807:3: ( 'typename' | 'class' ) IDENTIFIER ( '=' typeRef )
                    {
                    root_0 = (Object)adaptor.nil();

                    set115=(Token)input.LT(1);
                    if ( input.LA(1)==46||input.LA(1)==57 ) {
                        input.consume();
                        if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set115));
                        state.errorRecovery=false;state.failed=false;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return retval;}
                        MismatchedSetException mse = new MismatchedSetException(null,input);
                        throw mse;
                    }

                    IDENTIFIER116=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_templateArgDecl2169); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    IDENTIFIER116_tree = (Object)adaptor.create(IDENTIFIER116);
                    adaptor.addChild(root_0, IDENTIFIER116_tree);
                    }
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:807:37: ( '=' typeRef )
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:807:38: '=' typeRef
                    {
                    char_literal117=(Token)match(input,29,FOLLOW_29_in_templateArgDecl2172); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal117_tree = (Object)adaptor.create(char_literal117);
                    adaptor.addChild(root_0, char_literal117_tree);
                    }
                    pushFollow(FOLLOW_typeRef_in_templateArgDecl2174);
                    typeRef118=typeRef();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, typeRef118.getTree());

                    }


                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "templateArgDecl"

    public static class functionSignatureSuffix_return extends ParserRuleReturnScope {
        public FunctionSignature signature;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "functionSignatureSuffix"
    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:810:1: functionSignatureSuffix returns [FunctionSignature signature] : tk= '(' exportationModifiers '*' ( IDENTIFIER )? ')' '(' (a1= argDef ( ',' ax= argDef )* )? ')' ;
    public final ObjCppParser.functionSignatureSuffix_return functionSignatureSuffix() throws RecognitionException {
        ObjCppParser.functionSignatureSuffix_return retval = new ObjCppParser.functionSignatureSuffix_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        Token tk=null;
        Token char_literal120=null;
        Token IDENTIFIER121=null;
        Token char_literal122=null;
        Token char_literal123=null;
        Token char_literal124=null;
        Token char_literal125=null;
        ObjCppParser.argDef_return a1 = null;

        ObjCppParser.argDef_return ax = null;

        ObjCppParser.exportationModifiers_return exportationModifiers119 = null;


        Object tk_tree=null;
        Object char_literal120_tree=null;
        Object IDENTIFIER121_tree=null;
        Object char_literal122_tree=null;
        Object char_literal123_tree=null;
        Object char_literal124_tree=null;
        Object char_literal125_tree=null;

        try {
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:811:2: (tk= '(' exportationModifiers '*' ( IDENTIFIER )? ')' '(' (a1= argDef ( ',' ax= argDef )* )? ')' )
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:811:4: tk= '(' exportationModifiers '*' ( IDENTIFIER )? ')' '(' (a1= argDef ( ',' ax= argDef )* )? ')'
            {
            root_0 = (Object)adaptor.nil();

            tk=(Token)match(input,34,FOLLOW_34_in_functionSignatureSuffix2193); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            tk_tree = (Object)adaptor.create(tk);
            adaptor.addChild(root_0, tk_tree);
            }
            pushFollow(FOLLOW_exportationModifiers_in_functionSignatureSuffix2195);
            exportationModifiers119=exportationModifiers();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, exportationModifiers119.getTree());
            char_literal120=(Token)match(input,51,FOLLOW_51_in_functionSignatureSuffix2197); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal120_tree = (Object)adaptor.create(char_literal120);
            adaptor.addChild(root_0, char_literal120_tree);
            }
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:811:36: ( IDENTIFIER )?
            int alt57=2;
            int LA57_0 = input.LA(1);

            if ( (LA57_0==IDENTIFIER) ) {
                alt57=1;
            }
            switch (alt57) {
                case 1 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:0:0: IDENTIFIER
                    {
                    IDENTIFIER121=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_functionSignatureSuffix2199); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    IDENTIFIER121_tree = (Object)adaptor.create(IDENTIFIER121);
                    adaptor.addChild(root_0, IDENTIFIER121_tree);
                    }

                    }
                    break;

            }

            char_literal122=(Token)match(input,35,FOLLOW_35_in_functionSignatureSuffix2202); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal122_tree = (Object)adaptor.create(char_literal122);
            adaptor.addChild(root_0, char_literal122_tree);
            }
            if ( state.backtracking==0 ) {
               
              			retval.signature = mark(new FunctionSignature(new Function(Function.Type.CFunction, (IDENTIFIER121!=null?IDENTIFIER121.getText():null), null)), getLine(tk));
              			retval.signature.getFunction().setType(Function.Type.CFunction);
              			retval.signature.getFunction().addModifiers((exportationModifiers119!=null?exportationModifiers119.modifiers:null));
              		
            }
            char_literal123=(Token)match(input,34,FOLLOW_34_in_functionSignatureSuffix2208); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal123_tree = (Object)adaptor.create(char_literal123);
            adaptor.addChild(root_0, char_literal123_tree);
            }
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:816:7: (a1= argDef ( ',' ax= argDef )* )?
            int alt59=2;
            int LA59_0 = input.LA(1);

            if ( (LA59_0==IDENTIFIER||LA59_0==30||(LA59_0>=44 && LA59_0<=47)||(LA59_0>=60 && LA59_0<=74)) ) {
                alt59=1;
            }
            switch (alt59) {
                case 1 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:817:4: a1= argDef ( ',' ax= argDef )*
                    {
                    pushFollow(FOLLOW_argDef_in_functionSignatureSuffix2217);
                    a1=argDef();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, a1.getTree());
                    if ( state.backtracking==0 ) {
                       
                      				if (!(a1!=null?input.toString(a1.start,a1.stop):null).equals("void"))
                      					((FunctionSignature)retval.signature).getFunction().addArg((a1!=null?a1.arg:null)); 
                      			
                    }
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:821:4: ( ',' ax= argDef )*
                    loop58:
                    do {
                        int alt58=2;
                        int LA58_0 = input.LA(1);

                        if ( (LA58_0==27) ) {
                            alt58=1;
                        }


                        switch (alt58) {
                    	case 1 :
                    	    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:822:5: ',' ax= argDef
                    	    {
                    	    char_literal124=(Token)match(input,27,FOLLOW_27_in_functionSignatureSuffix2230); if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) {
                    	    char_literal124_tree = (Object)adaptor.create(char_literal124);
                    	    adaptor.addChild(root_0, char_literal124_tree);
                    	    }
                    	    pushFollow(FOLLOW_argDef_in_functionSignatureSuffix2239);
                    	    ax=argDef();

                    	    state._fsp--;
                    	    if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) adaptor.addChild(root_0, ax.getTree());
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      					((FunctionSignature)retval.signature).getFunction().addArg((ax!=null?ax.arg:null)); 
                    	      				
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop58;
                        }
                    } while (true);


                    }
                    break;

            }

            char_literal125=(Token)match(input,35,FOLLOW_35_in_functionSignatureSuffix2254); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal125_tree = (Object)adaptor.create(char_literal125);
            adaptor.addChild(root_0, char_literal125_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "functionSignatureSuffix"

    public static class functionSignatureSuffixNoName_return extends ParserRuleReturnScope {
        public FunctionSignature signature;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "functionSignatureSuffixNoName"
    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:830:1: functionSignatureSuffixNoName returns [FunctionSignature signature] : tk= '(' exportationModifiers '*' ')' '(' (a1= argDef ( ',' ax= argDef )* )? ')' ;
    public final ObjCppParser.functionSignatureSuffixNoName_return functionSignatureSuffixNoName() throws RecognitionException {
        ObjCppParser.functionSignatureSuffixNoName_return retval = new ObjCppParser.functionSignatureSuffixNoName_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        Token tk=null;
        Token char_literal127=null;
        Token char_literal128=null;
        Token char_literal129=null;
        Token char_literal130=null;
        Token char_literal131=null;
        ObjCppParser.argDef_return a1 = null;

        ObjCppParser.argDef_return ax = null;

        ObjCppParser.exportationModifiers_return exportationModifiers126 = null;


        Object tk_tree=null;
        Object char_literal127_tree=null;
        Object char_literal128_tree=null;
        Object char_literal129_tree=null;
        Object char_literal130_tree=null;
        Object char_literal131_tree=null;

        try {
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:831:2: (tk= '(' exportationModifiers '*' ')' '(' (a1= argDef ( ',' ax= argDef )* )? ')' )
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:831:4: tk= '(' exportationModifiers '*' ')' '(' (a1= argDef ( ',' ax= argDef )* )? ')'
            {
            root_0 = (Object)adaptor.nil();

            tk=(Token)match(input,34,FOLLOW_34_in_functionSignatureSuffixNoName2271); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            tk_tree = (Object)adaptor.create(tk);
            adaptor.addChild(root_0, tk_tree);
            }
            pushFollow(FOLLOW_exportationModifiers_in_functionSignatureSuffixNoName2273);
            exportationModifiers126=exportationModifiers();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, exportationModifiers126.getTree());
            char_literal127=(Token)match(input,51,FOLLOW_51_in_functionSignatureSuffixNoName2275); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal127_tree = (Object)adaptor.create(char_literal127);
            adaptor.addChild(root_0, char_literal127_tree);
            }
            char_literal128=(Token)match(input,35,FOLLOW_35_in_functionSignatureSuffixNoName2277); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal128_tree = (Object)adaptor.create(char_literal128);
            adaptor.addChild(root_0, char_literal128_tree);
            }
            if ( state.backtracking==0 ) {
               
              			retval.signature = mark(new FunctionSignature(new Function(Function.Type.CFunction, null, null)), getLine(tk));
              			retval.signature.getFunction().setType(Function.Type.CFunction);
              			retval.signature.getFunction().addModifiers((exportationModifiers126!=null?exportationModifiers126.modifiers:null));
              		
            }
            char_literal129=(Token)match(input,34,FOLLOW_34_in_functionSignatureSuffixNoName2283); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal129_tree = (Object)adaptor.create(char_literal129);
            adaptor.addChild(root_0, char_literal129_tree);
            }
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:836:7: (a1= argDef ( ',' ax= argDef )* )?
            int alt61=2;
            int LA61_0 = input.LA(1);

            if ( (LA61_0==IDENTIFIER||LA61_0==30||(LA61_0>=44 && LA61_0<=47)||(LA61_0>=60 && LA61_0<=74)) ) {
                alt61=1;
            }
            switch (alt61) {
                case 1 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:837:4: a1= argDef ( ',' ax= argDef )*
                    {
                    pushFollow(FOLLOW_argDef_in_functionSignatureSuffixNoName2292);
                    a1=argDef();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, a1.getTree());
                    if ( state.backtracking==0 ) {
                       
                      				if (!(a1!=null?input.toString(a1.start,a1.stop):null).equals("void"))
                      					((FunctionSignature)retval.signature).getFunction().addArg((a1!=null?a1.arg:null)); 
                      			
                    }
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:841:4: ( ',' ax= argDef )*
                    loop60:
                    do {
                        int alt60=2;
                        int LA60_0 = input.LA(1);

                        if ( (LA60_0==27) ) {
                            alt60=1;
                        }


                        switch (alt60) {
                    	case 1 :
                    	    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:842:5: ',' ax= argDef
                    	    {
                    	    char_literal130=(Token)match(input,27,FOLLOW_27_in_functionSignatureSuffixNoName2305); if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) {
                    	    char_literal130_tree = (Object)adaptor.create(char_literal130);
                    	    adaptor.addChild(root_0, char_literal130_tree);
                    	    }
                    	    pushFollow(FOLLOW_argDef_in_functionSignatureSuffixNoName2314);
                    	    ax=argDef();

                    	    state._fsp--;
                    	    if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) adaptor.addChild(root_0, ax.getTree());
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      					((FunctionSignature)retval.signature).getFunction().addArg((ax!=null?ax.arg:null)); 
                    	      				
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop60;
                        }
                    } while (true);


                    }
                    break;

            }

            char_literal131=(Token)match(input,35,FOLLOW_35_in_functionSignatureSuffixNoName2329); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal131_tree = (Object)adaptor.create(char_literal131);
            adaptor.addChild(root_0, char_literal131_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "functionSignatureSuffixNoName"

    public static class structOrEnum_return extends ParserRuleReturnScope {
        public TypeRef type;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "structOrEnum"
    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:850:1: structOrEnum returns [TypeRef type] : ( structCore | enumCore );
    public final ObjCppParser.structOrEnum_return structOrEnum() throws RecognitionException {
        ObjCppParser.structOrEnum_return retval = new ObjCppParser.structOrEnum_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        ObjCppParser.structCore_return structCore132 = null;

        ObjCppParser.enumCore_return enumCore133 = null;



        try {
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:851:2: ( structCore | enumCore )
            int alt62=2;
            int LA62_0 = input.LA(1);

            if ( ((LA62_0>=45 && LA62_0<=47)) ) {
                alt62=1;
            }
            else if ( (LA62_0==30) ) {
                alt62=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 62, 0, input);

                throw nvae;
            }
            switch (alt62) {
                case 1 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:852:3: structCore
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_structCore_in_structOrEnum2347);
                    structCore132=structCore();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, structCore132.getTree());
                    if ( state.backtracking==0 ) {
                       retval.type = (structCore132!=null?structCore132.struct:null); 
                    }

                    }
                    break;
                case 2 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:853:3: enumCore
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_enumCore_in_structOrEnum2355);
                    enumCore133=enumCore();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, enumCore133.getTree());
                    if ( state.backtracking==0 ) {
                       retval.type = (enumCore133!=null?enumCore133.e:null); 
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "structOrEnum"

    public static class typeRefCoreOrFuncSig_return extends ParserRuleReturnScope {
        public TypeRef type;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "typeRefCoreOrFuncSig"
    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:856:1: typeRefCoreOrFuncSig returns [TypeRef type] : typeRefCore ( ( typeMutator )* functionSignatureSuffix )? ;
    public final ObjCppParser.typeRefCoreOrFuncSig_return typeRefCoreOrFuncSig() throws RecognitionException {
        ObjCppParser.typeRefCoreOrFuncSig_return retval = new ObjCppParser.typeRefCoreOrFuncSig_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        ObjCppParser.typeRefCore_return typeRefCore134 = null;

        ObjCppParser.typeMutator_return typeMutator135 = null;

        ObjCppParser.functionSignatureSuffix_return functionSignatureSuffix136 = null;



        try {
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:857:2: ( typeRefCore ( ( typeMutator )* functionSignatureSuffix )? )
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:857:4: typeRefCore ( ( typeMutator )* functionSignatureSuffix )?
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_typeRefCore_in_typeRefCoreOrFuncSig2373);
            typeRefCore134=typeRefCore();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, typeRefCore134.getTree());
            if ( state.backtracking==0 ) {
               retval.type = (typeRefCore134!=null?typeRefCore134.type:null); 
            }
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:858:3: ( ( typeMutator )* functionSignatureSuffix )?
            int alt64=2;
            alt64 = dfa64.predict(input);
            switch (alt64) {
                case 1 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:859:4: ( typeMutator )* functionSignatureSuffix
                    {
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:859:4: ( typeMutator )*
                    loop63:
                    do {
                        int alt63=2;
                        int LA63_0 = input.LA(1);

                        if ( (LA63_0==IDENTIFIER||(LA63_0>=51 && LA63_0<=53)) ) {
                            alt63=1;
                        }


                        switch (alt63) {
                    	case 1 :
                    	    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:860:5: typeMutator
                    	    {
                    	    pushFollow(FOLLOW_typeMutator_in_typeRefCoreOrFuncSig2390);
                    	    typeMutator135=typeMutator();

                    	    state._fsp--;
                    	    if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) adaptor.addChild(root_0, typeMutator135.getTree());
                    	    if ( state.backtracking==0 ) {

                    	      					retval.type = (typeMutator135!=null?typeMutator135.mutator:null).mutateType(retval.type);
                    	      				
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop63;
                        }
                    } while (true);

                    pushFollow(FOLLOW_functionSignatureSuffix_in_typeRefCoreOrFuncSig2403);
                    functionSignatureSuffix136=functionSignatureSuffix();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, functionSignatureSuffix136.getTree());
                    if ( state.backtracking==0 ) {
                       
                      				(functionSignatureSuffix136!=null?functionSignatureSuffix136.signature:null).getFunction().setValueType(retval.type); 
                      				retval.type = (functionSignatureSuffix136!=null?functionSignatureSuffix136.signature:null);
                      			
                    }

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "typeRefCoreOrFuncSig"

    public static class typeRefCoreOrAnonymousFuncSig_return extends ParserRuleReturnScope {
        public TypeRef type;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "typeRefCoreOrAnonymousFuncSig"
    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:871:1: typeRefCoreOrAnonymousFuncSig returns [TypeRef type] : typeRefCore ( ( typeMutator )* functionSignatureSuffixNoName )? ;
    public final ObjCppParser.typeRefCoreOrAnonymousFuncSig_return typeRefCoreOrAnonymousFuncSig() throws RecognitionException {
        ObjCppParser.typeRefCoreOrAnonymousFuncSig_return retval = new ObjCppParser.typeRefCoreOrAnonymousFuncSig_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        ObjCppParser.typeRefCore_return typeRefCore137 = null;

        ObjCppParser.typeMutator_return typeMutator138 = null;

        ObjCppParser.functionSignatureSuffixNoName_return functionSignatureSuffixNoName139 = null;



        try {
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:872:2: ( typeRefCore ( ( typeMutator )* functionSignatureSuffixNoName )? )
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:872:4: typeRefCore ( ( typeMutator )* functionSignatureSuffixNoName )?
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_typeRefCore_in_typeRefCoreOrAnonymousFuncSig2427);
            typeRefCore137=typeRefCore();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, typeRefCore137.getTree());
            if ( state.backtracking==0 ) {
               retval.type = (typeRefCore137!=null?typeRefCore137.type:null); 
            }
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:873:3: ( ( typeMutator )* functionSignatureSuffixNoName )?
            int alt66=2;
            alt66 = dfa66.predict(input);
            switch (alt66) {
                case 1 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:874:4: ( typeMutator )* functionSignatureSuffixNoName
                    {
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:874:4: ( typeMutator )*
                    loop65:
                    do {
                        int alt65=2;
                        int LA65_0 = input.LA(1);

                        if ( (LA65_0==IDENTIFIER||(LA65_0>=51 && LA65_0<=53)) ) {
                            alt65=1;
                        }


                        switch (alt65) {
                    	case 1 :
                    	    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:875:5: typeMutator
                    	    {
                    	    pushFollow(FOLLOW_typeMutator_in_typeRefCoreOrAnonymousFuncSig2444);
                    	    typeMutator138=typeMutator();

                    	    state._fsp--;
                    	    if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) adaptor.addChild(root_0, typeMutator138.getTree());
                    	    if ( state.backtracking==0 ) {

                    	      					retval.type = (typeMutator138!=null?typeMutator138.mutator:null).mutateType(retval.type);
                    	      				
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop65;
                        }
                    } while (true);

                    pushFollow(FOLLOW_functionSignatureSuffixNoName_in_typeRefCoreOrAnonymousFuncSig2457);
                    functionSignatureSuffixNoName139=functionSignatureSuffixNoName();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, functionSignatureSuffixNoName139.getTree());
                    if ( state.backtracking==0 ) {
                       
                      				(functionSignatureSuffixNoName139!=null?functionSignatureSuffixNoName139.signature:null).getFunction().setValueType(retval.type); 
                      				retval.type = (functionSignatureSuffixNoName139!=null?functionSignatureSuffixNoName139.signature:null);
                      			
                    }

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "typeRefCoreOrAnonymousFuncSig"

    public static class plainTypeRef_return extends ParserRuleReturnScope {
        public TypeRef type;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "plainTypeRef"
    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:886:1: plainTypeRef returns [TypeRef type] : ( structOrEnum | typeRefCoreOrFuncSig );
    public final ObjCppParser.plainTypeRef_return plainTypeRef() throws RecognitionException {
        ObjCppParser.plainTypeRef_return retval = new ObjCppParser.plainTypeRef_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        ObjCppParser.structOrEnum_return structOrEnum140 = null;

        ObjCppParser.typeRefCoreOrFuncSig_return typeRefCoreOrFuncSig141 = null;



        try {
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:887:2: ( structOrEnum | typeRefCoreOrFuncSig )
            int alt67=2;
            int LA67_0 = input.LA(1);

            if ( (LA67_0==30||(LA67_0>=45 && LA67_0<=47)) ) {
                alt67=1;
            }
            else if ( (LA67_0==IDENTIFIER||(LA67_0>=60 && LA67_0<=74)) ) {
                alt67=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 67, 0, input);

                throw nvae;
            }
            switch (alt67) {
                case 1 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:888:3: structOrEnum
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_structOrEnum_in_plainTypeRef2484);
                    structOrEnum140=structOrEnum();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, structOrEnum140.getTree());
                    if ( state.backtracking==0 ) {
                       retval.type = (structOrEnum140!=null?structOrEnum140.type:null); 
                    }

                    }
                    break;
                case 2 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:889:3: typeRefCoreOrFuncSig
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_typeRefCoreOrFuncSig_in_plainTypeRef2492);
                    typeRefCoreOrFuncSig141=typeRefCoreOrFuncSig();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, typeRefCoreOrFuncSig141.getTree());
                    if ( state.backtracking==0 ) {
                       retval.type = (typeRefCoreOrFuncSig141!=null?typeRefCoreOrFuncSig141.type:null); 
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "plainTypeRef"

    public static class declarator_return extends ParserRuleReturnScope {
        public Declarator declarator;
        public List<Modifier> modifiers;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "declarator"
    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:892:1: declarator returns [Declarator declarator, List<Modifier> modifiers] : ({...}? modifier )* ( ( (pt= ( '*' | '&' | '^' ) inner= declarator ) | directDeclarator ) ( '=' expression )? ) ;
    public final ObjCppParser.declarator_return declarator() throws RecognitionException {
        ObjCppParser.declarator_return retval = new ObjCppParser.declarator_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        Token pt=null;
        Token char_literal144=null;
        ObjCppParser.declarator_return inner = null;

        ObjCppParser.modifier_return modifier142 = null;

        ObjCppParser.directDeclarator_return directDeclarator143 = null;

        ObjCppParser.expression_return expression145 = null;


        Object pt_tree=null;
        Object char_literal144_tree=null;

        try {
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:893:2: ( ({...}? modifier )* ( ( (pt= ( '*' | '&' | '^' ) inner= declarator ) | directDeclarator ) ( '=' expression )? ) )
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:893:4: ({...}? modifier )* ( ( (pt= ( '*' | '&' | '^' ) inner= declarator ) | directDeclarator ) ( '=' expression )? )
            {
            root_0 = (Object)adaptor.nil();

            if ( state.backtracking==0 ) {
               retval.modifiers = new ArrayList<Modifier>(); 
            }
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:894:3: ({...}? modifier )*
            loop68:
            do {
                int alt68=2;
                alt68 = dfa68.predict(input);
                switch (alt68) {
            	case 1 :
            	    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:895:4: {...}? modifier
            	    {
            	    if ( !(( next(Modifier.Kind.TypeQualifier) )) ) {
            	        if (state.backtracking>0) {state.failed=true; return retval;}
            	        throw new FailedPredicateException(input, "declarator", " next(Modifier.Kind.TypeQualifier) ");
            	    }
            	    pushFollow(FOLLOW_modifier_in_declarator2521);
            	    modifier142=modifier();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, modifier142.getTree());
            	    if ( state.backtracking==0 ) {

            	      				retval.modifiers.add((modifier142!=null?modifier142.modifier:null));
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop68;
                }
            } while (true);

            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:902:3: ( ( (pt= ( '*' | '&' | '^' ) inner= declarator ) | directDeclarator ) ( '=' expression )? )
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:903:4: ( (pt= ( '*' | '&' | '^' ) inner= declarator ) | directDeclarator ) ( '=' expression )?
            {
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:903:4: ( (pt= ( '*' | '&' | '^' ) inner= declarator ) | directDeclarator )
            int alt69=2;
            int LA69_0 = input.LA(1);

            if ( ((LA69_0>=51 && LA69_0<=52)||LA69_0==58) ) {
                alt69=1;
            }
            else if ( (LA69_0==IDENTIFIER||LA69_0==34) ) {
                alt69=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 69, 0, input);

                throw nvae;
            }
            switch (alt69) {
                case 1 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:904:5: (pt= ( '*' | '&' | '^' ) inner= declarator )
                    {
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:904:5: (pt= ( '*' | '&' | '^' ) inner= declarator )
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:905:6: pt= ( '*' | '&' | '^' ) inner= declarator
                    {
                    pt=(Token)input.LT(1);
                    if ( (input.LA(1)>=51 && input.LA(1)<=52)||input.LA(1)==58 ) {
                        input.consume();
                        if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(pt));
                        state.errorRecovery=false;state.failed=false;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return retval;}
                        MismatchedSetException mse = new MismatchedSetException(null,input);
                        throw mse;
                    }

                    pushFollow(FOLLOW_declarator_in_declarator2577);
                    inner=declarator();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, inner.getTree());
                    if ( state.backtracking==0 ) {

                      						retval.declarator = new PointerDeclarator((inner!=null?inner.declarator:null), PointerStyle.parsePointerStyle((pt!=null?pt.getText():null)));
                      					
                    }

                    }


                    }
                    break;
                case 2 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:910:5: directDeclarator
                    {
                    pushFollow(FOLLOW_directDeclarator_in_declarator2593);
                    directDeclarator143=directDeclarator();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, directDeclarator143.getTree());
                    if ( state.backtracking==0 ) {
                       
                      					retval.declarator = (directDeclarator143!=null?directDeclarator143.declarator:null); 
                      				
                    }

                    }
                    break;

            }

            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:914:4: ( '=' expression )?
            int alt70=2;
            alt70 = dfa70.predict(input);
            switch (alt70) {
                case 1 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:915:5: '=' expression
                    {
                    char_literal144=(Token)match(input,29,FOLLOW_29_in_declarator2612); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal144_tree = (Object)adaptor.create(char_literal144);
                    adaptor.addChild(root_0, char_literal144_tree);
                    }
                    pushFollow(FOLLOW_expression_in_declarator2619);
                    expression145=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression145.getTree());
                    if ( state.backtracking==0 ) {

                      					retval.declarator.setDefaultValue((expression145!=null?expression145.expr:null));
                      				
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              			if (retval.declarator != null)
              				retval.declarator.setModifiers(retval.modifiers);
              		
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "declarator"

    public static class namedTypeRef_return extends ParserRuleReturnScope {
        public TaggedTypeRef type;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "namedTypeRef"
    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:928:1: namedTypeRef returns [TaggedTypeRef type] : ( structCore {...}? | enumCore {...}?);
    public final ObjCppParser.namedTypeRef_return namedTypeRef() throws RecognitionException {
        ObjCppParser.namedTypeRef_return retval = new ObjCppParser.namedTypeRef_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        ObjCppParser.structCore_return structCore146 = null;

        ObjCppParser.enumCore_return enumCore147 = null;



        try {
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:929:2: ( structCore {...}? | enumCore {...}?)
            int alt71=2;
            int LA71_0 = input.LA(1);

            if ( ((LA71_0>=45 && LA71_0<=47)) ) {
                alt71=1;
            }
            else if ( (LA71_0==30) ) {
                alt71=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 71, 0, input);

                throw nvae;
            }
            switch (alt71) {
                case 1 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:930:3: structCore {...}?
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_structCore_in_namedTypeRef2653);
                    structCore146=structCore();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, structCore146.getTree());
                    if ( !(( (structCore146!=null?structCore146.struct:null).getTag() != null )) ) {
                        if (state.backtracking>0) {state.failed=true; return retval;}
                        throw new FailedPredicateException(input, "namedTypeRef", " $structCore.struct.getTag() != null ");
                    }
                    if ( state.backtracking==0 ) {

                      			retval.type = (structCore146!=null?structCore146.struct:null);
                      		
                    }

                    }
                    break;
                case 2 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:933:3: enumCore {...}?
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_enumCore_in_namedTypeRef2663);
                    enumCore147=enumCore();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, enumCore147.getTree());
                    if ( !(( (enumCore147!=null?enumCore147.e:null).getTag() != null )) ) {
                        if (state.backtracking>0) {state.failed=true; return retval;}
                        throw new FailedPredicateException(input, "namedTypeRef", " $enumCore.e.getTag() != null ");
                    }
                    if ( state.backtracking==0 ) {

                      			retval.type = (enumCore147!=null?enumCore147.e:null);
                      		
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "namedTypeRef"

    public static class typeDef_return extends ParserRuleReturnScope {
        public TypeDef typeDef;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "typeDef"
    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:938:1: typeDef returns [TypeDef typeDef] : 'typedef' varDecl {...}?;
    public final ObjCppParser.typeDef_return typeDef() throws RecognitionException {
        ObjCppParser.typeDef_return retval = new ObjCppParser.typeDef_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        Token string_literal148=null;
        ObjCppParser.varDecl_return varDecl149 = null;


        Object string_literal148_tree=null;

        try {
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:939:2: ( 'typedef' varDecl {...}?)
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:939:4: 'typedef' varDecl {...}?
            {
            root_0 = (Object)adaptor.nil();

            string_literal148=(Token)match(input,59,FOLLOW_59_in_typeDef2682); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal148_tree = (Object)adaptor.create(string_literal148);
            adaptor.addChild(root_0, string_literal148_tree);
            }
            pushFollow(FOLLOW_varDecl_in_typeDef2688);
            varDecl149=varDecl();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, varDecl149.getTree());
            if ( !(( 
            			((varDecl149!=null?varDecl149.decl:null) instanceof VariablesDeclaration) 
            		)) ) {
                if (state.backtracking>0) {state.failed=true; return retval;}
                throw new FailedPredicateException(input, "typeDef", " \n\t\t\t($varDecl.decl instanceof VariablesDeclaration) \n\t\t");
            }
            if ( state.backtracking==0 ) {

              			VariablesDeclaration vd = (VariablesDeclaration)(varDecl149!=null?varDecl149.decl:null);
              			retval.typeDef = new TypeDef(vd.getValueType(), vd.getDeclarators());
              		
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "typeDef"

    public static class varDeclEOF_return extends ParserRuleReturnScope {
        public Declaration decl;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "varDeclEOF"
    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:948:1: varDeclEOF returns [Declaration decl] : varDecl EOF ;
    public final ObjCppParser.varDeclEOF_return varDeclEOF() throws RecognitionException {
        ObjCppParser.varDeclEOF_return retval = new ObjCppParser.varDeclEOF_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        Token EOF151=null;
        ObjCppParser.varDecl_return varDecl150 = null;


        Object EOF151_tree=null;

        try {
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:949:2: ( varDecl EOF )
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:949:4: varDecl EOF
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_varDecl_in_varDeclEOF2708);
            varDecl150=varDecl();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, varDecl150.getTree());
            EOF151=(Token)match(input,EOF,FOLLOW_EOF_in_varDeclEOF2710); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            EOF151_tree = (Object)adaptor.create(EOF151);
            adaptor.addChild(root_0, EOF151_tree);
            }
            if ( state.backtracking==0 ) {
               retval.decl = (varDecl150!=null?varDecl150.decl:null); 
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "varDeclEOF"

    public static class varDecl_return extends ParserRuleReturnScope {
        public Declaration decl;
        public TypeRef type;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "varDecl"
    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:952:1: varDecl returns [Declaration decl, TypeRef type] : ({...}?sm= modifier | {...}?tm= modifier )* ( ( structOrEnum ( (d1= declaratorsList )? ) | tcfs= typeRefCoreOrAnonymousFuncSig d2= declaratorsList ) ) ';' ;
    public final ObjCppParser.varDecl_return varDecl() throws RecognitionException {
        ObjCppParser.varDecl_return retval = new ObjCppParser.varDecl_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        Token char_literal153=null;
        ObjCppParser.modifier_return sm = null;

        ObjCppParser.modifier_return tm = null;

        ObjCppParser.declaratorsList_return d1 = null;

        ObjCppParser.typeRefCoreOrAnonymousFuncSig_return tcfs = null;

        ObjCppParser.declaratorsList_return d2 = null;

        ObjCppParser.structOrEnum_return structOrEnum152 = null;


        Object char_literal153_tree=null;


        	List<Modifier> stoMods = new ArrayList<Modifier>(), typMods = new ArrayList<Modifier>();

        try {
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:956:2: ( ({...}?sm= modifier | {...}?tm= modifier )* ( ( structOrEnum ( (d1= declaratorsList )? ) | tcfs= typeRefCoreOrAnonymousFuncSig d2= declaratorsList ) ) ';' )
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:956:4: ({...}?sm= modifier | {...}?tm= modifier )* ( ( structOrEnum ( (d1= declaratorsList )? ) | tcfs= typeRefCoreOrAnonymousFuncSig d2= declaratorsList ) ) ';'
            {
            root_0 = (Object)adaptor.nil();

            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:956:4: ({...}?sm= modifier | {...}?tm= modifier )*
            loop72:
            do {
                int alt72=3;
                alt72 = dfa72.predict(input);
                switch (alt72) {
            	case 1 :
            	    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:957:4: {...}?sm= modifier
            	    {
            	    if ( !(( next(Modifier.Kind.StorageClassSpecifier) )) ) {
            	        if (state.backtracking>0) {state.failed=true; return retval;}
            	        throw new FailedPredicateException(input, "varDecl", " next(Modifier.Kind.StorageClassSpecifier) ");
            	    }
            	    pushFollow(FOLLOW_modifier_in_varDecl2746);
            	    sm=modifier();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, sm.getTree());
            	    if ( state.backtracking==0 ) {
            	       stoMods.add((sm!=null?sm.modifier:null)); 
            	    }

            	    }
            	    break;
            	case 2 :
            	    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:959:4: {...}?tm= modifier
            	    {
            	    if ( !(( next(Modifier.Kind.TypeQualifier) )) ) {
            	        if (state.backtracking>0) {state.failed=true; return retval;}
            	        throw new FailedPredicateException(input, "varDecl", " next(Modifier.Kind.TypeQualifier) ");
            	    }
            	    pushFollow(FOLLOW_modifier_in_varDecl2763);
            	    tm=modifier();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, tm.getTree());
            	    if ( state.backtracking==0 ) {
            	       typMods.add((tm!=null?tm.modifier:null)); 
            	    }

            	    }
            	    break;

            	default :
            	    break loop72;
                }
            } while (true);

            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:962:3: ( ( structOrEnum ( (d1= declaratorsList )? ) | tcfs= typeRefCoreOrAnonymousFuncSig d2= declaratorsList ) )
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:966:4: ( structOrEnum ( (d1= declaratorsList )? ) | tcfs= typeRefCoreOrAnonymousFuncSig d2= declaratorsList )
            {
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:966:4: ( structOrEnum ( (d1= declaratorsList )? ) | tcfs= typeRefCoreOrAnonymousFuncSig d2= declaratorsList )
            int alt74=2;
            int LA74_0 = input.LA(1);

            if ( (LA74_0==30||(LA74_0>=45 && LA74_0<=47)) ) {
                alt74=1;
            }
            else if ( (LA74_0==IDENTIFIER||(LA74_0>=60 && LA74_0<=74)) ) {
                alt74=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 74, 0, input);

                throw nvae;
            }
            switch (alt74) {
                case 1 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:967:5: structOrEnum ( (d1= declaratorsList )? )
                    {
                    pushFollow(FOLLOW_structOrEnum_in_varDecl2790);
                    structOrEnum152=structOrEnum();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, structOrEnum152.getTree());
                    if ( state.backtracking==0 ) {
                       
                      					retval.type = (structOrEnum152!=null?structOrEnum152.type:null);
                      					//retval.decl = new VariablesDeclaration(retval.type);
                      				
                    }
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:971:5: ( (d1= declaratorsList )? )
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:972:6: (d1= declaratorsList )?
                    {
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:972:8: (d1= declaratorsList )?
                    int alt73=2;
                    int LA73_0 = input.LA(1);

                    if ( (LA73_0==IDENTIFIER||LA73_0==34||(LA73_0>=51 && LA73_0<=52)||LA73_0==58) ) {
                        alt73=1;
                    }
                    switch (alt73) {
                        case 1 :
                            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:0:0: d1= declaratorsList
                            {
                            pushFollow(FOLLOW_declaratorsList_in_varDecl2807);
                            d1=declaratorsList();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, d1.getTree());

                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      						if ((d1!=null?d1.declarators:null) != null)
                      							retval.decl = new VariablesDeclaration(retval.type, (d1!=null?d1.declarators:null));
                      						else
                      							retval.decl = new VariablesDeclaration(retval.type); //new TaggedTypeRefDeclaration((TaggedTypeRef)retval.type);
                      					
                    }

                    }


                    }
                    break;
                case 2 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:979:5: tcfs= typeRefCoreOrAnonymousFuncSig d2= declaratorsList
                    {
                    pushFollow(FOLLOW_typeRefCoreOrAnonymousFuncSig_in_varDecl2827);
                    tcfs=typeRefCoreOrAnonymousFuncSig();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, tcfs.getTree());
                    if ( state.backtracking==0 ) {
                       retval.type = (tcfs!=null?tcfs.type:null); 
                    }
                    pushFollow(FOLLOW_declaratorsList_in_varDecl2837);
                    d2=declaratorsList();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, d2.getTree());
                    if ( state.backtracking==0 ) {

                      					retval.decl = new VariablesDeclaration(retval.type, (d2!=null?d2.declarators:null));
                      				
                    }

                    }
                    break;

            }


            }

            char_literal153=(Token)match(input,28,FOLLOW_28_in_varDecl2874); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal153_tree = (Object)adaptor.create(char_literal153);
            adaptor.addChild(root_0, char_literal153_tree);
            }
            if ( state.backtracking==0 ) {
               
              			retval.decl.addModifiers(stoMods);
              			if (retval.type != null)
              				retval.type.addModifiers(typMods); 
              		
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "varDecl"

    public static class objCProtocolRefList_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "objCProtocolRefList"
    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1008:1: objCProtocolRefList : '<' IDENTIFIER ( ',' IDENTIFIER )* '>' ;
    public final ObjCppParser.objCProtocolRefList_return objCProtocolRefList() throws RecognitionException {
        ObjCppParser.objCProtocolRefList_return retval = new ObjCppParser.objCProtocolRefList_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        Token char_literal154=null;
        Token IDENTIFIER155=null;
        Token char_literal156=null;
        Token IDENTIFIER157=null;
        Token char_literal158=null;

        Object char_literal154_tree=null;
        Object IDENTIFIER155_tree=null;
        Object char_literal156_tree=null;
        Object IDENTIFIER157_tree=null;
        Object char_literal158_tree=null;

        try {
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1009:2: ( '<' IDENTIFIER ( ',' IDENTIFIER )* '>' )
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1009:4: '<' IDENTIFIER ( ',' IDENTIFIER )* '>'
            {
            root_0 = (Object)adaptor.nil();

            char_literal154=(Token)match(input,36,FOLLOW_36_in_objCProtocolRefList2888); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal154_tree = (Object)adaptor.create(char_literal154);
            adaptor.addChild(root_0, char_literal154_tree);
            }
            IDENTIFIER155=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_objCProtocolRefList2893); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IDENTIFIER155_tree = (Object)adaptor.create(IDENTIFIER155);
            adaptor.addChild(root_0, IDENTIFIER155_tree);
            }
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1011:3: ( ',' IDENTIFIER )*
            loop75:
            do {
                int alt75=2;
                int LA75_0 = input.LA(1);

                if ( (LA75_0==27) ) {
                    alt75=1;
                }


                switch (alt75) {
            	case 1 :
            	    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1012:4: ',' IDENTIFIER
            	    {
            	    char_literal156=(Token)match(input,27,FOLLOW_27_in_objCProtocolRefList2903); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal156_tree = (Object)adaptor.create(char_literal156);
            	    adaptor.addChild(root_0, char_literal156_tree);
            	    }
            	    IDENTIFIER157=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_objCProtocolRefList2909); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    IDENTIFIER157_tree = (Object)adaptor.create(IDENTIFIER157);
            	    adaptor.addChild(root_0, IDENTIFIER157_tree);
            	    }

            	    }
            	    break;

            	default :
            	    break loop75;
                }
            } while (true);

            char_literal158=(Token)match(input,37,FOLLOW_37_in_objCProtocolRefList2919); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal158_tree = (Object)adaptor.create(char_literal158);
            adaptor.addChild(root_0, char_literal158_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "objCProtocolRefList"

    public static class declaratorsList_return extends ParserRuleReturnScope {
        public List<Declarator> declarators;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "declaratorsList"
    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1025:1: declaratorsList returns [List<Declarator> declarators] : (d= declarator ( ',' x= declarator )* ) ;
    public final ObjCppParser.declaratorsList_return declaratorsList() throws RecognitionException {
        ObjCppParser.declaratorsList_return retval = new ObjCppParser.declaratorsList_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        Token char_literal159=null;
        ObjCppParser.declarator_return d = null;

        ObjCppParser.declarator_return x = null;


        Object char_literal159_tree=null;

        try {
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1026:2: ( (d= declarator ( ',' x= declarator )* ) )
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1026:4: (d= declarator ( ',' x= declarator )* )
            {
            root_0 = (Object)adaptor.nil();

            if ( state.backtracking==0 ) {
               retval.declarators = new ArrayList<Declarator>(); 
            }
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1027:3: (d= declarator ( ',' x= declarator )* )
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1028:4: d= declarator ( ',' x= declarator )*
            {
            pushFollow(FOLLOW_declarator_in_declaratorsList2946);
            d=declarator();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, d.getTree());
            if ( state.backtracking==0 ) {
               retval.declarators.add((d!=null?d.declarator:null)); 
            }
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1029:4: ( ',' x= declarator )*
            loop76:
            do {
                int alt76=2;
                int LA76_0 = input.LA(1);

                if ( (LA76_0==27) ) {
                    alt76=1;
                }


                switch (alt76) {
            	case 1 :
            	    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1030:5: ',' x= declarator
            	    {
            	    char_literal159=(Token)match(input,27,FOLLOW_27_in_declaratorsList2959); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal159_tree = (Object)adaptor.create(char_literal159);
            	    adaptor.addChild(root_0, char_literal159_tree);
            	    }
            	    pushFollow(FOLLOW_declarator_in_declaratorsList2968);
            	    x=declarator();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, x.getTree());
            	    if ( state.backtracking==0 ) {
            	       retval.declarators.add((x!=null?x.declarator:null)); 
            	    }

            	    }
            	    break;

            	default :
            	    break loop76;
                }
            } while (true);


            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "declaratorsList"

    public static class directDeclarator_return extends ParserRuleReturnScope {
        public Declarator declarator;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "directDeclarator"
    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1036:1: directDeclarator returns [Declarator declarator] : ( IDENTIFIER | '(' (im= modifier )* inner= declarator ')' ) ( '[' ( expression | ) ']' | argList )* ;
    public final ObjCppParser.directDeclarator_return directDeclarator() throws RecognitionException {
        ObjCppParser.directDeclarator_return retval = new ObjCppParser.directDeclarator_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        Token IDENTIFIER160=null;
        Token char_literal161=null;
        Token char_literal162=null;
        Token char_literal163=null;
        Token char_literal165=null;
        ObjCppParser.modifier_return im = null;

        ObjCppParser.declarator_return inner = null;

        ObjCppParser.expression_return expression164 = null;

        ObjCppParser.argList_return argList166 = null;


        Object IDENTIFIER160_tree=null;
        Object char_literal161_tree=null;
        Object char_literal162_tree=null;
        Object char_literal163_tree=null;
        Object char_literal165_tree=null;


        	List<Modifier> modifiers = new ArrayList<Modifier>();

        try {
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1040:2: ( ( IDENTIFIER | '(' (im= modifier )* inner= declarator ')' ) ( '[' ( expression | ) ']' | argList )* )
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1040:4: ( IDENTIFIER | '(' (im= modifier )* inner= declarator ')' ) ( '[' ( expression | ) ']' | argList )*
            {
            root_0 = (Object)adaptor.nil();

            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1040:4: ( IDENTIFIER | '(' (im= modifier )* inner= declarator ')' )
            int alt78=2;
            int LA78_0 = input.LA(1);

            if ( (LA78_0==IDENTIFIER) ) {
                alt78=1;
            }
            else if ( (LA78_0==34) ) {
                alt78=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 78, 0, input);

                throw nvae;
            }
            switch (alt78) {
                case 1 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1042:4: IDENTIFIER
                    {
                    IDENTIFIER160=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_directDeclarator3011); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    IDENTIFIER160_tree = (Object)adaptor.create(IDENTIFIER160);
                    adaptor.addChild(root_0, IDENTIFIER160_tree);
                    }
                    if ( state.backtracking==0 ) {

                      				retval.declarator = new DirectDeclarator((IDENTIFIER160!=null?IDENTIFIER160.getText():null));
                      			
                    }

                    }
                    break;
                case 2 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1045:4: '(' (im= modifier )* inner= declarator ')'
                    {
                    char_literal161=(Token)match(input,34,FOLLOW_34_in_directDeclarator3021); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal161_tree = (Object)adaptor.create(char_literal161);
                    adaptor.addChild(root_0, char_literal161_tree);
                    }
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1046:4: (im= modifier )*
                    loop77:
                    do {
                        int alt77=2;
                        alt77 = dfa77.predict(input);
                        switch (alt77) {
                    	case 1 :
                    	    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1046:5: im= modifier
                    	    {
                    	    pushFollow(FOLLOW_modifier_in_directDeclarator3030);
                    	    im=modifier();

                    	    state._fsp--;
                    	    if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) adaptor.addChild(root_0, im.getTree());
                    	    if ( state.backtracking==0 ) {
                    	       modifiers.add((im!=null?im.modifier:null)); 
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop77;
                        }
                    } while (true);

                    pushFollow(FOLLOW_declarator_in_directDeclarator3041);
                    inner=declarator();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, inner.getTree());
                    char_literal162=(Token)match(input,35,FOLLOW_35_in_directDeclarator3047); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal162_tree = (Object)adaptor.create(char_literal162);
                    adaptor.addChild(root_0, char_literal162_tree);
                    }
                    if ( state.backtracking==0 ) {

                      				retval.declarator = (inner!=null?inner.declarator:null);
                      				if (retval.declarator != null) {
                      					retval.declarator.setParenthesized(true);
                      					retval.declarator.addModifiers(modifiers);
                      				}
                      			
                    }

                    }
                    break;

            }

            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1056:3: ( '[' ( expression | ) ']' | argList )*
            loop80:
            do {
                int alt80=3;
                int LA80_0 = input.LA(1);

                if ( (LA80_0==53) ) {
                    alt80=1;
                }
                else if ( (LA80_0==34) ) {
                    alt80=2;
                }


                switch (alt80) {
            	case 1 :
            	    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1057:4: '[' ( expression | ) ']'
            	    {
            	    char_literal163=(Token)match(input,53,FOLLOW_53_in_directDeclarator3062); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal163_tree = (Object)adaptor.create(char_literal163);
            	    adaptor.addChild(root_0, char_literal163_tree);
            	    }
            	    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1058:4: ( expression | )
            	    int alt79=2;
            	    alt79 = dfa79.predict(input);
            	    switch (alt79) {
            	        case 1 :
            	            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1059:5: expression
            	            {
            	            pushFollow(FOLLOW_expression_in_directDeclarator3074);
            	            expression164=expression();

            	            state._fsp--;
            	            if (state.failed) return retval;
            	            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression164.getTree());
            	            if ( state.backtracking==0 ) {

            	              					if (retval.declarator instanceof ArrayDeclarator)
            	              						((ArrayDeclarator)retval.declarator).addDimension((expression164!=null?expression164.expr:null));
            	              					else
            	              						retval.declarator = new ArrayDeclarator(retval.declarator, (expression164!=null?expression164.expr:null));
            	              				
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1064:9: 
            	            {
            	            if ( state.backtracking==0 ) {

            	              					retval.declarator = new ArrayDeclarator(retval.declarator, new Expression.EmptyArraySize());
            	              				
            	            }

            	            }
            	            break;

            	    }

            	    char_literal165=(Token)match(input,54,FOLLOW_54_in_directDeclarator3090); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal165_tree = (Object)adaptor.create(char_literal165);
            	    adaptor.addChild(root_0, char_literal165_tree);
            	    }

            	    }
            	    break;
            	case 2 :
            	    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1069:4: argList
            	    {
            	    pushFollow(FOLLOW_argList_in_directDeclarator3098);
            	    argList166=argList();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, argList166.getTree());
            	    if ( state.backtracking==0 ) {

            	      				retval.declarator = new FunctionDeclarator(retval.declarator, (argList166!=null?argList166.args:null));
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop80;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "directDeclarator"

    public static class argList_return extends ParserRuleReturnScope {
        public List<Arg> args;
        public boolean isObjC;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "argList"
    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1075:1: argList returns [List<Arg> args, boolean isObjC] : op= '(' (a1= argDef ( ',' ax= argDef )* ( ',' '...' )? )? cp= ')' ;
    public final ObjCppParser.argList_return argList() throws RecognitionException {
        ObjCppParser.argList_return retval = new ObjCppParser.argList_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        Token op=null;
        Token cp=null;
        Token char_literal167=null;
        Token char_literal168=null;
        Token string_literal169=null;
        ObjCppParser.argDef_return a1 = null;

        ObjCppParser.argDef_return ax = null;


        Object op_tree=null;
        Object cp_tree=null;
        Object char_literal167_tree=null;
        Object char_literal168_tree=null;
        Object string_literal169_tree=null;

        try {
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1076:2: (op= '(' (a1= argDef ( ',' ax= argDef )* ( ',' '...' )? )? cp= ')' )
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1076:4: op= '(' (a1= argDef ( ',' ax= argDef )* ( ',' '...' )? )? cp= ')'
            {
            root_0 = (Object)adaptor.nil();

            if ( state.backtracking==0 ) {
               
              			retval.isObjC = false; 
              			retval.args = new ArrayList<Arg>();
              		
            }
            op=(Token)match(input,34,FOLLOW_34_in_argList3126); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            op_tree = (Object)adaptor.create(op);
            adaptor.addChild(root_0, op_tree);
            }
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1081:3: (a1= argDef ( ',' ax= argDef )* ( ',' '...' )? )?
            int alt83=2;
            int LA83_0 = input.LA(1);

            if ( (LA83_0==IDENTIFIER||LA83_0==30||(LA83_0>=44 && LA83_0<=47)||(LA83_0>=60 && LA83_0<=74)) ) {
                alt83=1;
            }
            switch (alt83) {
                case 1 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1082:4: a1= argDef ( ',' ax= argDef )* ( ',' '...' )?
                    {
                    pushFollow(FOLLOW_argDef_in_argList3138);
                    a1=argDef();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, a1.getTree());
                    if ( state.backtracking==0 ) {

                      				if (!(a1!=null?input.toString(a1.start,a1.stop):null).equals("void"))
                      					retval.args.add((a1!=null?a1.arg:null));
                      			
                    }
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1086:4: ( ',' ax= argDef )*
                    loop81:
                    do {
                        int alt81=2;
                        alt81 = dfa81.predict(input);
                        switch (alt81) {
                    	case 1 :
                    	    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1087:5: ',' ax= argDef
                    	    {
                    	    char_literal167=(Token)match(input,27,FOLLOW_27_in_argList3151); if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) {
                    	    char_literal167_tree = (Object)adaptor.create(char_literal167);
                    	    adaptor.addChild(root_0, char_literal167_tree);
                    	    }
                    	    pushFollow(FOLLOW_argDef_in_argList3160);
                    	    ax=argDef();

                    	    state._fsp--;
                    	    if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) adaptor.addChild(root_0, ax.getTree());
                    	    if ( state.backtracking==0 ) {

                    	      					retval.args.add((ax!=null?ax.arg:null));
                    	      				
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop81;
                        }
                    } while (true);

                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1092:4: ( ',' '...' )?
                    int alt82=2;
                    int LA82_0 = input.LA(1);

                    if ( (LA82_0==27) ) {
                        alt82=1;
                    }
                    switch (alt82) {
                        case 1 :
                            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1093:5: ',' '...'
                            {
                            char_literal168=(Token)match(input,27,FOLLOW_27_in_argList3180); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            char_literal168_tree = (Object)adaptor.create(char_literal168);
                            adaptor.addChild(root_0, char_literal168_tree);
                            }
                            string_literal169=(Token)match(input,44,FOLLOW_44_in_argList3182); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            string_literal169_tree = (Object)adaptor.create(string_literal169);
                            adaptor.addChild(root_0, string_literal169_tree);
                            }
                            if ( state.backtracking==0 ) {

                              					retval.isObjC = true;
                              					retval.args.add(Arg.createVarArgs());
                              				
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            cp=(Token)match(input,35,FOLLOW_35_in_argList3201); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            cp_tree = (Object)adaptor.create(cp);
            adaptor.addChild(root_0, cp_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "argList"

    public static class typeRef_return extends ParserRuleReturnScope {
        public TypeRef type;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "typeRef"
    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1102:1: typeRef returns [TypeRef type] : plainTypeRef ( typeMutator )* ;
    public final ObjCppParser.typeRef_return typeRef() throws RecognitionException {
        ObjCppParser.typeRef_return retval = new ObjCppParser.typeRef_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        ObjCppParser.plainTypeRef_return plainTypeRef170 = null;

        ObjCppParser.typeMutator_return typeMutator171 = null;



        try {
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1103:2: ( plainTypeRef ( typeMutator )* )
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1104:3: plainTypeRef ( typeMutator )*
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_plainTypeRef_in_typeRef3219);
            plainTypeRef170=plainTypeRef();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, plainTypeRef170.getTree());
            if ( state.backtracking==0 ) {

              			retval.type = (plainTypeRef170!=null?plainTypeRef170.type:null);
              		
            }
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1107:3: ( typeMutator )*
            loop84:
            do {
                int alt84=2;
                alt84 = dfa84.predict(input);
                switch (alt84) {
            	case 1 :
            	    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1108:4: typeMutator
            	    {
            	    pushFollow(FOLLOW_typeMutator_in_typeRef3230);
            	    typeMutator171=typeMutator();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, typeMutator171.getTree());
            	    if ( state.backtracking==0 ) {

            	      				retval.type = (typeMutator171!=null?typeMutator171.mutator:null).mutateType(retval.type);
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop84;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "typeRef"

    public static class primSignModifier_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "primSignModifier"
    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1114:1: primSignModifier : ( 'signed' | 'unsigned' | '__signed' | '__unsigned' );
    public final ObjCppParser.primSignModifier_return primSignModifier() throws RecognitionException {
        ObjCppParser.primSignModifier_return retval = new ObjCppParser.primSignModifier_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        Token set172=null;

        Object set172_tree=null;

        try {
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1115:2: ( 'signed' | 'unsigned' | '__signed' | '__unsigned' )
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:
            {
            root_0 = (Object)adaptor.nil();

            set172=(Token)input.LT(1);
            if ( (input.LA(1)>=60 && input.LA(1)<=63) ) {
                input.consume();
                if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set172));
                state.errorRecovery=false;state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "primSignModifier"

    public static class primSizeModifier_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "primSizeModifier"
    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1117:1: primSizeModifier : ( 'long' | 'short' );
    public final ObjCppParser.primSizeModifier_return primSizeModifier() throws RecognitionException {
        ObjCppParser.primSizeModifier_return retval = new ObjCppParser.primSizeModifier_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        Token set173=null;

        Object set173_tree=null;

        try {
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1118:2: ( 'long' | 'short' )
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:
            {
            root_0 = (Object)adaptor.nil();

            set173=(Token)input.LT(1);
            if ( (input.LA(1)>=64 && input.LA(1)<=65) ) {
                input.consume();
                if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set173));
                state.errorRecovery=false;state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "primSizeModifier"

    public static class primitiveTypeName_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "primitiveTypeName"
    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1120:1: primitiveTypeName : ( 'long' | 'int' | 'short' | 'double' | 'float' | 'char' | 'void' | '__int8' | '__int16' | '__int32' | '__int64' );
    public final ObjCppParser.primitiveTypeName_return primitiveTypeName() throws RecognitionException {
        ObjCppParser.primitiveTypeName_return retval = new ObjCppParser.primitiveTypeName_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        Token set174=null;

        Object set174_tree=null;

        try {
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1121:2: ( 'long' | 'int' | 'short' | 'double' | 'float' | 'char' | 'void' | '__int8' | '__int16' | '__int32' | '__int64' )
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:
            {
            root_0 = (Object)adaptor.nil();

            set174=(Token)input.LT(1);
            if ( (input.LA(1)>=64 && input.LA(1)<=74) ) {
                input.consume();
                if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set174));
                state.errorRecovery=false;state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "primitiveTypeName"

    public static class primitiveTypeRef_return extends ParserRuleReturnScope {
        public TypeRef type;
        public int line;
        public List<Modifier> modifiers;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "primitiveTypeRef"
    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1133:1: primitiveTypeRef returns [TypeRef type, int line, List<Modifier> modifiers] : ( (mod1= primSignModifier )? (mod2= primSizeModifier (mod3= primSizeModifier )? )? (name= primitiveTypeName ) ) ;
    public final ObjCppParser.primitiveTypeRef_return primitiveTypeRef() throws RecognitionException {
        ObjCppParser.primitiveTypeRef_return retval = new ObjCppParser.primitiveTypeRef_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        ObjCppParser.primSignModifier_return mod1 = null;

        ObjCppParser.primSizeModifier_return mod2 = null;

        ObjCppParser.primSizeModifier_return mod3 = null;

        ObjCppParser.primitiveTypeName_return name = null;



        try {
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1134:2: ( ( (mod1= primSignModifier )? (mod2= primSizeModifier (mod3= primSizeModifier )? )? (name= primitiveTypeName ) ) )
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1134:4: ( (mod1= primSignModifier )? (mod2= primSizeModifier (mod3= primSizeModifier )? )? (name= primitiveTypeName ) )
            {
            root_0 = (Object)adaptor.nil();

            if ( state.backtracking==0 ) {
               
              			retval.line = getLine(); 
              			retval.modifiers = new ArrayList<Modifier>();
              		
            }
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1138:3: ( (mod1= primSignModifier )? (mod2= primSizeModifier (mod3= primSizeModifier )? )? (name= primitiveTypeName ) )
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1139:4: (mod1= primSignModifier )? (mod2= primSizeModifier (mod3= primSizeModifier )? )? (name= primitiveTypeName )
            {
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1139:8: (mod1= primSignModifier )?
            int alt85=2;
            int LA85_0 = input.LA(1);

            if ( ((LA85_0>=60 && LA85_0<=63)) ) {
                alt85=1;
            }
            switch (alt85) {
                case 1 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:0:0: mod1= primSignModifier
                    {
                    pushFollow(FOLLOW_primSignModifier_in_primitiveTypeRef3369);
                    mod1=primSignModifier();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, mod1.getTree());

                    }
                    break;

            }

            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1140:4: (mod2= primSizeModifier (mod3= primSizeModifier )? )?
            int alt87=2;
            alt87 = dfa87.predict(input);
            switch (alt87) {
                case 1 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1140:5: mod2= primSizeModifier (mod3= primSizeModifier )?
                    {
                    pushFollow(FOLLOW_primSizeModifier_in_primitiveTypeRef3380);
                    mod2=primSizeModifier();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, mod2.getTree());
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1141:8: (mod3= primSizeModifier )?
                    int alt86=2;
                    alt86 = dfa86.predict(input);
                    switch (alt86) {
                        case 1 :
                            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:0:0: mod3= primSizeModifier
                            {
                            pushFollow(FOLLOW_primSizeModifier_in_primitiveTypeRef3387);
                            mod3=primSizeModifier();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, mod3.getTree());

                            }
                            break;

                    }


                    }
                    break;

            }

            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1149:4: (name= primitiveTypeName )
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1151:5: name= primitiveTypeName
            {
            pushFollow(FOLLOW_primitiveTypeName_in_primitiveTypeRef3425);
            name=primitiveTypeName();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, name.getTree());
            if ( state.backtracking==0 ) {

              					retval.type = mark(new Primitive((name!=null?input.toString(name.start,name.stop):null)), retval.line);
              				
            }

            }

            if ( state.backtracking==0 ) {

              				if (retval.type != null) {
              					retval.type.addModifiers(Modifier.parseModifier((mod1!=null?input.toString(mod1.start,mod1.stop):null)));
              					retval.type.addModifiers(Modifier.parseModifier((mod2!=null?input.toString(mod2.start,mod2.stop):null)));
              					retval.type.addModifiers(Modifier.parseModifier((mod3!=null?input.toString(mod3.start,mod3.stop):null)));
              				}
              			
            }

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "primitiveTypeRef"

    public static class objCMethodCall_return extends ParserRuleReturnScope {
        public FunctionCall expr;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "objCMethodCall"
    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1176:1: objCMethodCall returns [FunctionCall expr] : '[' target= expression methodName= IDENTIFIER ( ':' arg1= expression (selx= IDENTIFIER ':' argx= expression )* )? ']' ;
    public final ObjCppParser.objCMethodCall_return objCMethodCall() throws RecognitionException {
        ObjCppParser.objCMethodCall_return retval = new ObjCppParser.objCMethodCall_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        Token methodName=null;
        Token selx=null;
        Token char_literal175=null;
        Token char_literal176=null;
        Token char_literal177=null;
        Token char_literal178=null;
        ObjCppParser.expression_return target = null;

        ObjCppParser.expression_return arg1 = null;

        ObjCppParser.expression_return argx = null;


        Object methodName_tree=null;
        Object selx_tree=null;
        Object char_literal175_tree=null;
        Object char_literal176_tree=null;
        Object char_literal177_tree=null;
        Object char_literal178_tree=null;

        try {
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1177:2: ( '[' target= expression methodName= IDENTIFIER ( ':' arg1= expression (selx= IDENTIFIER ':' argx= expression )* )? ']' )
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1178:3: '[' target= expression methodName= IDENTIFIER ( ':' arg1= expression (selx= IDENTIFIER ':' argx= expression )* )? ']'
            {
            root_0 = (Object)adaptor.nil();

            char_literal175=(Token)match(input,53,FOLLOW_53_in_objCMethodCall3466); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal175_tree = (Object)adaptor.create(char_literal175);
            adaptor.addChild(root_0, char_literal175_tree);
            }
            pushFollow(FOLLOW_expression_in_objCMethodCall3470);
            target=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, target.getTree());
            methodName=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_objCMethodCall3474); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            methodName_tree = (Object)adaptor.create(methodName);
            adaptor.addChild(root_0, methodName_tree);
            }
            if ( state.backtracking==0 ) {

              			retval.expr = new FunctionCall();
              			retval.expr.setFunction(new VariableRef((methodName!=null?methodName.getText():null)));
              			retval.expr.setTarget((target!=null?target.expr:null));
              			retval.expr.setMemberRefStyle(MemberRefStyle.SquareBrackets);
              		
            }
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1184:3: ( ':' arg1= expression (selx= IDENTIFIER ':' argx= expression )* )?
            int alt89=2;
            int LA89_0 = input.LA(1);

            if ( (LA89_0==33) ) {
                alt89=1;
            }
            switch (alt89) {
                case 1 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1185:4: ':' arg1= expression (selx= IDENTIFIER ':' argx= expression )*
                    {
                    char_literal176=(Token)match(input,33,FOLLOW_33_in_objCMethodCall3485); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal176_tree = (Object)adaptor.create(char_literal176);
                    adaptor.addChild(root_0, char_literal176_tree);
                    }
                    pushFollow(FOLLOW_expression_in_objCMethodCall3489);
                    arg1=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, arg1.getTree());
                    if ( state.backtracking==0 ) {

                      				retval.expr.addArgument(null, (arg1!=null?arg1.expr:null));
                      			
                    }
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1188:4: (selx= IDENTIFIER ':' argx= expression )*
                    loop88:
                    do {
                        int alt88=2;
                        int LA88_0 = input.LA(1);

                        if ( (LA88_0==IDENTIFIER) ) {
                            alt88=1;
                        }


                        switch (alt88) {
                    	case 1 :
                    	    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1189:5: selx= IDENTIFIER ':' argx= expression
                    	    {
                    	    selx=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_objCMethodCall3504); if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) {
                    	    selx_tree = (Object)adaptor.create(selx);
                    	    adaptor.addChild(root_0, selx_tree);
                    	    }
                    	    char_literal177=(Token)match(input,33,FOLLOW_33_in_objCMethodCall3506); if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) {
                    	    char_literal177_tree = (Object)adaptor.create(char_literal177);
                    	    adaptor.addChild(root_0, char_literal177_tree);
                    	    }
                    	    pushFollow(FOLLOW_expression_in_objCMethodCall3510);
                    	    argx=expression();

                    	    state._fsp--;
                    	    if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) adaptor.addChild(root_0, argx.getTree());
                    	    if ( state.backtracking==0 ) {

                    	      					retval.expr.addArgument((selx!=null?selx.getText():null), (argx!=null?argx.expr:null));
                    	      				
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop88;
                        }
                    } while (true);


                    }
                    break;

            }

            char_literal178=(Token)match(input,54,FOLLOW_54_in_objCMethodCall3527); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal178_tree = (Object)adaptor.create(char_literal178);
            adaptor.addChild(root_0, char_literal178_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "objCMethodCall"

    public static class functionCall_return extends ParserRuleReturnScope {
        public FunctionCall expr;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "functionCall"
    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1197:1: functionCall returns [FunctionCall expr] : IDENTIFIER '(' (a1= expression ( ',' ax= expression )* )? ')' ;
    public final ObjCppParser.functionCall_return functionCall() throws RecognitionException {
        ObjCppParser.functionCall_return retval = new ObjCppParser.functionCall_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        Token IDENTIFIER179=null;
        Token char_literal180=null;
        Token char_literal181=null;
        Token char_literal182=null;
        ObjCppParser.expression_return a1 = null;

        ObjCppParser.expression_return ax = null;


        Object IDENTIFIER179_tree=null;
        Object char_literal180_tree=null;
        Object char_literal181_tree=null;
        Object char_literal182_tree=null;

        try {
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1198:2: ( IDENTIFIER '(' (a1= expression ( ',' ax= expression )* )? ')' )
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1203:3: IDENTIFIER '(' (a1= expression ( ',' ax= expression )* )? ')'
            {
            root_0 = (Object)adaptor.nil();

            IDENTIFIER179=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_functionCall3551); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IDENTIFIER179_tree = (Object)adaptor.create(IDENTIFIER179);
            adaptor.addChild(root_0, IDENTIFIER179_tree);
            }
            char_literal180=(Token)match(input,34,FOLLOW_34_in_functionCall3553); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal180_tree = (Object)adaptor.create(char_literal180);
            adaptor.addChild(root_0, char_literal180_tree);
            }
            if ( state.backtracking==0 ) {

              			FunctionCall fc = new FunctionCall();
              			fc.setFunction(new VariableRef((IDENTIFIER179!=null?IDENTIFIER179.getText():null)));
              			retval.expr = fc;
              		
            }
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1208:3: (a1= expression ( ',' ax= expression )* )?
            int alt91=2;
            alt91 = dfa91.predict(input);
            switch (alt91) {
                case 1 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1209:4: a1= expression ( ',' ax= expression )*
                    {
                    pushFollow(FOLLOW_expression_in_functionCall3566);
                    a1=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, a1.getTree());
                    if ( state.backtracking==0 ) {

                      				retval.expr.addArgument((a1!=null?a1.expr:null));
                      			
                    }
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1212:4: ( ',' ax= expression )*
                    loop90:
                    do {
                        int alt90=2;
                        int LA90_0 = input.LA(1);

                        if ( (LA90_0==27) ) {
                            alt90=1;
                        }


                        switch (alt90) {
                    	case 1 :
                    	    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1212:6: ',' ax= expression
                    	    {
                    	    char_literal181=(Token)match(input,27,FOLLOW_27_in_functionCall3575); if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) {
                    	    char_literal181_tree = (Object)adaptor.create(char_literal181);
                    	    adaptor.addChild(root_0, char_literal181_tree);
                    	    }
                    	    pushFollow(FOLLOW_expression_in_functionCall3584);
                    	    ax=expression();

                    	    state._fsp--;
                    	    if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) adaptor.addChild(root_0, ax.getTree());
                    	    if ( state.backtracking==0 ) {

                    	      					retval.expr.addArgument((ax!=null?ax.expr:null));
                    	      				
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop90;
                        }
                    } while (true);


                    }
                    break;

            }

            char_literal182=(Token)match(input,35,FOLLOW_35_in_functionCall3602); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal182_tree = (Object)adaptor.create(char_literal182);
            adaptor.addChild(root_0, char_literal182_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "functionCall"

    public static class binaryOp_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "binaryOp"
    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1221:1: binaryOp : ( '+' | '-' | '*' | '/' | '%' | '<<' | '>>>' | '>>' | '^' | '||' | '|' | '&&' | '&' | '<=' | '>=' | '<' | '>' | '==' | '!=' );
    public final ObjCppParser.binaryOp_return binaryOp() throws RecognitionException {
        ObjCppParser.binaryOp_return retval = new ObjCppParser.binaryOp_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        Token set183=null;

        Object set183_tree=null;

        try {
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1221:10: ( '+' | '-' | '*' | '/' | '%' | '<<' | '>>>' | '>>' | '^' | '||' | '|' | '&&' | '&' | '<=' | '>=' | '<' | '>' | '==' | '!=' )
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:
            {
            root_0 = (Object)adaptor.nil();

            set183=(Token)input.LT(1);
            if ( (input.LA(1)>=36 && input.LA(1)<=37)||(input.LA(1)>=42 && input.LA(1)<=43)||(input.LA(1)>=51 && input.LA(1)<=52)||input.LA(1)==58||(input.LA(1)>=75 && input.LA(1)<=86) ) {
                input.consume();
                if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set183));
                state.errorRecovery=false;state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "binaryOp"

    public static class baseExpression_return extends ParserRuleReturnScope {
        public Expression expr;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "baseExpression"
    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1282:1: baseExpression returns [Expression expr] : ( IDENTIFIER | constant | '(' expression ')' | messageExpr | selectorExpr | protocolExpr | encodingExpr );
    public final ObjCppParser.baseExpression_return baseExpression() throws RecognitionException {
        ObjCppParser.baseExpression_return retval = new ObjCppParser.baseExpression_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        Token IDENTIFIER184=null;
        Token char_literal186=null;
        Token char_literal188=null;
        ObjCppParser.constant_return constant185 = null;

        ObjCppParser.expression_return expression187 = null;

        ObjCppParser.messageExpr_return messageExpr189 = null;

        ObjCppParser.selectorExpr_return selectorExpr190 = null;

        ObjCppParser.protocolExpr_return protocolExpr191 = null;

        ObjCppParser.encodingExpr_return encodingExpr192 = null;


        Object IDENTIFIER184_tree=null;
        Object char_literal186_tree=null;
        Object char_literal188_tree=null;

        try {
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1283:2: ( IDENTIFIER | constant | '(' expression ')' | messageExpr | selectorExpr | protocolExpr | encodingExpr )
            int alt92=7;
            alt92 = dfa92.predict(input);
            switch (alt92) {
                case 1 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1284:3: IDENTIFIER
                    {
                    root_0 = (Object)adaptor.nil();

                    IDENTIFIER184=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_baseExpression3706); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    IDENTIFIER184_tree = (Object)adaptor.create(IDENTIFIER184);
                    adaptor.addChild(root_0, IDENTIFIER184_tree);
                    }
                    if ( state.backtracking==0 ) {
                       retval.expr = new VariableRef((IDENTIFIER184!=null?IDENTIFIER184.getText():null)); 
                    }

                    }
                    break;
                case 2 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1285:3: constant
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_constant_in_baseExpression3714);
                    constant185=constant();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, constant185.getTree());
                    if ( state.backtracking==0 ) {
                       retval.expr = (constant185!=null?constant185.constant:null); 
                    }

                    }
                    break;
                case 3 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1286:3: '(' expression ')'
                    {
                    root_0 = (Object)adaptor.nil();

                    char_literal186=(Token)match(input,34,FOLLOW_34_in_baseExpression3722); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal186_tree = (Object)adaptor.create(char_literal186);
                    adaptor.addChild(root_0, char_literal186_tree);
                    }
                    pushFollow(FOLLOW_expression_in_baseExpression3724);
                    expression187=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression187.getTree());
                    char_literal188=(Token)match(input,35,FOLLOW_35_in_baseExpression3726); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal188_tree = (Object)adaptor.create(char_literal188);
                    adaptor.addChild(root_0, char_literal188_tree);
                    }
                    if ( state.backtracking==0 ) {
                       
                      			retval.expr = (expression187!=null?expression187.expr:null); 
                      			if (retval.expr != null)
                      				retval.expr.setParenthesis(true);
                      		
                    }

                    }
                    break;
                case 4 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1291:3: messageExpr
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_messageExpr_in_baseExpression3734);
                    messageExpr189=messageExpr();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, messageExpr189.getTree());

                    }
                    break;
                case 5 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1292:3: selectorExpr
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_selectorExpr_in_baseExpression3740);
                    selectorExpr190=selectorExpr();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, selectorExpr190.getTree());

                    }
                    break;
                case 6 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1293:3: protocolExpr
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_protocolExpr_in_baseExpression3746);
                    protocolExpr191=protocolExpr();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, protocolExpr191.getTree());

                    }
                    break;
                case 7 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1294:3: encodingExpr
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_encodingExpr_in_baseExpression3752);
                    encodingExpr192=encodingExpr();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, encodingExpr192.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "baseExpression"

    public static class messageExpr_return extends ParserRuleReturnScope {
        public Expression expr;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "messageExpr"
    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1297:1: messageExpr returns [Expression expr] : '[' expression messageSelector ']' ;
    public final ObjCppParser.messageExpr_return messageExpr() throws RecognitionException {
        ObjCppParser.messageExpr_return retval = new ObjCppParser.messageExpr_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        Token char_literal193=null;
        Token char_literal196=null;
        ObjCppParser.expression_return expression194 = null;

        ObjCppParser.messageSelector_return messageSelector195 = null;


        Object char_literal193_tree=null;
        Object char_literal196_tree=null;

        try {
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1298:2: ( '[' expression messageSelector ']' )
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1298:4: '[' expression messageSelector ']'
            {
            root_0 = (Object)adaptor.nil();

            char_literal193=(Token)match(input,53,FOLLOW_53_in_messageExpr3768); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal193_tree = (Object)adaptor.create(char_literal193);
            adaptor.addChild(root_0, char_literal193_tree);
            }
            pushFollow(FOLLOW_expression_in_messageExpr3772);
            expression194=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression194.getTree());
            pushFollow(FOLLOW_messageSelector_in_messageExpr3774);
            messageSelector195=messageSelector();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, messageSelector195.getTree());
            char_literal196=(Token)match(input,54,FOLLOW_54_in_messageExpr3779); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal196_tree = (Object)adaptor.create(char_literal196);
            adaptor.addChild(root_0, char_literal196_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "messageExpr"

    public static class messageSelector_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "messageSelector"
    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1303:1: messageSelector : ( IDENTIFIER | ( ( IDENTIFIER )? ':' expression )+ );
    public final ObjCppParser.messageSelector_return messageSelector() throws RecognitionException {
        ObjCppParser.messageSelector_return retval = new ObjCppParser.messageSelector_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        Token IDENTIFIER197=null;
        Token IDENTIFIER198=null;
        Token char_literal199=null;
        ObjCppParser.expression_return expression200 = null;


        Object IDENTIFIER197_tree=null;
        Object IDENTIFIER198_tree=null;
        Object char_literal199_tree=null;

        try {
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1304:2: ( IDENTIFIER | ( ( IDENTIFIER )? ':' expression )+ )
            int alt95=2;
            int LA95_0 = input.LA(1);

            if ( (LA95_0==IDENTIFIER) ) {
                int LA95_1 = input.LA(2);

                if ( (LA95_1==54) ) {
                    alt95=1;
                }
                else if ( (LA95_1==33) ) {
                    alt95=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 95, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA95_0==33) ) {
                alt95=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 95, 0, input);

                throw nvae;
            }
            switch (alt95) {
                case 1 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1304:4: IDENTIFIER
                    {
                    root_0 = (Object)adaptor.nil();

                    IDENTIFIER197=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_messageSelector3790); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    IDENTIFIER197_tree = (Object)adaptor.create(IDENTIFIER197);
                    adaptor.addChild(root_0, IDENTIFIER197_tree);
                    }

                    }
                    break;
                case 2 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1305:3: ( ( IDENTIFIER )? ':' expression )+
                    {
                    root_0 = (Object)adaptor.nil();

                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1305:3: ( ( IDENTIFIER )? ':' expression )+
                    int cnt94=0;
                    loop94:
                    do {
                        int alt94=2;
                        int LA94_0 = input.LA(1);

                        if ( (LA94_0==IDENTIFIER||LA94_0==33) ) {
                            alt94=1;
                        }


                        switch (alt94) {
                    	case 1 :
                    	    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1305:4: ( IDENTIFIER )? ':' expression
                    	    {
                    	    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1305:4: ( IDENTIFIER )?
                    	    int alt93=2;
                    	    int LA93_0 = input.LA(1);

                    	    if ( (LA93_0==IDENTIFIER) ) {
                    	        alt93=1;
                    	    }
                    	    switch (alt93) {
                    	        case 1 :
                    	            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:0:0: IDENTIFIER
                    	            {
                    	            IDENTIFIER198=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_messageSelector3798); if (state.failed) return retval;
                    	            if ( state.backtracking==0 ) {
                    	            IDENTIFIER198_tree = (Object)adaptor.create(IDENTIFIER198);
                    	            adaptor.addChild(root_0, IDENTIFIER198_tree);
                    	            }

                    	            }
                    	            break;

                    	    }

                    	    char_literal199=(Token)match(input,33,FOLLOW_33_in_messageSelector3801); if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) {
                    	    char_literal199_tree = (Object)adaptor.create(char_literal199);
                    	    adaptor.addChild(root_0, char_literal199_tree);
                    	    }
                    	    pushFollow(FOLLOW_expression_in_messageSelector3803);
                    	    expression200=expression();

                    	    state._fsp--;
                    	    if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression200.getTree());

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt94 >= 1 ) break loop94;
                    	    if (state.backtracking>0) {state.failed=true; return retval;}
                                EarlyExitException eee =
                                    new EarlyExitException(94, input);
                                throw eee;
                        }
                        cnt94++;
                    } while (true);


                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "messageSelector"

    public static class selectorExpr_return extends ParserRuleReturnScope {
        public Expression expr;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "selectorExpr"
    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1308:1: selectorExpr returns [Expression expr] : '@selector' '(' selectorName ')' ;
    public final ObjCppParser.selectorExpr_return selectorExpr() throws RecognitionException {
        ObjCppParser.selectorExpr_return retval = new ObjCppParser.selectorExpr_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        Token string_literal201=null;
        Token char_literal202=null;
        Token char_literal204=null;
        ObjCppParser.selectorName_return selectorName203 = null;


        Object string_literal201_tree=null;
        Object char_literal202_tree=null;
        Object char_literal204_tree=null;

        try {
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1309:2: ( '@selector' '(' selectorName ')' )
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1309:4: '@selector' '(' selectorName ')'
            {
            root_0 = (Object)adaptor.nil();

            string_literal201=(Token)match(input,87,FOLLOW_87_in_selectorExpr3820); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal201_tree = (Object)adaptor.create(string_literal201);
            adaptor.addChild(root_0, string_literal201_tree);
            }
            char_literal202=(Token)match(input,34,FOLLOW_34_in_selectorExpr3825); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal202_tree = (Object)adaptor.create(char_literal202);
            adaptor.addChild(root_0, char_literal202_tree);
            }
            pushFollow(FOLLOW_selectorName_in_selectorExpr3830);
            selectorName203=selectorName();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, selectorName203.getTree());
            char_literal204=(Token)match(input,35,FOLLOW_35_in_selectorExpr3835); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal204_tree = (Object)adaptor.create(char_literal204);
            adaptor.addChild(root_0, char_literal204_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "selectorExpr"

    public static class selectorName_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "selectorName"
    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1315:1: selectorName : ( IDENTIFIER | ( ( IDENTIFIER )? ':' )+ );
    public final ObjCppParser.selectorName_return selectorName() throws RecognitionException {
        ObjCppParser.selectorName_return retval = new ObjCppParser.selectorName_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        Token IDENTIFIER205=null;
        Token IDENTIFIER206=null;
        Token char_literal207=null;

        Object IDENTIFIER205_tree=null;
        Object IDENTIFIER206_tree=null;
        Object char_literal207_tree=null;

        try {
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1316:2: ( IDENTIFIER | ( ( IDENTIFIER )? ':' )+ )
            int alt98=2;
            int LA98_0 = input.LA(1);

            if ( (LA98_0==IDENTIFIER) ) {
                int LA98_1 = input.LA(2);

                if ( (LA98_1==35) ) {
                    alt98=1;
                }
                else if ( (LA98_1==33) ) {
                    alt98=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 98, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA98_0==33) ) {
                alt98=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 98, 0, input);

                throw nvae;
            }
            switch (alt98) {
                case 1 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1316:4: IDENTIFIER
                    {
                    root_0 = (Object)adaptor.nil();

                    IDENTIFIER205=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_selectorName3846); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    IDENTIFIER205_tree = (Object)adaptor.create(IDENTIFIER205);
                    adaptor.addChild(root_0, IDENTIFIER205_tree);
                    }

                    }
                    break;
                case 2 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1317:3: ( ( IDENTIFIER )? ':' )+
                    {
                    root_0 = (Object)adaptor.nil();

                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1317:3: ( ( IDENTIFIER )? ':' )+
                    int cnt97=0;
                    loop97:
                    do {
                        int alt97=2;
                        int LA97_0 = input.LA(1);

                        if ( (LA97_0==IDENTIFIER||LA97_0==33) ) {
                            alt97=1;
                        }


                        switch (alt97) {
                    	case 1 :
                    	    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1317:4: ( IDENTIFIER )? ':'
                    	    {
                    	    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1317:4: ( IDENTIFIER )?
                    	    int alt96=2;
                    	    int LA96_0 = input.LA(1);

                    	    if ( (LA96_0==IDENTIFIER) ) {
                    	        alt96=1;
                    	    }
                    	    switch (alt96) {
                    	        case 1 :
                    	            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:0:0: IDENTIFIER
                    	            {
                    	            IDENTIFIER206=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_selectorName3854); if (state.failed) return retval;
                    	            if ( state.backtracking==0 ) {
                    	            IDENTIFIER206_tree = (Object)adaptor.create(IDENTIFIER206);
                    	            adaptor.addChild(root_0, IDENTIFIER206_tree);
                    	            }

                    	            }
                    	            break;

                    	    }

                    	    char_literal207=(Token)match(input,33,FOLLOW_33_in_selectorName3857); if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) {
                    	    char_literal207_tree = (Object)adaptor.create(char_literal207);
                    	    adaptor.addChild(root_0, char_literal207_tree);
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt97 >= 1 ) break loop97;
                    	    if (state.backtracking>0) {state.failed=true; return retval;}
                                EarlyExitException eee =
                                    new EarlyExitException(97, input);
                                throw eee;
                        }
                        cnt97++;
                    } while (true);


                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "selectorName"

    public static class protocolExpr_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "protocolExpr"
    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1320:1: protocolExpr : '@protocol' '(' IDENTIFIER ')' ;
    public final ObjCppParser.protocolExpr_return protocolExpr() throws RecognitionException {
        ObjCppParser.protocolExpr_return retval = new ObjCppParser.protocolExpr_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        Token string_literal208=null;
        Token char_literal209=null;
        Token IDENTIFIER210=null;
        Token char_literal211=null;

        Object string_literal208_tree=null;
        Object char_literal209_tree=null;
        Object IDENTIFIER210_tree=null;
        Object char_literal211_tree=null;

        try {
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1321:2: ( '@protocol' '(' IDENTIFIER ')' )
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1321:4: '@protocol' '(' IDENTIFIER ')'
            {
            root_0 = (Object)adaptor.nil();

            string_literal208=(Token)match(input,31,FOLLOW_31_in_protocolExpr3870); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal208_tree = (Object)adaptor.create(string_literal208);
            adaptor.addChild(root_0, string_literal208_tree);
            }
            char_literal209=(Token)match(input,34,FOLLOW_34_in_protocolExpr3874); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal209_tree = (Object)adaptor.create(char_literal209);
            adaptor.addChild(root_0, char_literal209_tree);
            }
            IDENTIFIER210=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_protocolExpr3878); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IDENTIFIER210_tree = (Object)adaptor.create(IDENTIFIER210);
            adaptor.addChild(root_0, IDENTIFIER210_tree);
            }
            char_literal211=(Token)match(input,35,FOLLOW_35_in_protocolExpr3882); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal211_tree = (Object)adaptor.create(char_literal211);
            adaptor.addChild(root_0, char_literal211_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "protocolExpr"

    public static class encodingExpr_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "encodingExpr"
    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1327:1: encodingExpr : '@encode' '(' IDENTIFIER ')' ;
    public final ObjCppParser.encodingExpr_return encodingExpr() throws RecognitionException {
        ObjCppParser.encodingExpr_return retval = new ObjCppParser.encodingExpr_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        Token string_literal212=null;
        Token char_literal213=null;
        Token IDENTIFIER214=null;
        Token char_literal215=null;

        Object string_literal212_tree=null;
        Object char_literal213_tree=null;
        Object IDENTIFIER214_tree=null;
        Object char_literal215_tree=null;

        try {
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1328:2: ( '@encode' '(' IDENTIFIER ')' )
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1328:4: '@encode' '(' IDENTIFIER ')'
            {
            root_0 = (Object)adaptor.nil();

            string_literal212=(Token)match(input,88,FOLLOW_88_in_encodingExpr3893); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal212_tree = (Object)adaptor.create(string_literal212);
            adaptor.addChild(root_0, string_literal212_tree);
            }
            char_literal213=(Token)match(input,34,FOLLOW_34_in_encodingExpr3898); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal213_tree = (Object)adaptor.create(char_literal213);
            adaptor.addChild(root_0, char_literal213_tree);
            }
            IDENTIFIER214=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_encodingExpr3902); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IDENTIFIER214_tree = (Object)adaptor.create(IDENTIFIER214);
            adaptor.addChild(root_0, IDENTIFIER214_tree);
            }
            char_literal215=(Token)match(input,35,FOLLOW_35_in_encodingExpr3907); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal215_tree = (Object)adaptor.create(char_literal215);
            adaptor.addChild(root_0, char_literal215_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "encodingExpr"

    public static class assignmentExpr_return extends ParserRuleReturnScope {
        public Expression expr;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "assignmentExpr"
    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1334:1: assignmentExpr returns [Expression expr] : e= inlineCondExpr (op= assignmentOp f= assignmentExpr )? ;
    public final ObjCppParser.assignmentExpr_return assignmentExpr() throws RecognitionException {
        ObjCppParser.assignmentExpr_return retval = new ObjCppParser.assignmentExpr_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        ObjCppParser.inlineCondExpr_return e = null;

        ObjCppParser.assignmentOp_return op = null;

        ObjCppParser.assignmentExpr_return f = null;



        try {
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1335:2: (e= inlineCondExpr (op= assignmentOp f= assignmentExpr )? )
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1335:4: e= inlineCondExpr (op= assignmentOp f= assignmentExpr )?
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_inlineCondExpr_in_assignmentExpr3924);
            e=inlineCondExpr();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, e.getTree());
            if ( state.backtracking==0 ) {
               retval.expr = (e!=null?e.expr:null); 
            }
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1336:3: (op= assignmentOp f= assignmentExpr )?
            int alt99=2;
            alt99 = dfa99.predict(input);
            switch (alt99) {
                case 1 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1337:4: op= assignmentOp f= assignmentExpr
                    {
                    pushFollow(FOLLOW_assignmentOp_in_assignmentExpr3940);
                    op=assignmentOp();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, op.getTree());
                    pushFollow(FOLLOW_assignmentExpr_in_assignmentExpr3944);
                    f=assignmentExpr();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, f.getTree());
                    if ( state.backtracking==0 ) {
                       retval.expr = new AssignmentOp(retval.expr, (op!=null?op.op:null), (f!=null?f.expr:null)); 
                    }

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "assignmentExpr"

    public static class assignmentOp_return extends ParserRuleReturnScope {
        public Expression.AssignmentOperator op;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "assignmentOp"
    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1341:1: assignmentOp returns [Expression.AssignmentOperator op] : o= ( '=' | '*=' | '/=' | '%=' | '+=' | '-=' | '<<=' | '>>=' | '&=' | '^=' | '|=' ) ;
    public final ObjCppParser.assignmentOp_return assignmentOp() throws RecognitionException {
        ObjCppParser.assignmentOp_return retval = new ObjCppParser.assignmentOp_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        Token o=null;

        Object o_tree=null;

        try {
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1342:2: (o= ( '=' | '*=' | '/=' | '%=' | '+=' | '-=' | '<<=' | '>>=' | '&=' | '^=' | '|=' ) )
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1342:5: o= ( '=' | '*=' | '/=' | '%=' | '+=' | '-=' | '<<=' | '>>=' | '&=' | '^=' | '|=' )
            {
            root_0 = (Object)adaptor.nil();

            o=(Token)input.LT(1);
            if ( input.LA(1)==29||(input.LA(1)>=89 && input.LA(1)<=98) ) {
                input.consume();
                if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(o));
                state.errorRecovery=false;state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }

            if ( state.backtracking==0 ) {

              			retval.op = getAssignmentOperator((o!=null?o.getText():null));
              		
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "assignmentOp"

    public static class inlineCondExpr_return extends ParserRuleReturnScope {
        public Expression expr;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "inlineCondExpr"
    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1347:1: inlineCondExpr returns [Expression expr] : e= logOrExpr ( '?' logOrExpr ':' logOrExpr )* ;
    public final ObjCppParser.inlineCondExpr_return inlineCondExpr() throws RecognitionException {
        ObjCppParser.inlineCondExpr_return retval = new ObjCppParser.inlineCondExpr_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        Token char_literal216=null;
        Token char_literal218=null;
        ObjCppParser.logOrExpr_return e = null;

        ObjCppParser.logOrExpr_return logOrExpr217 = null;

        ObjCppParser.logOrExpr_return logOrExpr219 = null;


        Object char_literal216_tree=null;
        Object char_literal218_tree=null;

        try {
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1348:2: (e= logOrExpr ( '?' logOrExpr ':' logOrExpr )* )
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1348:4: e= logOrExpr ( '?' logOrExpr ':' logOrExpr )*
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_logOrExpr_in_inlineCondExpr4031);
            e=logOrExpr();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, e.getTree());
            if ( state.backtracking==0 ) {
               retval.expr = (e!=null?e.expr:null); 
            }
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1349:3: ( '?' logOrExpr ':' logOrExpr )*
            loop100:
            do {
                int alt100=2;
                alt100 = dfa100.predict(input);
                switch (alt100) {
            	case 1 :
            	    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1350:4: '?' logOrExpr ':' logOrExpr
            	    {
            	    char_literal216=(Token)match(input,99,FOLLOW_99_in_inlineCondExpr4043); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal216_tree = (Object)adaptor.create(char_literal216);
            	    adaptor.addChild(root_0, char_literal216_tree);
            	    }
            	    pushFollow(FOLLOW_logOrExpr_in_inlineCondExpr4048);
            	    logOrExpr217=logOrExpr();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, logOrExpr217.getTree());
            	    char_literal218=(Token)match(input,33,FOLLOW_33_in_inlineCondExpr4054); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal218_tree = (Object)adaptor.create(char_literal218);
            	    adaptor.addChild(root_0, char_literal218_tree);
            	    }
            	    pushFollow(FOLLOW_logOrExpr_in_inlineCondExpr4059);
            	    logOrExpr219=logOrExpr();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, logOrExpr219.getTree());

            	    }
            	    break;

            	default :
            	    break loop100;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "inlineCondExpr"

    public static class addExpr_return extends ParserRuleReturnScope {
        public Expression expr;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "addExpr"
    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1357:1: addExpr returns [Expression expr] : e= multExpr (op= ( '+' | '-' ) f= multExpr )* ;
    public final ObjCppParser.addExpr_return addExpr() throws RecognitionException {
        ObjCppParser.addExpr_return retval = new ObjCppParser.addExpr_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        Token op=null;
        ObjCppParser.multExpr_return e = null;

        ObjCppParser.multExpr_return f = null;


        Object op_tree=null;

        try {
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1358:2: (e= multExpr (op= ( '+' | '-' ) f= multExpr )* )
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1358:4: e= multExpr (op= ( '+' | '-' ) f= multExpr )*
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_multExpr_in_addExpr4081);
            e=multExpr();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, e.getTree());
            if ( state.backtracking==0 ) {
               retval.expr = (e!=null?e.expr:null); 
            }
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1359:3: (op= ( '+' | '-' ) f= multExpr )*
            loop101:
            do {
                int alt101=2;
                alt101 = dfa101.predict(input);
                switch (alt101) {
            	case 1 :
            	    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1360:4: op= ( '+' | '-' ) f= multExpr
            	    {
            	    op=(Token)input.LT(1);
            	    if ( (input.LA(1)>=42 && input.LA(1)<=43) ) {
            	        input.consume();
            	        if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(op));
            	        state.errorRecovery=false;state.failed=false;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return retval;}
            	        MismatchedSetException mse = new MismatchedSetException(null,input);
            	        throw mse;
            	    }

            	    pushFollow(FOLLOW_multExpr_in_addExpr4107);
            	    f=multExpr();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, f.getTree());
            	    if ( state.backtracking==0 ) {
            	       retval.expr = new BinaryOp(retval.expr, getBinaryOperator((op!=null?op.getText():null)), (f!=null?f.expr:null)); 
            	    }

            	    }
            	    break;

            	default :
            	    break loop101;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "addExpr"

    public static class multExpr_return extends ParserRuleReturnScope {
        public Expression expr;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "multExpr"
    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1365:1: multExpr returns [Expression expr] : e= castExpr (op= ( '%' | '*' | '/' ) f= castExpr )* ;
    public final ObjCppParser.multExpr_return multExpr() throws RecognitionException {
        ObjCppParser.multExpr_return retval = new ObjCppParser.multExpr_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        Token op=null;
        ObjCppParser.castExpr_return e = null;

        ObjCppParser.castExpr_return f = null;


        Object op_tree=null;

        try {
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1366:2: (e= castExpr (op= ( '%' | '*' | '/' ) f= castExpr )* )
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1366:4: e= castExpr (op= ( '%' | '*' | '/' ) f= castExpr )*
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_castExpr_in_multExpr4131);
            e=castExpr();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, e.getTree());
            if ( state.backtracking==0 ) {
               retval.expr = (e!=null?e.expr:null); 
            }
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1367:3: (op= ( '%' | '*' | '/' ) f= castExpr )*
            loop102:
            do {
                int alt102=2;
                alt102 = dfa102.predict(input);
                switch (alt102) {
            	case 1 :
            	    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1368:4: op= ( '%' | '*' | '/' ) f= castExpr
            	    {
            	    op=(Token)input.LT(1);
            	    if ( input.LA(1)==51||(input.LA(1)>=75 && input.LA(1)<=76) ) {
            	        input.consume();
            	        if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(op));
            	        state.errorRecovery=false;state.failed=false;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return retval;}
            	        MismatchedSetException mse = new MismatchedSetException(null,input);
            	        throw mse;
            	    }

            	    pushFollow(FOLLOW_castExpr_in_multExpr4163);
            	    f=castExpr();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, f.getTree());
            	    if ( state.backtracking==0 ) {
            	       retval.expr = new BinaryOp(retval.expr, getBinaryOperator((op!=null?op.getText():null)), (f!=null?f.expr:null)); 
            	    }

            	    }
            	    break;

            	default :
            	    break loop102;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "multExpr"

    public static class bitOrExpr_return extends ParserRuleReturnScope {
        public Expression expr;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "bitOrExpr"
    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1373:1: bitOrExpr returns [Expression expr] : e= xorExpr (op= '|' f= xorExpr )* ;
    public final ObjCppParser.bitOrExpr_return bitOrExpr() throws RecognitionException {
        ObjCppParser.bitOrExpr_return retval = new ObjCppParser.bitOrExpr_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        Token op=null;
        ObjCppParser.xorExpr_return e = null;

        ObjCppParser.xorExpr_return f = null;


        Object op_tree=null;

        try {
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1374:2: (e= xorExpr (op= '|' f= xorExpr )* )
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1374:4: e= xorExpr (op= '|' f= xorExpr )*
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_xorExpr_in_bitOrExpr4187);
            e=xorExpr();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, e.getTree());
            if ( state.backtracking==0 ) {
               retval.expr = (e!=null?e.expr:null); 
            }
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1375:3: (op= '|' f= xorExpr )*
            loop103:
            do {
                int alt103=2;
                alt103 = dfa103.predict(input);
                switch (alt103) {
            	case 1 :
            	    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1376:4: op= '|' f= xorExpr
            	    {
            	    op=(Token)match(input,81,FOLLOW_81_in_bitOrExpr4201); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    op_tree = (Object)adaptor.create(op);
            	    adaptor.addChild(root_0, op_tree);
            	    }
            	    pushFollow(FOLLOW_xorExpr_in_bitOrExpr4208);
            	    f=xorExpr();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, f.getTree());
            	    if ( state.backtracking==0 ) {
            	       retval.expr = new BinaryOp(retval.expr, getBinaryOperator((op!=null?op.getText():null)), (f!=null?f.expr:null)); 
            	    }

            	    }
            	    break;

            	default :
            	    break loop103;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "bitOrExpr"

    public static class bitAndExpr_return extends ParserRuleReturnScope {
        public Expression expr;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "bitAndExpr"
    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1381:1: bitAndExpr returns [Expression expr] : e= equalExpr (op= '&' f= equalExpr )* ;
    public final ObjCppParser.bitAndExpr_return bitAndExpr() throws RecognitionException {
        ObjCppParser.bitAndExpr_return retval = new ObjCppParser.bitAndExpr_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        Token op=null;
        ObjCppParser.equalExpr_return e = null;

        ObjCppParser.equalExpr_return f = null;


        Object op_tree=null;

        try {
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1382:2: (e= equalExpr (op= '&' f= equalExpr )* )
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1382:4: e= equalExpr (op= '&' f= equalExpr )*
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_equalExpr_in_bitAndExpr4232);
            e=equalExpr();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, e.getTree());
            if ( state.backtracking==0 ) {
               retval.expr = (e!=null?e.expr:null); 
            }
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1383:3: (op= '&' f= equalExpr )*
            loop104:
            do {
                int alt104=2;
                alt104 = dfa104.predict(input);
                switch (alt104) {
            	case 1 :
            	    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1384:4: op= '&' f= equalExpr
            	    {
            	    op=(Token)match(input,52,FOLLOW_52_in_bitAndExpr4245); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    op_tree = (Object)adaptor.create(op);
            	    adaptor.addChild(root_0, op_tree);
            	    }
            	    pushFollow(FOLLOW_equalExpr_in_bitAndExpr4252);
            	    f=equalExpr();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, f.getTree());
            	    if ( state.backtracking==0 ) {
            	       retval.expr = new BinaryOp(retval.expr, getBinaryOperator((op!=null?op.getText():null)), (f!=null?f.expr:null)); 
            	    }

            	    }
            	    break;

            	default :
            	    break loop104;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "bitAndExpr"

    public static class shiftExpr_return extends ParserRuleReturnScope {
        public Expression expr;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "shiftExpr"
    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1390:1: shiftExpr returns [Expression expr] : e= addExpr (op= ( '>>' | '<<' ) f= addExpr )* ;
    public final ObjCppParser.shiftExpr_return shiftExpr() throws RecognitionException {
        ObjCppParser.shiftExpr_return retval = new ObjCppParser.shiftExpr_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        Token op=null;
        ObjCppParser.addExpr_return e = null;

        ObjCppParser.addExpr_return f = null;


        Object op_tree=null;

        try {
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1391:2: (e= addExpr (op= ( '>>' | '<<' ) f= addExpr )* )
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1391:4: e= addExpr (op= ( '>>' | '<<' ) f= addExpr )*
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_addExpr_in_shiftExpr4277);
            e=addExpr();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, e.getTree());
            if ( state.backtracking==0 ) {
               retval.expr = (e!=null?e.expr:null); 
            }
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1392:3: (op= ( '>>' | '<<' ) f= addExpr )*
            loop105:
            do {
                int alt105=2;
                alt105 = dfa105.predict(input);
                switch (alt105) {
            	case 1 :
            	    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1393:4: op= ( '>>' | '<<' ) f= addExpr
            	    {
            	    op=(Token)input.LT(1);
            	    if ( input.LA(1)==77||input.LA(1)==79 ) {
            	        input.consume();
            	        if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(op));
            	        state.errorRecovery=false;state.failed=false;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return retval;}
            	        MismatchedSetException mse = new MismatchedSetException(null,input);
            	        throw mse;
            	    }

            	    pushFollow(FOLLOW_addExpr_in_shiftExpr4303);
            	    f=addExpr();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, f.getTree());
            	    if ( state.backtracking==0 ) {
            	       retval.expr = new BinaryOp(retval.expr, getBinaryOperator((op!=null?op.getText():null)), (f!=null?f.expr:null)); 
            	    }

            	    }
            	    break;

            	default :
            	    break loop105;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "shiftExpr"

    public static class xorExpr_return extends ParserRuleReturnScope {
        public Expression expr;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "xorExpr"
    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1398:1: xorExpr returns [Expression expr] : e= bitAndExpr (op= '^' f= bitAndExpr )* ;
    public final ObjCppParser.xorExpr_return xorExpr() throws RecognitionException {
        ObjCppParser.xorExpr_return retval = new ObjCppParser.xorExpr_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        Token op=null;
        ObjCppParser.bitAndExpr_return e = null;

        ObjCppParser.bitAndExpr_return f = null;


        Object op_tree=null;

        try {
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1399:2: (e= bitAndExpr (op= '^' f= bitAndExpr )* )
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1399:4: e= bitAndExpr (op= '^' f= bitAndExpr )*
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_bitAndExpr_in_xorExpr4327);
            e=bitAndExpr();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, e.getTree());
            if ( state.backtracking==0 ) {
               retval.expr = (e!=null?e.expr:null); 
            }
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1400:3: (op= '^' f= bitAndExpr )*
            loop106:
            do {
                int alt106=2;
                alt106 = dfa106.predict(input);
                switch (alt106) {
            	case 1 :
            	    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1401:4: op= '^' f= bitAndExpr
            	    {
            	    op=(Token)match(input,58,FOLLOW_58_in_xorExpr4340); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    op_tree = (Object)adaptor.create(op);
            	    adaptor.addChild(root_0, op_tree);
            	    }
            	    pushFollow(FOLLOW_bitAndExpr_in_xorExpr4347);
            	    f=bitAndExpr();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, f.getTree());
            	    if ( state.backtracking==0 ) {
            	       retval.expr = new BinaryOp(retval.expr, getBinaryOperator((op!=null?op.getText():null)), (f!=null?f.expr:null)); 
            	    }

            	    }
            	    break;

            	default :
            	    break loop106;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "xorExpr"

    public static class logOrExpr_return extends ParserRuleReturnScope {
        public Expression expr;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "logOrExpr"
    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1406:1: logOrExpr returns [Expression expr] : e= logAndExpr (op= '||' f= logAndExpr )* ;
    public final ObjCppParser.logOrExpr_return logOrExpr() throws RecognitionException {
        ObjCppParser.logOrExpr_return retval = new ObjCppParser.logOrExpr_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        Token op=null;
        ObjCppParser.logAndExpr_return e = null;

        ObjCppParser.logAndExpr_return f = null;


        Object op_tree=null;

        try {
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1407:2: (e= logAndExpr (op= '||' f= logAndExpr )* )
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1407:4: e= logAndExpr (op= '||' f= logAndExpr )*
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_logAndExpr_in_logOrExpr4371);
            e=logAndExpr();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, e.getTree());
            if ( state.backtracking==0 ) {
               retval.expr = (e!=null?e.expr:null); 
            }
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1408:3: (op= '||' f= logAndExpr )*
            loop107:
            do {
                int alt107=2;
                alt107 = dfa107.predict(input);
                switch (alt107) {
            	case 1 :
            	    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1409:4: op= '||' f= logAndExpr
            	    {
            	    op=(Token)match(input,80,FOLLOW_80_in_logOrExpr4384); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    op_tree = (Object)adaptor.create(op);
            	    adaptor.addChild(root_0, op_tree);
            	    }
            	    pushFollow(FOLLOW_logAndExpr_in_logOrExpr4391);
            	    f=logAndExpr();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, f.getTree());
            	    if ( state.backtracking==0 ) {
            	       retval.expr = new BinaryOp(retval.expr, getBinaryOperator((op!=null?op.getText():null)), (f!=null?f.expr:null)); 
            	    }

            	    }
            	    break;

            	default :
            	    break loop107;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "logOrExpr"

    public static class logAndExpr_return extends ParserRuleReturnScope {
        public Expression expr;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "logAndExpr"
    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1414:1: logAndExpr returns [Expression expr] : e= bitOrExpr (op= '&&' f= bitOrExpr )* ;
    public final ObjCppParser.logAndExpr_return logAndExpr() throws RecognitionException {
        ObjCppParser.logAndExpr_return retval = new ObjCppParser.logAndExpr_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        Token op=null;
        ObjCppParser.bitOrExpr_return e = null;

        ObjCppParser.bitOrExpr_return f = null;


        Object op_tree=null;

        try {
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1415:2: (e= bitOrExpr (op= '&&' f= bitOrExpr )* )
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1415:4: e= bitOrExpr (op= '&&' f= bitOrExpr )*
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_bitOrExpr_in_logAndExpr4415);
            e=bitOrExpr();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, e.getTree());
            if ( state.backtracking==0 ) {
               retval.expr = (e!=null?e.expr:null); 
            }
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1416:3: (op= '&&' f= bitOrExpr )*
            loop108:
            do {
                int alt108=2;
                alt108 = dfa108.predict(input);
                switch (alt108) {
            	case 1 :
            	    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1417:4: op= '&&' f= bitOrExpr
            	    {
            	    op=(Token)match(input,82,FOLLOW_82_in_logAndExpr4428); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    op_tree = (Object)adaptor.create(op);
            	    adaptor.addChild(root_0, op_tree);
            	    }
            	    pushFollow(FOLLOW_bitOrExpr_in_logAndExpr4435);
            	    f=bitOrExpr();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, f.getTree());
            	    if ( state.backtracking==0 ) {
            	       retval.expr = new BinaryOp(retval.expr, getBinaryOperator((op!=null?op.getText():null)), (f!=null?f.expr:null)); 
            	    }

            	    }
            	    break;

            	default :
            	    break loop108;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "logAndExpr"

    public static class equalExpr_return extends ParserRuleReturnScope {
        public Expression expr;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "equalExpr"
    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1422:1: equalExpr returns [Expression expr] : e= compareExpr (op= ( '!=' | '==' ) f= compareExpr )* ;
    public final ObjCppParser.equalExpr_return equalExpr() throws RecognitionException {
        ObjCppParser.equalExpr_return retval = new ObjCppParser.equalExpr_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        Token op=null;
        ObjCppParser.compareExpr_return e = null;

        ObjCppParser.compareExpr_return f = null;


        Object op_tree=null;

        try {
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1423:2: (e= compareExpr (op= ( '!=' | '==' ) f= compareExpr )* )
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1423:4: e= compareExpr (op= ( '!=' | '==' ) f= compareExpr )*
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_compareExpr_in_equalExpr4459);
            e=compareExpr();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, e.getTree());
            if ( state.backtracking==0 ) {
               retval.expr = (e!=null?e.expr:null); 
            }
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1424:3: (op= ( '!=' | '==' ) f= compareExpr )*
            loop109:
            do {
                int alt109=2;
                alt109 = dfa109.predict(input);
                switch (alt109) {
            	case 1 :
            	    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1425:4: op= ( '!=' | '==' ) f= compareExpr
            	    {
            	    op=(Token)input.LT(1);
            	    if ( (input.LA(1)>=85 && input.LA(1)<=86) ) {
            	        input.consume();
            	        if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(op));
            	        state.errorRecovery=false;state.failed=false;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return retval;}
            	        MismatchedSetException mse = new MismatchedSetException(null,input);
            	        throw mse;
            	    }

            	    pushFollow(FOLLOW_compareExpr_in_equalExpr4485);
            	    f=compareExpr();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, f.getTree());
            	    if ( state.backtracking==0 ) {
            	       retval.expr = new BinaryOp(retval.expr, getBinaryOperator((op!=null?op.getText():null)), (f!=null?f.expr:null)); 
            	    }

            	    }
            	    break;

            	default :
            	    break loop109;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "equalExpr"

    public static class compareExpr_return extends ParserRuleReturnScope {
        public Expression expr;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "compareExpr"
    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1430:1: compareExpr returns [Expression expr] : e= shiftExpr (op= ( '<' | '<=' | '>' | '>=' ) f= shiftExpr )* ;
    public final ObjCppParser.compareExpr_return compareExpr() throws RecognitionException {
        ObjCppParser.compareExpr_return retval = new ObjCppParser.compareExpr_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        Token op=null;
        ObjCppParser.shiftExpr_return e = null;

        ObjCppParser.shiftExpr_return f = null;


        Object op_tree=null;

        try {
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1431:2: (e= shiftExpr (op= ( '<' | '<=' | '>' | '>=' ) f= shiftExpr )* )
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1431:4: e= shiftExpr (op= ( '<' | '<=' | '>' | '>=' ) f= shiftExpr )*
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_shiftExpr_in_compareExpr4509);
            e=shiftExpr();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, e.getTree());
            if ( state.backtracking==0 ) {
               retval.expr = (e!=null?e.expr:null); 
            }
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1432:3: (op= ( '<' | '<=' | '>' | '>=' ) f= shiftExpr )*
            loop110:
            do {
                int alt110=2;
                alt110 = dfa110.predict(input);
                switch (alt110) {
            	case 1 :
            	    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1433:4: op= ( '<' | '<=' | '>' | '>=' ) f= shiftExpr
            	    {
            	    op=(Token)input.LT(1);
            	    if ( (input.LA(1)>=36 && input.LA(1)<=37)||(input.LA(1)>=83 && input.LA(1)<=84) ) {
            	        input.consume();
            	        if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(op));
            	        state.errorRecovery=false;state.failed=false;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return retval;}
            	        MismatchedSetException mse = new MismatchedSetException(null,input);
            	        throw mse;
            	    }

            	    pushFollow(FOLLOW_shiftExpr_in_compareExpr4544);
            	    f=shiftExpr();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, f.getTree());
            	    if ( state.backtracking==0 ) {
            	       retval.expr = new BinaryOp(retval.expr, getBinaryOperator((op!=null?op.getText():null)), (f!=null?f.expr:null)); 
            	    }

            	    }
            	    break;

            	default :
            	    break loop110;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "compareExpr"

    public static class castExpr_return extends ParserRuleReturnScope {
        public Expression expr;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "castExpr"
    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1438:1: castExpr returns [Expression expr] : ( '(' typeRef ')' inner= castExpr | e= unaryExpr );
    public final ObjCppParser.castExpr_return castExpr() throws RecognitionException {
        ObjCppParser.castExpr_return retval = new ObjCppParser.castExpr_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        Token char_literal220=null;
        Token char_literal222=null;
        ObjCppParser.castExpr_return inner = null;

        ObjCppParser.unaryExpr_return e = null;

        ObjCppParser.typeRef_return typeRef221 = null;


        Object char_literal220_tree=null;
        Object char_literal222_tree=null;

        try {
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1439:2: ( '(' typeRef ')' inner= castExpr | e= unaryExpr )
            int alt111=2;
            alt111 = dfa111.predict(input);
            switch (alt111) {
                case 1 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1439:4: '(' typeRef ')' inner= castExpr
                    {
                    root_0 = (Object)adaptor.nil();

                    char_literal220=(Token)match(input,34,FOLLOW_34_in_castExpr4566); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal220_tree = (Object)adaptor.create(char_literal220);
                    adaptor.addChild(root_0, char_literal220_tree);
                    }
                    pushFollow(FOLLOW_typeRef_in_castExpr4568);
                    typeRef221=typeRef();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, typeRef221.getTree());
                    char_literal222=(Token)match(input,35,FOLLOW_35_in_castExpr4570); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal222_tree = (Object)adaptor.create(char_literal222);
                    adaptor.addChild(root_0, char_literal222_tree);
                    }
                    pushFollow(FOLLOW_castExpr_in_castExpr4574);
                    inner=castExpr();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, inner.getTree());
                    if ( state.backtracking==0 ) {
                       retval.expr = new Cast((typeRef221!=null?typeRef221.type:null), (inner!=null?inner.expr:null)); 
                    }

                    }
                    break;
                case 2 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1440:3: e= unaryExpr
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_unaryExpr_in_castExpr4585);
                    e=unaryExpr();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, e.getTree());
                    if ( state.backtracking==0 ) {
                       retval.expr = (e!=null?e.expr:null); 
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "castExpr"

    public static class unaryExpr_return extends ParserRuleReturnScope {
        public Expression expr;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "unaryExpr"
    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1443:1: unaryExpr returns [Expression expr] : (p= postfixExpr | unaryOp castExpr | 'sizeof' ( '(' typeRef ')' | unaryExpr ) );
    public final ObjCppParser.unaryExpr_return unaryExpr() throws RecognitionException {
        ObjCppParser.unaryExpr_return retval = new ObjCppParser.unaryExpr_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        Token string_literal225=null;
        Token char_literal226=null;
        Token char_literal228=null;
        ObjCppParser.postfixExpr_return p = null;

        ObjCppParser.unaryOp_return unaryOp223 = null;

        ObjCppParser.castExpr_return castExpr224 = null;

        ObjCppParser.typeRef_return typeRef227 = null;

        ObjCppParser.unaryExpr_return unaryExpr229 = null;


        Object string_literal225_tree=null;
        Object char_literal226_tree=null;
        Object char_literal228_tree=null;

        try {
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1444:2: (p= postfixExpr | unaryOp castExpr | 'sizeof' ( '(' typeRef ')' | unaryExpr ) )
            int alt113=3;
            alt113 = dfa113.predict(input);
            switch (alt113) {
                case 1 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1445:3: p= postfixExpr
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_postfixExpr_in_unaryExpr4607);
                    p=postfixExpr();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, p.getTree());
                    if ( state.backtracking==0 ) {
                       retval.expr = (p!=null?p.expr:null); 
                    }

                    }
                    break;
                case 2 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1446:3: unaryOp castExpr
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_unaryOp_in_unaryExpr4615);
                    unaryOp223=unaryOp();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, unaryOp223.getTree());
                    pushFollow(FOLLOW_castExpr_in_unaryExpr4617);
                    castExpr224=castExpr();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, castExpr224.getTree());
                    if ( state.backtracking==0 ) {
                       retval.expr = new UnaryOp((castExpr224!=null?castExpr224.expr:null), Expression.getUnaryOperator((unaryOp223!=null?input.toString(unaryOp223.start,unaryOp223.stop):null))); 
                    }

                    }
                    break;
                case 3 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1447:3: 'sizeof' ( '(' typeRef ')' | unaryExpr )
                    {
                    root_0 = (Object)adaptor.nil();

                    string_literal225=(Token)match(input,100,FOLLOW_100_in_unaryExpr4625); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal225_tree = (Object)adaptor.create(string_literal225);
                    adaptor.addChild(root_0, string_literal225_tree);
                    }
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1447:12: ( '(' typeRef ')' | unaryExpr )
                    int alt112=2;
                    alt112 = dfa112.predict(input);
                    switch (alt112) {
                        case 1 :
                            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1448:4: '(' typeRef ')'
                            {
                            char_literal226=(Token)match(input,34,FOLLOW_34_in_unaryExpr4632); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            char_literal226_tree = (Object)adaptor.create(char_literal226);
                            adaptor.addChild(root_0, char_literal226_tree);
                            }
                            pushFollow(FOLLOW_typeRef_in_unaryExpr4634);
                            typeRef227=typeRef();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, typeRef227.getTree());
                            char_literal228=(Token)match(input,35,FOLLOW_35_in_unaryExpr4636); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            char_literal228_tree = (Object)adaptor.create(char_literal228);
                            adaptor.addChild(root_0, char_literal228_tree);
                            }

                            }
                            break;
                        case 2 :
                            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1449:4: unaryExpr
                            {
                            pushFollow(FOLLOW_unaryExpr_in_unaryExpr4644);
                            unaryExpr229=unaryExpr();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, unaryExpr229.getTree());

                            }
                            break;

                    }


                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "unaryExpr"

    public static class unaryOp_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "unaryOp"
    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1453:1: unaryOp : ( '++' | '--' | '&' | '*' | '-' | '~' | '!' );
    public final ObjCppParser.unaryOp_return unaryOp() throws RecognitionException {
        ObjCppParser.unaryOp_return retval = new ObjCppParser.unaryOp_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        Token set230=null;

        Object set230_tree=null;

        try {
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1453:9: ( '++' | '--' | '&' | '*' | '-' | '~' | '!' )
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:
            {
            root_0 = (Object)adaptor.nil();

            set230=(Token)input.LT(1);
            if ( input.LA(1)==43||(input.LA(1)>=51 && input.LA(1)<=52)||(input.LA(1)>=101 && input.LA(1)<=104) ) {
                input.consume();
                if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set230));
                state.errorRecovery=false;state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "unaryOp"

    public static class postfixExpr_return extends ParserRuleReturnScope {
        public Expression expr;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "postfixExpr"
    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1455:1: postfixExpr returns [Expression expr] : baseExpression ( '[' expression ']' | '(' ( topLevelExprList )? ')' | '.' di= IDENTIFIER | '->' ai= IDENTIFIER | '++' | '--' )* ;
    public final ObjCppParser.postfixExpr_return postfixExpr() throws RecognitionException {
        ObjCppParser.postfixExpr_return retval = new ObjCppParser.postfixExpr_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        Token di=null;
        Token ai=null;
        Token char_literal232=null;
        Token char_literal234=null;
        Token char_literal235=null;
        Token char_literal237=null;
        Token char_literal238=null;
        Token string_literal239=null;
        Token string_literal240=null;
        Token string_literal241=null;
        ObjCppParser.baseExpression_return baseExpression231 = null;

        ObjCppParser.expression_return expression233 = null;

        ObjCppParser.topLevelExprList_return topLevelExprList236 = null;


        Object di_tree=null;
        Object ai_tree=null;
        Object char_literal232_tree=null;
        Object char_literal234_tree=null;
        Object char_literal235_tree=null;
        Object char_literal237_tree=null;
        Object char_literal238_tree=null;
        Object string_literal239_tree=null;
        Object string_literal240_tree=null;
        Object string_literal241_tree=null;

        try {
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1456:2: ( baseExpression ( '[' expression ']' | '(' ( topLevelExprList )? ')' | '.' di= IDENTIFIER | '->' ai= IDENTIFIER | '++' | '--' )* )
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1457:3: baseExpression ( '[' expression ']' | '(' ( topLevelExprList )? ')' | '.' di= IDENTIFIER | '->' ai= IDENTIFIER | '++' | '--' )*
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_baseExpression_in_postfixExpr4701);
            baseExpression231=baseExpression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, baseExpression231.getTree());
            if ( state.backtracking==0 ) {
               retval.expr = (baseExpression231!=null?baseExpression231.expr:null); 
            }
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1458:3: ( '[' expression ']' | '(' ( topLevelExprList )? ')' | '.' di= IDENTIFIER | '->' ai= IDENTIFIER | '++' | '--' )*
            loop115:
            do {
                int alt115=7;
                alt115 = dfa115.predict(input);
                switch (alt115) {
            	case 1 :
            	    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1459:4: '[' expression ']'
            	    {
            	    char_literal232=(Token)match(input,53,FOLLOW_53_in_postfixExpr4712); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal232_tree = (Object)adaptor.create(char_literal232);
            	    adaptor.addChild(root_0, char_literal232_tree);
            	    }
            	    pushFollow(FOLLOW_expression_in_postfixExpr4714);
            	    expression233=expression();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression233.getTree());
            	    char_literal234=(Token)match(input,54,FOLLOW_54_in_postfixExpr4716); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal234_tree = (Object)adaptor.create(char_literal234);
            	    adaptor.addChild(root_0, char_literal234_tree);
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	      				retval.expr = new ArrayAccess(retval.expr, (expression233!=null?expression233.expr:null)); 
            	      			
            	    }

            	    }
            	    break;
            	case 2 :
            	    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1462:4: '(' ( topLevelExprList )? ')'
            	    {
            	    char_literal235=(Token)match(input,34,FOLLOW_34_in_postfixExpr4725); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal235_tree = (Object)adaptor.create(char_literal235);
            	    adaptor.addChild(root_0, char_literal235_tree);
            	    }
            	    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1462:8: ( topLevelExprList )?
            	    int alt114=2;
            	    alt114 = dfa114.predict(input);
            	    switch (alt114) {
            	        case 1 :
            	            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:0:0: topLevelExprList
            	            {
            	            pushFollow(FOLLOW_topLevelExprList_in_postfixExpr4727);
            	            topLevelExprList236=topLevelExprList();

            	            state._fsp--;
            	            if (state.failed) return retval;
            	            if ( state.backtracking==0 ) adaptor.addChild(root_0, topLevelExprList236.getTree());

            	            }
            	            break;

            	    }

            	    char_literal237=(Token)match(input,35,FOLLOW_35_in_postfixExpr4730); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal237_tree = (Object)adaptor.create(char_literal237);
            	    adaptor.addChild(root_0, char_literal237_tree);
            	    }
            	    if ( state.backtracking==0 ) {

            	      				FunctionCall fc = new FunctionCall(retval.expr);
            	      				if ((topLevelExprList236!=null?topLevelExprList236.exprs:null) != null)
            	      					for (Expression x : (topLevelExprList236!=null?topLevelExprList236.exprs:null))
            	      						fc.addArgument(x);
            	      				retval.expr = fc;
            	      			
            	    }

            	    }
            	    break;
            	case 3 :
            	    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1469:4: '.' di= IDENTIFIER
            	    {
            	    char_literal238=(Token)match(input,105,FOLLOW_105_in_postfixExpr4739); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal238_tree = (Object)adaptor.create(char_literal238);
            	    adaptor.addChild(root_0, char_literal238_tree);
            	    }
            	    di=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_postfixExpr4743); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    di_tree = (Object)adaptor.create(di);
            	    adaptor.addChild(root_0, di_tree);
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	      				retval.expr = new MemberRef(retval.expr, MemberRefStyle.Dot, (di!=null?di.getText():null)); 
            	      			
            	    }

            	    }
            	    break;
            	case 4 :
            	    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1472:4: '->' ai= IDENTIFIER
            	    {
            	    string_literal239=(Token)match(input,106,FOLLOW_106_in_postfixExpr4752); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    string_literal239_tree = (Object)adaptor.create(string_literal239);
            	    adaptor.addChild(root_0, string_literal239_tree);
            	    }
            	    ai=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_postfixExpr4756); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    ai_tree = (Object)adaptor.create(ai);
            	    adaptor.addChild(root_0, ai_tree);
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	      				retval.expr = new MemberRef(retval.expr, MemberRefStyle.Arrow, (ai!=null?ai.getText():null)); 
            	      			
            	    }

            	    }
            	    break;
            	case 5 :
            	    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1475:4: '++'
            	    {
            	    string_literal240=(Token)match(input,101,FOLLOW_101_in_postfixExpr4765); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    string_literal240_tree = (Object)adaptor.create(string_literal240);
            	    adaptor.addChild(root_0, string_literal240_tree);
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	      				retval.expr = new UnaryOp(retval.expr, UnaryOperator.PostIncr); 
            	      			
            	    }

            	    }
            	    break;
            	case 6 :
            	    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1478:4: '--'
            	    {
            	    string_literal241=(Token)match(input,102,FOLLOW_102_in_postfixExpr4774); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    string_literal241_tree = (Object)adaptor.create(string_literal241);
            	    adaptor.addChild(root_0, string_literal241_tree);
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	      				retval.expr = new UnaryOp(retval.expr, UnaryOperator.PostDecr); 
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop115;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "postfixExpr"

    public static class topLevelExpr_return extends ParserRuleReturnScope {
        public Expression expr;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "topLevelExpr"
    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1484:1: topLevelExpr returns [Expression expr] : e= assignmentExpr ;
    public final ObjCppParser.topLevelExpr_return topLevelExpr() throws RecognitionException {
        ObjCppParser.topLevelExpr_return retval = new ObjCppParser.topLevelExpr_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        ObjCppParser.assignmentExpr_return e = null;



        try {
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1485:2: (e= assignmentExpr )
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1485:4: e= assignmentExpr
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_assignmentExpr_in_topLevelExpr4798);
            e=assignmentExpr();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, e.getTree());
            if ( state.backtracking==0 ) {
               retval.expr = (e!=null?e.expr:null); 
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "topLevelExpr"

    public static class topLevelExprList_return extends ParserRuleReturnScope {
        public List<Expression> exprs;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "topLevelExprList"
    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1487:1: topLevelExprList returns [List<Expression> exprs] : e= topLevelExpr ( ',' f= topLevelExpr )* ;
    public final ObjCppParser.topLevelExprList_return topLevelExprList() throws RecognitionException {
        ObjCppParser.topLevelExprList_return retval = new ObjCppParser.topLevelExprList_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        Token char_literal242=null;
        ObjCppParser.topLevelExpr_return e = null;

        ObjCppParser.topLevelExpr_return f = null;


        Object char_literal242_tree=null;

        try {
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1488:2: (e= topLevelExpr ( ',' f= topLevelExpr )* )
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1489:3: e= topLevelExpr ( ',' f= topLevelExpr )*
            {
            root_0 = (Object)adaptor.nil();

            if ( state.backtracking==0 ) {
               retval.exprs = new ArrayList<Expression>(); 
            }
            pushFollow(FOLLOW_topLevelExpr_in_topLevelExprList4823);
            e=topLevelExpr();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, e.getTree());
            if ( state.backtracking==0 ) {
               retval.exprs.add((e!=null?e.expr:null)); 
            }
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1491:3: ( ',' f= topLevelExpr )*
            loop116:
            do {
                int alt116=2;
                alt116 = dfa116.predict(input);
                switch (alt116) {
            	case 1 :
            	    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1492:4: ',' f= topLevelExpr
            	    {
            	    char_literal242=(Token)match(input,27,FOLLOW_27_in_topLevelExprList4834); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal242_tree = (Object)adaptor.create(char_literal242);
            	    adaptor.addChild(root_0, char_literal242_tree);
            	    }
            	    pushFollow(FOLLOW_topLevelExpr_in_topLevelExprList4841);
            	    f=topLevelExpr();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, f.getTree());
            	    if ( state.backtracking==0 ) {
            	       retval.exprs.add((f!=null?f.expr:null)); 
            	    }

            	    }
            	    break;

            	default :
            	    break loop116;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "topLevelExprList"

    public static class expression_return extends ParserRuleReturnScope {
        public Expression expr;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "expression"
    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1497:1: expression returns [Expression expr] : l= topLevelExprList ;
    public final ObjCppParser.expression_return expression() throws RecognitionException {
        ObjCppParser.expression_return retval = new ObjCppParser.expression_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        ObjCppParser.topLevelExprList_return l = null;



        try {
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1498:2: (l= topLevelExprList )
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1498:4: l= topLevelExprList
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_topLevelExprList_in_expression4865);
            l=topLevelExprList();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, l.getTree());
            if ( state.backtracking==0 ) {

              			if ((l!=null?l.exprs:null) != null) {
              				if ((l!=null?l.exprs:null).size() == 1)
              					retval.expr = (l!=null?l.exprs:null).get(0);
              				else
              					retval.expr = new ExpressionSequence((l!=null?l.exprs:null));
              			}
              		
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "expression"

    public static class statementsBlock_return extends ParserRuleReturnScope {
        public Block stat;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "statementsBlock"
    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1509:1: statementsBlock returns [Block stat] : '{' ( statement )* '}' ;
    public final ObjCppParser.statementsBlock_return statementsBlock() throws RecognitionException {
        ObjCppParser.statementsBlock_return retval = new ObjCppParser.statementsBlock_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        Token char_literal243=null;
        Token char_literal245=null;
        ObjCppParser.statement_return statement244 = null;


        Object char_literal243_tree=null;
        Object char_literal245_tree=null;

        try {
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1510:2: ( '{' ( statement )* '}' )
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1510:4: '{' ( statement )* '}'
            {
            root_0 = (Object)adaptor.nil();

            if ( state.backtracking==0 ) {
               retval.stat = new Block(); 
            }
            char_literal243=(Token)match(input,23,FOLLOW_23_in_statementsBlock4888); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal243_tree = (Object)adaptor.create(char_literal243);
            adaptor.addChild(root_0, char_literal243_tree);
            }
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1512:3: ( statement )*
            loop117:
            do {
                int alt117=2;
                alt117 = dfa117.predict(input);
                switch (alt117) {
            	case 1 :
            	    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1513:4: statement
            	    {
            	    pushFollow(FOLLOW_statement_in_statementsBlock4898);
            	    statement244=statement();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, statement244.getTree());
            	    if ( state.backtracking==0 ) {

            	      				retval.stat.addStatement((statement244!=null?statement244.stat:null));
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop117;
                }
            } while (true);

            char_literal245=(Token)match(input,24,FOLLOW_24_in_statementsBlock4910); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal245_tree = (Object)adaptor.create(char_literal245);
            adaptor.addChild(root_0, char_literal245_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "statementsBlock"

    public static class statement_return extends ParserRuleReturnScope {
        public Statement stat;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "statement"
    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1519:1: statement returns [Statement stat] : (b= statementsBlock | declaration | es= expression ';' | rt= 'return' rex= expression ';' | 'if' '(' expression ')' statement ( 'else' statement )? | 'while' '(' expression ')' statement | 'do' statement 'while' '(' expression ')' ';' | 'for' '(' ( statement )? ';' ( expression )? ';' ( statement )? ')' statement | 'switch' '(' expression ')' '{' ( 'case' expression ':' | statement )* '}' | ';' | {...}? IDENTIFIER '(' varDecl ':' expression ')' statement );
    public final ObjCppParser.statement_return statement() throws RecognitionException {
        ObjCppParser.statement_return retval = new ObjCppParser.statement_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        Token rt=null;
        Token char_literal247=null;
        Token char_literal248=null;
        Token string_literal249=null;
        Token char_literal250=null;
        Token char_literal252=null;
        Token string_literal254=null;
        Token string_literal256=null;
        Token char_literal257=null;
        Token char_literal259=null;
        Token string_literal261=null;
        Token string_literal263=null;
        Token char_literal264=null;
        Token char_literal266=null;
        Token char_literal267=null;
        Token string_literal268=null;
        Token char_literal269=null;
        Token char_literal271=null;
        Token char_literal273=null;
        Token char_literal275=null;
        Token string_literal277=null;
        Token char_literal278=null;
        Token char_literal280=null;
        Token char_literal281=null;
        Token string_literal282=null;
        Token char_literal284=null;
        Token char_literal286=null;
        Token char_literal287=null;
        Token IDENTIFIER288=null;
        Token char_literal289=null;
        Token char_literal291=null;
        Token char_literal293=null;
        ObjCppParser.statementsBlock_return b = null;

        ObjCppParser.expression_return es = null;

        ObjCppParser.expression_return rex = null;

        ObjCppParser.declaration_return declaration246 = null;

        ObjCppParser.expression_return expression251 = null;

        ObjCppParser.statement_return statement253 = null;

        ObjCppParser.statement_return statement255 = null;

        ObjCppParser.expression_return expression258 = null;

        ObjCppParser.statement_return statement260 = null;

        ObjCppParser.statement_return statement262 = null;

        ObjCppParser.expression_return expression265 = null;

        ObjCppParser.statement_return statement270 = null;

        ObjCppParser.expression_return expression272 = null;

        ObjCppParser.statement_return statement274 = null;

        ObjCppParser.statement_return statement276 = null;

        ObjCppParser.expression_return expression279 = null;

        ObjCppParser.expression_return expression283 = null;

        ObjCppParser.statement_return statement285 = null;

        ObjCppParser.varDecl_return varDecl290 = null;

        ObjCppParser.expression_return expression292 = null;

        ObjCppParser.statement_return statement294 = null;


        Object rt_tree=null;
        Object char_literal247_tree=null;
        Object char_literal248_tree=null;
        Object string_literal249_tree=null;
        Object char_literal250_tree=null;
        Object char_literal252_tree=null;
        Object string_literal254_tree=null;
        Object string_literal256_tree=null;
        Object char_literal257_tree=null;
        Object char_literal259_tree=null;
        Object string_literal261_tree=null;
        Object string_literal263_tree=null;
        Object char_literal264_tree=null;
        Object char_literal266_tree=null;
        Object char_literal267_tree=null;
        Object string_literal268_tree=null;
        Object char_literal269_tree=null;
        Object char_literal271_tree=null;
        Object char_literal273_tree=null;
        Object char_literal275_tree=null;
        Object string_literal277_tree=null;
        Object char_literal278_tree=null;
        Object char_literal280_tree=null;
        Object char_literal281_tree=null;
        Object string_literal282_tree=null;
        Object char_literal284_tree=null;
        Object char_literal286_tree=null;
        Object char_literal287_tree=null;
        Object IDENTIFIER288_tree=null;
        Object char_literal289_tree=null;
        Object char_literal291_tree=null;
        Object char_literal293_tree=null;

        try {
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1520:2: (b= statementsBlock | declaration | es= expression ';' | rt= 'return' rex= expression ';' | 'if' '(' expression ')' statement ( 'else' statement )? | 'while' '(' expression ')' statement | 'do' statement 'while' '(' expression ')' ';' | 'for' '(' ( statement )? ';' ( expression )? ';' ( statement )? ')' statement | 'switch' '(' expression ')' '{' ( 'case' expression ':' | statement )* '}' | ';' | {...}? IDENTIFIER '(' varDecl ':' expression ')' statement )
            int alt123=11;
            alt123 = dfa123.predict(input);
            switch (alt123) {
                case 1 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1521:3: b= statementsBlock
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_statementsBlock_in_statement4929);
                    b=statementsBlock();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, b.getTree());
                    if ( state.backtracking==0 ) {
                       retval.stat = (b!=null?b.stat:null); 
                    }

                    }
                    break;
                case 2 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1522:3: declaration
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_declaration_in_statement4937);
                    declaration246=declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, declaration246.getTree());

                    }
                    break;
                case 3 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1523:3: es= expression ';'
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_expression_in_statement4946);
                    es=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, es.getTree());
                    char_literal247=(Token)match(input,28,FOLLOW_28_in_statement4948); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal247_tree = (Object)adaptor.create(char_literal247);
                    adaptor.addChild(root_0, char_literal247_tree);
                    }
                    if ( state.backtracking==0 ) {
                       retval.stat = new ExpressionStatement((es!=null?es.expr:null)); 
                    }

                    }
                    break;
                case 4 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1524:3: rt= 'return' rex= expression ';'
                    {
                    root_0 = (Object)adaptor.nil();

                    rt=(Token)match(input,55,FOLLOW_55_in_statement4958); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    rt_tree = (Object)adaptor.create(rt);
                    adaptor.addChild(root_0, rt_tree);
                    }
                    pushFollow(FOLLOW_expression_in_statement4962);
                    rex=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, rex.getTree());
                    char_literal248=(Token)match(input,28,FOLLOW_28_in_statement4964); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal248_tree = (Object)adaptor.create(char_literal248);
                    adaptor.addChild(root_0, char_literal248_tree);
                    }
                    if ( state.backtracking==0 ) {
                       
                      			retval.stat = mark(new Return((rex!=null?rex.expr:null)), getLine(rt));
                      		
                    }

                    }
                    break;
                case 5 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1527:3: 'if' '(' expression ')' statement ( 'else' statement )?
                    {
                    root_0 = (Object)adaptor.nil();

                    string_literal249=(Token)match(input,107,FOLLOW_107_in_statement4972); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal249_tree = (Object)adaptor.create(string_literal249);
                    adaptor.addChild(root_0, string_literal249_tree);
                    }
                    char_literal250=(Token)match(input,34,FOLLOW_34_in_statement4974); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal250_tree = (Object)adaptor.create(char_literal250);
                    adaptor.addChild(root_0, char_literal250_tree);
                    }
                    pushFollow(FOLLOW_expression_in_statement4976);
                    expression251=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression251.getTree());
                    char_literal252=(Token)match(input,35,FOLLOW_35_in_statement4978); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal252_tree = (Object)adaptor.create(char_literal252);
                    adaptor.addChild(root_0, char_literal252_tree);
                    }
                    pushFollow(FOLLOW_statement_in_statement4980);
                    statement253=statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, statement253.getTree());
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1527:37: ( 'else' statement )?
                    int alt118=2;
                    alt118 = dfa118.predict(input);
                    switch (alt118) {
                        case 1 :
                            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1527:38: 'else' statement
                            {
                            string_literal254=(Token)match(input,108,FOLLOW_108_in_statement4983); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            string_literal254_tree = (Object)adaptor.create(string_literal254);
                            adaptor.addChild(root_0, string_literal254_tree);
                            }
                            pushFollow(FOLLOW_statement_in_statement4985);
                            statement255=statement();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, statement255.getTree());

                            }
                            break;

                    }


                    }
                    break;
                case 6 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1528:3: 'while' '(' expression ')' statement
                    {
                    root_0 = (Object)adaptor.nil();

                    string_literal256=(Token)match(input,109,FOLLOW_109_in_statement4994); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal256_tree = (Object)adaptor.create(string_literal256);
                    adaptor.addChild(root_0, string_literal256_tree);
                    }
                    char_literal257=(Token)match(input,34,FOLLOW_34_in_statement4996); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal257_tree = (Object)adaptor.create(char_literal257);
                    adaptor.addChild(root_0, char_literal257_tree);
                    }
                    pushFollow(FOLLOW_expression_in_statement4998);
                    expression258=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression258.getTree());
                    char_literal259=(Token)match(input,35,FOLLOW_35_in_statement5000); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal259_tree = (Object)adaptor.create(char_literal259);
                    adaptor.addChild(root_0, char_literal259_tree);
                    }
                    pushFollow(FOLLOW_statement_in_statement5002);
                    statement260=statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, statement260.getTree());

                    }
                    break;
                case 7 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1529:3: 'do' statement 'while' '(' expression ')' ';'
                    {
                    root_0 = (Object)adaptor.nil();

                    string_literal261=(Token)match(input,110,FOLLOW_110_in_statement5009); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal261_tree = (Object)adaptor.create(string_literal261);
                    adaptor.addChild(root_0, string_literal261_tree);
                    }
                    pushFollow(FOLLOW_statement_in_statement5011);
                    statement262=statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, statement262.getTree());
                    string_literal263=(Token)match(input,109,FOLLOW_109_in_statement5013); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal263_tree = (Object)adaptor.create(string_literal263);
                    adaptor.addChild(root_0, string_literal263_tree);
                    }
                    char_literal264=(Token)match(input,34,FOLLOW_34_in_statement5015); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal264_tree = (Object)adaptor.create(char_literal264);
                    adaptor.addChild(root_0, char_literal264_tree);
                    }
                    pushFollow(FOLLOW_expression_in_statement5017);
                    expression265=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression265.getTree());
                    char_literal266=(Token)match(input,35,FOLLOW_35_in_statement5019); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal266_tree = (Object)adaptor.create(char_literal266);
                    adaptor.addChild(root_0, char_literal266_tree);
                    }
                    char_literal267=(Token)match(input,28,FOLLOW_28_in_statement5021); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal267_tree = (Object)adaptor.create(char_literal267);
                    adaptor.addChild(root_0, char_literal267_tree);
                    }

                    }
                    break;
                case 8 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1530:3: 'for' '(' ( statement )? ';' ( expression )? ';' ( statement )? ')' statement
                    {
                    root_0 = (Object)adaptor.nil();

                    string_literal268=(Token)match(input,111,FOLLOW_111_in_statement5028); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal268_tree = (Object)adaptor.create(string_literal268);
                    adaptor.addChild(root_0, string_literal268_tree);
                    }
                    char_literal269=(Token)match(input,34,FOLLOW_34_in_statement5030); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal269_tree = (Object)adaptor.create(char_literal269);
                    adaptor.addChild(root_0, char_literal269_tree);
                    }
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1530:13: ( statement )?
                    int alt119=2;
                    alt119 = dfa119.predict(input);
                    switch (alt119) {
                        case 1 :
                            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:0:0: statement
                            {
                            pushFollow(FOLLOW_statement_in_statement5032);
                            statement270=statement();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, statement270.getTree());

                            }
                            break;

                    }

                    char_literal271=(Token)match(input,28,FOLLOW_28_in_statement5035); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal271_tree = (Object)adaptor.create(char_literal271);
                    adaptor.addChild(root_0, char_literal271_tree);
                    }
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1530:28: ( expression )?
                    int alt120=2;
                    alt120 = dfa120.predict(input);
                    switch (alt120) {
                        case 1 :
                            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:0:0: expression
                            {
                            pushFollow(FOLLOW_expression_in_statement5037);
                            expression272=expression();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression272.getTree());

                            }
                            break;

                    }

                    char_literal273=(Token)match(input,28,FOLLOW_28_in_statement5040); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal273_tree = (Object)adaptor.create(char_literal273);
                    adaptor.addChild(root_0, char_literal273_tree);
                    }
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1530:44: ( statement )?
                    int alt121=2;
                    alt121 = dfa121.predict(input);
                    switch (alt121) {
                        case 1 :
                            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:0:0: statement
                            {
                            pushFollow(FOLLOW_statement_in_statement5042);
                            statement274=statement();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, statement274.getTree());

                            }
                            break;

                    }

                    char_literal275=(Token)match(input,35,FOLLOW_35_in_statement5045); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal275_tree = (Object)adaptor.create(char_literal275);
                    adaptor.addChild(root_0, char_literal275_tree);
                    }
                    pushFollow(FOLLOW_statement_in_statement5047);
                    statement276=statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, statement276.getTree());

                    }
                    break;
                case 9 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1531:3: 'switch' '(' expression ')' '{' ( 'case' expression ':' | statement )* '}'
                    {
                    root_0 = (Object)adaptor.nil();

                    string_literal277=(Token)match(input,112,FOLLOW_112_in_statement5054); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal277_tree = (Object)adaptor.create(string_literal277);
                    adaptor.addChild(root_0, string_literal277_tree);
                    }
                    char_literal278=(Token)match(input,34,FOLLOW_34_in_statement5056); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal278_tree = (Object)adaptor.create(char_literal278);
                    adaptor.addChild(root_0, char_literal278_tree);
                    }
                    pushFollow(FOLLOW_expression_in_statement5058);
                    expression279=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression279.getTree());
                    char_literal280=(Token)match(input,35,FOLLOW_35_in_statement5060); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal280_tree = (Object)adaptor.create(char_literal280);
                    adaptor.addChild(root_0, char_literal280_tree);
                    }
                    char_literal281=(Token)match(input,23,FOLLOW_23_in_statement5062); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal281_tree = (Object)adaptor.create(char_literal281);
                    adaptor.addChild(root_0, char_literal281_tree);
                    }
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1532:3: ( 'case' expression ':' | statement )*
                    loop122:
                    do {
                        int alt122=3;
                        alt122 = dfa122.predict(input);
                        switch (alt122) {
                    	case 1 :
                    	    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1532:5: 'case' expression ':'
                    	    {
                    	    string_literal282=(Token)match(input,113,FOLLOW_113_in_statement5069); if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) {
                    	    string_literal282_tree = (Object)adaptor.create(string_literal282);
                    	    adaptor.addChild(root_0, string_literal282_tree);
                    	    }
                    	    pushFollow(FOLLOW_expression_in_statement5071);
                    	    expression283=expression();

                    	    state._fsp--;
                    	    if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression283.getTree());
                    	    char_literal284=(Token)match(input,33,FOLLOW_33_in_statement5073); if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) {
                    	    char_literal284_tree = (Object)adaptor.create(char_literal284);
                    	    adaptor.addChild(root_0, char_literal284_tree);
                    	    }

                    	    }
                    	    break;
                    	case 2 :
                    	    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1533:4: statement
                    	    {
                    	    pushFollow(FOLLOW_statement_in_statement5080);
                    	    statement285=statement();

                    	    state._fsp--;
                    	    if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) adaptor.addChild(root_0, statement285.getTree());

                    	    }
                    	    break;

                    	default :
                    	    break loop122;
                        }
                    } while (true);

                    char_literal286=(Token)match(input,24,FOLLOW_24_in_statement5089); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal286_tree = (Object)adaptor.create(char_literal286);
                    adaptor.addChild(root_0, char_literal286_tree);
                    }

                    }
                    break;
                case 10 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1536:3: ';'
                    {
                    root_0 = (Object)adaptor.nil();

                    char_literal287=(Token)match(input,28,FOLLOW_28_in_statement5095); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal287_tree = (Object)adaptor.create(char_literal287);
                    adaptor.addChild(root_0, char_literal287_tree);
                    }

                    }
                    break;
                case 11 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1537:3: {...}? IDENTIFIER '(' varDecl ':' expression ')' statement
                    {
                    root_0 = (Object)adaptor.nil();

                    if ( !(( next("foreach") )) ) {
                        if (state.backtracking>0) {state.failed=true; return retval;}
                        throw new FailedPredicateException(input, "statement", " next(\"foreach\") ");
                    }
                    IDENTIFIER288=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_statement5103); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    IDENTIFIER288_tree = (Object)adaptor.create(IDENTIFIER288);
                    adaptor.addChild(root_0, IDENTIFIER288_tree);
                    }
                    char_literal289=(Token)match(input,34,FOLLOW_34_in_statement5105); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal289_tree = (Object)adaptor.create(char_literal289);
                    adaptor.addChild(root_0, char_literal289_tree);
                    }
                    pushFollow(FOLLOW_varDecl_in_statement5107);
                    varDecl290=varDecl();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, varDecl290.getTree());
                    char_literal291=(Token)match(input,33,FOLLOW_33_in_statement5109); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal291_tree = (Object)adaptor.create(char_literal291);
                    adaptor.addChild(root_0, char_literal291_tree);
                    }
                    pushFollow(FOLLOW_expression_in_statement5111);
                    expression292=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression292.getTree());
                    char_literal293=(Token)match(input,35,FOLLOW_35_in_statement5113); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal293_tree = (Object)adaptor.create(char_literal293);
                    adaptor.addChild(root_0, char_literal293_tree);
                    }
                    pushFollow(FOLLOW_statement_in_statement5115);
                    statement294=statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, statement294.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "statement"

    public static class constant_return extends ParserRuleReturnScope {
        public Constant constant;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "constant"
    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1540:1: constant returns [Constant constant] : ( DECIMAL_NUMBER | HEXADECIMAL_NUMBER | OCTAL_NUMBER | CHARACTER | FLOAT_NUMBER | STRING );
    public final ObjCppParser.constant_return constant() throws RecognitionException {
        ObjCppParser.constant_return retval = new ObjCppParser.constant_return();
        retval.start = input.LT(1);

        Object root_0 = null;

        Token DECIMAL_NUMBER295=null;
        Token HEXADECIMAL_NUMBER296=null;
        Token OCTAL_NUMBER297=null;
        Token CHARACTER298=null;
        Token FLOAT_NUMBER299=null;
        Token STRING300=null;

        Object DECIMAL_NUMBER295_tree=null;
        Object HEXADECIMAL_NUMBER296_tree=null;
        Object OCTAL_NUMBER297_tree=null;
        Object CHARACTER298_tree=null;
        Object FLOAT_NUMBER299_tree=null;
        Object STRING300_tree=null;

        try {
            // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1541:2: ( DECIMAL_NUMBER | HEXADECIMAL_NUMBER | OCTAL_NUMBER | CHARACTER | FLOAT_NUMBER | STRING )
            int alt124=6;
            switch ( input.LA(1) ) {
            case DECIMAL_NUMBER:
                {
                alt124=1;
                }
                break;
            case HEXADECIMAL_NUMBER:
                {
                alt124=2;
                }
                break;
            case OCTAL_NUMBER:
                {
                alt124=3;
                }
                break;
            case CHARACTER:
                {
                alt124=4;
                }
                break;
            case FLOAT_NUMBER:
                {
                alt124=5;
                }
                break;
            case STRING:
                {
                alt124=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 124, 0, input);

                throw nvae;
            }

            switch (alt124) {
                case 1 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1541:4: DECIMAL_NUMBER
                    {
                    root_0 = (Object)adaptor.nil();

                    DECIMAL_NUMBER295=(Token)match(input,DECIMAL_NUMBER,FOLLOW_DECIMAL_NUMBER_in_constant5132); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    DECIMAL_NUMBER295_tree = (Object)adaptor.create(DECIMAL_NUMBER295);
                    adaptor.addChild(root_0, DECIMAL_NUMBER295_tree);
                    }
                    if ( state.backtracking==0 ) {
                       retval.constant =  Constant.parseDecimal((DECIMAL_NUMBER295!=null?DECIMAL_NUMBER295.getText():null)); 
                    }

                    }
                    break;
                case 2 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1542:3: HEXADECIMAL_NUMBER
                    {
                    root_0 = (Object)adaptor.nil();

                    HEXADECIMAL_NUMBER296=(Token)match(input,HEXADECIMAL_NUMBER,FOLLOW_HEXADECIMAL_NUMBER_in_constant5140); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    HEXADECIMAL_NUMBER296_tree = (Object)adaptor.create(HEXADECIMAL_NUMBER296);
                    adaptor.addChild(root_0, HEXADECIMAL_NUMBER296_tree);
                    }
                    if ( state.backtracking==0 ) {
                       retval.constant = Constant.parseHex((HEXADECIMAL_NUMBER296!=null?HEXADECIMAL_NUMBER296.getText():null)); 
                    }

                    }
                    break;
                case 3 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1543:3: OCTAL_NUMBER
                    {
                    root_0 = (Object)adaptor.nil();

                    OCTAL_NUMBER297=(Token)match(input,OCTAL_NUMBER,FOLLOW_OCTAL_NUMBER_in_constant5148); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    OCTAL_NUMBER297_tree = (Object)adaptor.create(OCTAL_NUMBER297);
                    adaptor.addChild(root_0, OCTAL_NUMBER297_tree);
                    }
                    if ( state.backtracking==0 ) {
                       retval.constant = Constant.parseOctal((OCTAL_NUMBER297!=null?OCTAL_NUMBER297.getText():null)); 
                    }

                    }
                    break;
                case 4 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1544:3: CHARACTER
                    {
                    root_0 = (Object)adaptor.nil();

                    CHARACTER298=(Token)match(input,CHARACTER,FOLLOW_CHARACTER_in_constant5156); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    CHARACTER298_tree = (Object)adaptor.create(CHARACTER298);
                    adaptor.addChild(root_0, CHARACTER298_tree);
                    }
                    if ( state.backtracking==0 ) {
                       retval.constant =  Constant.parseCharOrStringInteger((CHARACTER298!=null?CHARACTER298.getText():null)); 
                    }

                    }
                    break;
                case 5 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1545:3: FLOAT_NUMBER
                    {
                    root_0 = (Object)adaptor.nil();

                    FLOAT_NUMBER299=(Token)match(input,FLOAT_NUMBER,FOLLOW_FLOAT_NUMBER_in_constant5164); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    FLOAT_NUMBER299_tree = (Object)adaptor.create(FLOAT_NUMBER299);
                    adaptor.addChild(root_0, FLOAT_NUMBER299_tree);
                    }
                    if ( state.backtracking==0 ) {
                       retval.constant = Constant.parseFloat((FLOAT_NUMBER299!=null?FLOAT_NUMBER299.getText():null)); 
                    }

                    }
                    break;
                case 6 :
                    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1547:3: STRING
                    {
                    root_0 = (Object)adaptor.nil();

                    STRING300=(Token)match(input,STRING,FOLLOW_STRING_in_constant5175); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    STRING300_tree = (Object)adaptor.create(STRING300);
                    adaptor.addChild(root_0, STRING300_tree);
                    }
                    if ( state.backtracking==0 ) {
                       retval.constant =  Constant.parseString((STRING300!=null?STRING300.getText():null)); 
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "constant"

    // $ANTLR start synpred6_ObjCpp
    public final void synpred6_ObjCpp_fragment() throws RecognitionException {   
        // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:277:5: ( functionDeclaration )
        // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:277:5: functionDeclaration
        {
        pushFollow(FOLLOW_functionDeclaration_in_synpred6_ObjCpp247);
        functionDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred6_ObjCpp

    // $ANTLR start synpred8_ObjCpp
    public final void synpred8_ObjCpp_fragment() throws RecognitionException {   
        // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:283:5: ( varDecl )
        // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:283:5: varDecl
        {
        pushFollow(FOLLOW_varDecl_in_synpred8_ObjCpp267);
        varDecl();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred8_ObjCpp

    // $ANTLR start synpred15_ObjCpp
    public final void synpred15_ObjCpp_fragment() throws RecognitionException {   
        Token n1=null;

        // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:357:4: (n1= IDENTIFIER )
        // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:357:4: n1= IDENTIFIER
        {
        n1=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_synpred15_ObjCpp508); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred15_ObjCpp

    // $ANTLR start synpred29_ObjCpp
    public final void synpred29_ObjCpp_fragment() throws RecognitionException {   
        ObjCppParser.varDecl_return fv = null;


        // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:427:7: (fv= varDecl )
        // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:427:7: fv= varDecl
        {
        pushFollow(FOLLOW_varDecl_in_synpred29_ObjCpp826);
        fv=varDecl();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred29_ObjCpp

    // $ANTLR start synpred43_ObjCpp
    public final void synpred43_ObjCpp_fragment() throws RecognitionException {   
        Token n0=null;

        // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:531:4: ( (n0= IDENTIFIER ) )
        // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:531:4: (n0= IDENTIFIER )
        {
        // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:531:4: (n0= IDENTIFIER )
        // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:532:5: n0= IDENTIFIER
        {
        n0=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_synpred43_ObjCpp1164); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred43_ObjCpp

    // $ANTLR start synpred44_ObjCpp
    public final void synpred44_ObjCpp_fragment() throws RecognitionException {   
        // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:538:7: ( exportationModifiers )
        // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:538:7: exportationModifiers
        {
        pushFollow(FOLLOW_exportationModifiers_in_synpred44_ObjCpp1187);
        exportationModifiers();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred44_ObjCpp

    // $ANTLR start synpred51_ObjCpp
    public final void synpred51_ObjCpp_fragment() throws RecognitionException {   
        // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:581:3: ()
        // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:581:3: 
        {
        }
    }
    // $ANTLR end synpred51_ObjCpp

    // $ANTLR start synpred52_ObjCpp
    public final void synpred52_ObjCpp_fragment() throws RecognitionException {   
        ObjCppParser.typeRef_return returnTypeRef = null;


        // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:585:16: (returnTypeRef= typeRef )
        // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:585:16: returnTypeRef= typeRef
        {
        pushFollow(FOLLOW_typeRef_in_synpred52_ObjCpp1362);
        returnTypeRef=typeRef();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred52_ObjCpp

    // $ANTLR start synpred53_ObjCpp
    public final void synpred53_ObjCpp_fragment() throws RecognitionException {   
        Token ct=null;

        // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:598:4: ({...}?ct= IDENTIFIER )
        // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:598:4: {...}?ct= IDENTIFIER
        {
        if ( !(( next("const", "__const") )) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred53_ObjCpp", " next(\"const\", \"__const\") ");
        }
        ct=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_synpred53_ObjCpp1397); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred53_ObjCpp

    // $ANTLR start synpred55_ObjCpp
    public final void synpred55_ObjCpp_fragment() throws RecognitionException {   
        // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:617:4: ( exportationModifier )
        // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:617:4: exportationModifier
        {
        pushFollow(FOLLOW_exportationModifier_in_synpred55_ObjCpp1460);
        exportationModifier();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred55_ObjCpp

    // $ANTLR start synpred58_ObjCpp
    public final void synpred58_ObjCpp_fragment() throws RecognitionException {   
        ObjCppParser.modifier_return sm = null;


        // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:677:4: ({...}?sm= modifier )
        // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:677:4: {...}?sm= modifier
        {
        if ( !(( next(Modifier.Kind.StorageClassSpecifier) )) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred58_ObjCpp", " next(Modifier.Kind.StorageClassSpecifier) ");
        }
        pushFollow(FOLLOW_modifier_in_synpred58_ObjCpp1634);
        sm=modifier();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred58_ObjCpp

    // $ANTLR start synpred59_ObjCpp
    public final void synpred59_ObjCpp_fragment() throws RecognitionException {   
        ObjCppParser.modifier_return tm = null;


        // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:679:4: ({...}?tm= modifier )
        // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:679:4: {...}?tm= modifier
        {
        if ( !(( next(Modifier.Kind.TypeQualifier) )) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred59_ObjCpp", " next(Modifier.Kind.TypeQualifier) ");
        }
        pushFollow(FOLLOW_modifier_in_synpred59_ObjCpp1651);
        tm=modifier();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred59_ObjCpp

    // $ANTLR start synpred67_ObjCpp
    public final void synpred67_ObjCpp_fragment() throws RecognitionException {   
        ObjCppParser.modifier_return m1a = null;


        // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:769:4: ({...}?m1a= modifier '(' expression ')' )
        // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:769:4: {...}?m1a= modifier '(' expression ')'
        {
        if ( !(( next(Modifier.Kind.VCAnnotation1Arg) )) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred67_ObjCpp", " next(Modifier.Kind.VCAnnotation1Arg) ");
        }
        pushFollow(FOLLOW_modifier_in_synpred67_ObjCpp1870);
        m1a=modifier();

        state._fsp--;
        if (state.failed) return ;
        match(input,34,FOLLOW_34_in_synpred67_ObjCpp1873); if (state.failed) return ;
        pushFollow(FOLLOW_expression_in_synpred67_ObjCpp1875);
        expression();

        state._fsp--;
        if (state.failed) return ;
        match(input,35,FOLLOW_35_in_synpred67_ObjCpp1877); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred67_ObjCpp

    // $ANTLR start synpred68_ObjCpp
    public final void synpred68_ObjCpp_fragment() throws RecognitionException {   
        ObjCppParser.modifier_return m2a = null;


        // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:770:4: ({...}?m2a= modifier '(' expression ',' expression ')' )
        // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:770:4: {...}?m2a= modifier '(' expression ',' expression ')'
        {
        if ( !(( next(Modifier.Kind.VCAnnotation2Args) )) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred68_ObjCpp", " next(Modifier.Kind.VCAnnotation2Args) ");
        }
        pushFollow(FOLLOW_modifier_in_synpred68_ObjCpp1890);
        m2a=modifier();

        state._fsp--;
        if (state.failed) return ;
        match(input,34,FOLLOW_34_in_synpred68_ObjCpp1893); if (state.failed) return ;
        pushFollow(FOLLOW_expression_in_synpred68_ObjCpp1895);
        expression();

        state._fsp--;
        if (state.failed) return ;
        match(input,27,FOLLOW_27_in_synpred68_ObjCpp1897); if (state.failed) return ;
        pushFollow(FOLLOW_expression_in_synpred68_ObjCpp1899);
        expression();

        state._fsp--;
        if (state.failed) return ;
        match(input,35,FOLLOW_35_in_synpred68_ObjCpp1901); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred68_ObjCpp

    // $ANTLR start synpred69_ObjCpp
    public final void synpred69_ObjCpp_fragment() throws RecognitionException {   
        ObjCppParser.modifier_return m = null;


        // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:772:4: ({...}?m= modifier )
        // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:772:4: {...}?m= modifier
        {
        if ( !(( next(Modifier.Kind.TypeQualifier, Modifier.Kind.VCAnnotationNoArg) )) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred69_ObjCpp", " next(Modifier.Kind.TypeQualifier, Modifier.Kind.VCAnnotationNoArg) ");
        }
        pushFollow(FOLLOW_modifier_in_synpred69_ObjCpp1918);
        m=modifier();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred69_ObjCpp

    // $ANTLR start synpred70_ObjCpp
    public final void synpred70_ObjCpp_fragment() throws RecognitionException {   
        ObjCppParser.modifier_return m1 = null;

        ObjCppParser.typeRef_return tr = null;


        // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:774:4: ({...}?m1= modifier tr= typeRef )
        // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:774:4: {...}?m1= modifier tr= typeRef
        {
        if ( !(( next(Modifier.Kind.ReferenceQualifier) )) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred70_ObjCpp", " next(Modifier.Kind.ReferenceQualifier) ");
        }
        pushFollow(FOLLOW_modifier_in_synpred70_ObjCpp1935);
        m1=modifier();

        state._fsp--;
        if (state.failed) return ;
        pushFollow(FOLLOW_typeRef_in_synpred70_ObjCpp1944);
        tr=typeRef();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred70_ObjCpp

    // $ANTLR start synpred87_ObjCpp
    public final void synpred87_ObjCpp_fragment() throws RecognitionException {   
        // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:859:4: ( ( typeMutator )* functionSignatureSuffix )
        // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:859:4: ( typeMutator )* functionSignatureSuffix
        {
        // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:859:4: ( typeMutator )*
        loop151:
        do {
            int alt151=2;
            int LA151_0 = input.LA(1);

            if ( (LA151_0==IDENTIFIER||(LA151_0>=51 && LA151_0<=53)) ) {
                alt151=1;
            }


            switch (alt151) {
        	case 1 :
        	    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:860:5: typeMutator
        	    {
        	    pushFollow(FOLLOW_typeMutator_in_synpred87_ObjCpp2390);
        	    typeMutator();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }
        	    break;

        	default :
        	    break loop151;
            }
        } while (true);

        pushFollow(FOLLOW_functionSignatureSuffix_in_synpred87_ObjCpp2403);
        functionSignatureSuffix();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred87_ObjCpp

    // $ANTLR start synpred89_ObjCpp
    public final void synpred89_ObjCpp_fragment() throws RecognitionException {   
        // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:874:4: ( ( typeMutator )* functionSignatureSuffixNoName )
        // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:874:4: ( typeMutator )* functionSignatureSuffixNoName
        {
        // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:874:4: ( typeMutator )*
        loop152:
        do {
            int alt152=2;
            int LA152_0 = input.LA(1);

            if ( (LA152_0==IDENTIFIER||(LA152_0>=51 && LA152_0<=53)) ) {
                alt152=1;
            }


            switch (alt152) {
        	case 1 :
        	    // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:875:5: typeMutator
        	    {
        	    pushFollow(FOLLOW_typeMutator_in_synpred89_ObjCpp2444);
        	    typeMutator();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }
        	    break;

        	default :
        	    break loop152;
            }
        } while (true);

        pushFollow(FOLLOW_functionSignatureSuffixNoName_in_synpred89_ObjCpp2457);
        functionSignatureSuffixNoName();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred89_ObjCpp

    // $ANTLR start synpred91_ObjCpp
    public final void synpred91_ObjCpp_fragment() throws RecognitionException {   
        // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:895:4: ({...}? modifier )
        // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:895:4: {...}? modifier
        {
        if ( !(( next(Modifier.Kind.TypeQualifier) )) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred91_ObjCpp", " next(Modifier.Kind.TypeQualifier) ");
        }
        pushFollow(FOLLOW_modifier_in_synpred91_ObjCpp2521);
        modifier();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred91_ObjCpp

    // $ANTLR start synpred95_ObjCpp
    public final void synpred95_ObjCpp_fragment() throws RecognitionException {   
        // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:915:5: ( '=' expression )
        // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:915:5: '=' expression
        {
        match(input,29,FOLLOW_29_in_synpred95_ObjCpp2612); if (state.failed) return ;
        pushFollow(FOLLOW_expression_in_synpred95_ObjCpp2619);
        expression();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred95_ObjCpp

    // $ANTLR start synpred97_ObjCpp
    public final void synpred97_ObjCpp_fragment() throws RecognitionException {   
        ObjCppParser.modifier_return sm = null;


        // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:957:4: ({...}?sm= modifier )
        // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:957:4: {...}?sm= modifier
        {
        if ( !(( next(Modifier.Kind.StorageClassSpecifier) )) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred97_ObjCpp", " next(Modifier.Kind.StorageClassSpecifier) ");
        }
        pushFollow(FOLLOW_modifier_in_synpred97_ObjCpp2746);
        sm=modifier();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred97_ObjCpp

    // $ANTLR start synpred98_ObjCpp
    public final void synpred98_ObjCpp_fragment() throws RecognitionException {   
        ObjCppParser.modifier_return tm = null;


        // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:959:4: ({...}?tm= modifier )
        // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:959:4: {...}?tm= modifier
        {
        if ( !(( next(Modifier.Kind.TypeQualifier) )) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred98_ObjCpp", " next(Modifier.Kind.TypeQualifier) ");
        }
        pushFollow(FOLLOW_modifier_in_synpred98_ObjCpp2763);
        tm=modifier();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred98_ObjCpp

    // $ANTLR start synpred104_ObjCpp
    public final void synpred104_ObjCpp_fragment() throws RecognitionException {   
        ObjCppParser.modifier_return im = null;


        // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1046:5: (im= modifier )
        // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1046:5: im= modifier
        {
        pushFollow(FOLLOW_modifier_in_synpred104_ObjCpp3030);
        im=modifier();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred104_ObjCpp

    // $ANTLR start synpred108_ObjCpp
    public final void synpred108_ObjCpp_fragment() throws RecognitionException {   
        ObjCppParser.argDef_return ax = null;


        // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1087:5: ( ',' ax= argDef )
        // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1087:5: ',' ax= argDef
        {
        match(input,27,FOLLOW_27_in_synpred108_ObjCpp3151); if (state.failed) return ;
        pushFollow(FOLLOW_argDef_in_synpred108_ObjCpp3160);
        ax=argDef();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred108_ObjCpp

    // $ANTLR start synpred111_ObjCpp
    public final void synpred111_ObjCpp_fragment() throws RecognitionException {   
        // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1108:4: ( typeMutator )
        // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1108:4: typeMutator
        {
        pushFollow(FOLLOW_typeMutator_in_synpred111_ObjCpp3230);
        typeMutator();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred111_ObjCpp

    // $ANTLR start synpred163_ObjCpp
    public final void synpred163_ObjCpp_fragment() throws RecognitionException {   
        ObjCppParser.assignmentOp_return op = null;

        ObjCppParser.assignmentExpr_return f = null;


        // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1337:4: (op= assignmentOp f= assignmentExpr )
        // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1337:4: op= assignmentOp f= assignmentExpr
        {
        pushFollow(FOLLOW_assignmentOp_in_synpred163_ObjCpp3940);
        op=assignmentOp();

        state._fsp--;
        if (state.failed) return ;
        pushFollow(FOLLOW_assignmentExpr_in_synpred163_ObjCpp3944);
        f=assignmentExpr();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred163_ObjCpp

    // $ANTLR start synpred193_ObjCpp
    public final void synpred193_ObjCpp_fragment() throws RecognitionException {   
        ObjCppParser.castExpr_return inner = null;


        // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1439:4: ( '(' typeRef ')' inner= castExpr )
        // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1439:4: '(' typeRef ')' inner= castExpr
        {
        match(input,34,FOLLOW_34_in_synpred193_ObjCpp4566); if (state.failed) return ;
        pushFollow(FOLLOW_typeRef_in_synpred193_ObjCpp4568);
        typeRef();

        state._fsp--;
        if (state.failed) return ;
        match(input,35,FOLLOW_35_in_synpred193_ObjCpp4570); if (state.failed) return ;
        pushFollow(FOLLOW_castExpr_in_synpred193_ObjCpp4574);
        inner=castExpr();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred193_ObjCpp

    // $ANTLR start synpred196_ObjCpp
    public final void synpred196_ObjCpp_fragment() throws RecognitionException {   
        // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1448:4: ( '(' typeRef ')' )
        // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1448:4: '(' typeRef ')'
        {
        match(input,34,FOLLOW_34_in_synpred196_ObjCpp4632); if (state.failed) return ;
        pushFollow(FOLLOW_typeRef_in_synpred196_ObjCpp4634);
        typeRef();

        state._fsp--;
        if (state.failed) return ;
        match(input,35,FOLLOW_35_in_synpred196_ObjCpp4636); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred196_ObjCpp

    // $ANTLR start synpred210_ObjCpp
    public final void synpred210_ObjCpp_fragment() throws RecognitionException {   
        ObjCppParser.topLevelExpr_return f = null;


        // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1492:4: ( ',' f= topLevelExpr )
        // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1492:4: ',' f= topLevelExpr
        {
        match(input,27,FOLLOW_27_in_synpred210_ObjCpp4834); if (state.failed) return ;
        pushFollow(FOLLOW_topLevelExpr_in_synpred210_ObjCpp4841);
        f=topLevelExpr();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred210_ObjCpp

    // $ANTLR start synpred213_ObjCpp
    public final void synpred213_ObjCpp_fragment() throws RecognitionException {   
        // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1522:3: ( declaration )
        // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1522:3: declaration
        {
        pushFollow(FOLLOW_declaration_in_synpred213_ObjCpp4937);
        declaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred213_ObjCpp

    // $ANTLR start synpred214_ObjCpp
    public final void synpred214_ObjCpp_fragment() throws RecognitionException {   
        ObjCppParser.expression_return es = null;


        // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1523:3: (es= expression ';' )
        // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1523:3: es= expression ';'
        {
        pushFollow(FOLLOW_expression_in_synpred214_ObjCpp4946);
        es=expression();

        state._fsp--;
        if (state.failed) return ;
        match(input,28,FOLLOW_28_in_synpred214_ObjCpp4948); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred214_ObjCpp

    // $ANTLR start synpred216_ObjCpp
    public final void synpred216_ObjCpp_fragment() throws RecognitionException {   
        // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1527:38: ( 'else' statement )
        // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1527:38: 'else' statement
        {
        match(input,108,FOLLOW_108_in_synpred216_ObjCpp4983); if (state.failed) return ;
        pushFollow(FOLLOW_statement_in_synpred216_ObjCpp4985);
        statement();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred216_ObjCpp

    // $ANTLR start synpred220_ObjCpp
    public final void synpred220_ObjCpp_fragment() throws RecognitionException {   
        // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1530:13: ( statement )
        // /Users/ochafik/Prog/Java/sources/com/ochafik/lang/jnaerator/parser/ObjCpp.g:1530:13: statement
        {
        pushFollow(FOLLOW_statement_in_synpred220_ObjCpp5032);
        statement();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred220_ObjCpp

    // Delegated rules

    public final boolean synpred104_ObjCpp() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred104_ObjCpp_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred95_ObjCpp() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred95_ObjCpp_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred58_ObjCpp() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred58_ObjCpp_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred55_ObjCpp() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred55_ObjCpp_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred53_ObjCpp() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred53_ObjCpp_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred43_ObjCpp() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred43_ObjCpp_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred89_ObjCpp() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred89_ObjCpp_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred97_ObjCpp() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred97_ObjCpp_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred216_ObjCpp() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred216_ObjCpp_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred59_ObjCpp() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred59_ObjCpp_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred52_ObjCpp() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred52_ObjCpp_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred163_ObjCpp() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred163_ObjCpp_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred15_ObjCpp() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred15_ObjCpp_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred213_ObjCpp() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred213_ObjCpp_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred196_ObjCpp() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred196_ObjCpp_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred69_ObjCpp() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred69_ObjCpp_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred51_ObjCpp() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred51_ObjCpp_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred87_ObjCpp() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred87_ObjCpp_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred98_ObjCpp() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred98_ObjCpp_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred44_ObjCpp() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred44_ObjCpp_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred8_ObjCpp() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred8_ObjCpp_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred220_ObjCpp() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred220_ObjCpp_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred111_ObjCpp() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred111_ObjCpp_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred214_ObjCpp() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred214_ObjCpp_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred91_ObjCpp() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred91_ObjCpp_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred6_ObjCpp() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred6_ObjCpp_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred67_ObjCpp() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred67_ObjCpp_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred210_ObjCpp() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred210_ObjCpp_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred68_ObjCpp() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred68_ObjCpp_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred193_ObjCpp() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred193_ObjCpp_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred70_ObjCpp() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred70_ObjCpp_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred29_ObjCpp() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred29_ObjCpp_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred108_ObjCpp() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred108_ObjCpp_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA1 dfa1 = new DFA1(this);
    protected DFA2 dfa2 = new DFA2(this);
    protected DFA3 dfa3 = new DFA3(this);
    protected DFA4 dfa4 = new DFA4(this);
    protected DFA6 dfa6 = new DFA6(this);
    protected DFA5 dfa5 = new DFA5(this);
    protected DFA9 dfa9 = new DFA9(this);
    protected DFA13 dfa13 = new DFA13(this);
    protected DFA15 dfa15 = new DFA15(this);
    protected DFA14 dfa14 = new DFA14(this);
    protected DFA18 dfa18 = new DFA18(this);
    protected DFA21 dfa21 = new DFA21(this);
    protected DFA20 dfa20 = new DFA20(this);
    protected DFA19 dfa19 = new DFA19(this);
    protected DFA22 dfa22 = new DFA22(this);
    protected DFA33 dfa33 = new DFA33(this);
    protected DFA32 dfa32 = new DFA32(this);
    protected DFA34 dfa34 = new DFA34(this);
    protected DFA35 dfa35 = new DFA35(this);
    protected DFA38 dfa38 = new DFA38(this);
    protected DFA39 dfa39 = new DFA39(this);
    protected DFA41 dfa41 = new DFA41(this);
    protected DFA46 dfa46 = new DFA46(this);
    protected DFA47 dfa47 = new DFA47(this);
    protected DFA52 dfa52 = new DFA52(this);
    protected DFA50 dfa50 = new DFA50(this);
    protected DFA64 dfa64 = new DFA64(this);
    protected DFA66 dfa66 = new DFA66(this);
    protected DFA68 dfa68 = new DFA68(this);
    protected DFA70 dfa70 = new DFA70(this);
    protected DFA72 dfa72 = new DFA72(this);
    protected DFA77 dfa77 = new DFA77(this);
    protected DFA79 dfa79 = new DFA79(this);
    protected DFA81 dfa81 = new DFA81(this);
    protected DFA84 dfa84 = new DFA84(this);
    protected DFA87 dfa87 = new DFA87(this);
    protected DFA86 dfa86 = new DFA86(this);
    protected DFA91 dfa91 = new DFA91(this);
    protected DFA92 dfa92 = new DFA92(this);
    protected DFA99 dfa99 = new DFA99(this);
    protected DFA100 dfa100 = new DFA100(this);
    protected DFA101 dfa101 = new DFA101(this);
    protected DFA102 dfa102 = new DFA102(this);
    protected DFA103 dfa103 = new DFA103(this);
    protected DFA104 dfa104 = new DFA104(this);
    protected DFA105 dfa105 = new DFA105(this);
    protected DFA106 dfa106 = new DFA106(this);
    protected DFA107 dfa107 = new DFA107(this);
    protected DFA108 dfa108 = new DFA108(this);
    protected DFA109 dfa109 = new DFA109(this);
    protected DFA110 dfa110 = new DFA110(this);
    protected DFA111 dfa111 = new DFA111(this);
    protected DFA113 dfa113 = new DFA113(this);
    protected DFA112 dfa112 = new DFA112(this);
    protected DFA115 dfa115 = new DFA115(this);
    protected DFA114 dfa114 = new DFA114(this);
    protected DFA116 dfa116 = new DFA116(this);
    protected DFA117 dfa117 = new DFA117(this);
    protected DFA123 dfa123 = new DFA123(this);
    protected DFA118 dfa118 = new DFA118(this);
    protected DFA119 dfa119 = new DFA119(this);
    protected DFA120 dfa120 = new DFA120(this);
    protected DFA121 dfa121 = new DFA121(this);
    protected DFA122 dfa122 = new DFA122(this);
    static final String DFA1_eotS =
        "\17\uffff";
    static final String DFA1_eofS =
        "\1\2\16\uffff";
    static final String DFA1_minS =
        "\1\4\16\uffff";
    static final String DFA1_maxS =
        "\1\112\16\uffff";
    static final String DFA1_acceptS =
        "\1\uffff\1\1\1\2\14\uffff";
    static final String DFA1_specialS =
        "\17\uffff}>";
    static final String[] DFA1_transitionS = {
            "\1\2\1\1\1\2\17\uffff\1\2\2\uffff\2\2\3\uffff\3\2\14\uffff\3"+
            "\2\13\uffff\20\2",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA1_eot = DFA.unpackEncodedString(DFA1_eotS);
    static final short[] DFA1_eof = DFA.unpackEncodedString(DFA1_eofS);
    static final char[] DFA1_min = DFA.unpackEncodedStringToUnsignedChars(DFA1_minS);
    static final char[] DFA1_max = DFA.unpackEncodedStringToUnsignedChars(DFA1_maxS);
    static final short[] DFA1_accept = DFA.unpackEncodedString(DFA1_acceptS);
    static final short[] DFA1_special = DFA.unpackEncodedString(DFA1_specialS);
    static final short[][] DFA1_transition;

    static {
        int numStates = DFA1_transitionS.length;
        DFA1_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA1_transition[i] = DFA.unpackEncodedString(DFA1_transitionS[i]);
        }
    }

    class DFA1 extends DFA {

        public DFA1(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 1;
            this.eot = DFA1_eot;
            this.eof = DFA1_eof;
            this.min = DFA1_min;
            this.max = DFA1_max;
            this.accept = DFA1_accept;
            this.special = DFA1_special;
            this.transition = DFA1_transition;
        }
        public String getDescription() {
            return "216:3: (unescapedString= STRING )?";
        }
    }
    static final String DFA2_eotS =
        "\16\uffff";
    static final String DFA2_eofS =
        "\1\2\15\uffff";
    static final String DFA2_minS =
        "\1\4\15\uffff";
    static final String DFA2_maxS =
        "\1\112\15\uffff";
    static final String DFA2_acceptS =
        "\1\uffff\1\1\1\2\13\uffff";
    static final String DFA2_specialS =
        "\16\uffff}>";
    static final String[] DFA2_transitionS = {
            "\1\1\1\uffff\1\2\17\uffff\1\2\2\uffff\2\2\3\uffff\3\2\14\uffff"+
            "\3\2\13\uffff\20\2",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA2_eot = DFA.unpackEncodedString(DFA2_eotS);
    static final short[] DFA2_eof = DFA.unpackEncodedString(DFA2_eofS);
    static final char[] DFA2_min = DFA.unpackEncodedStringToUnsignedChars(DFA2_minS);
    static final char[] DFA2_max = DFA.unpackEncodedStringToUnsignedChars(DFA2_maxS);
    static final short[] DFA2_accept = DFA.unpackEncodedString(DFA2_acceptS);
    static final short[] DFA2_special = DFA.unpackEncodedString(DFA2_specialS);
    static final short[][] DFA2_transition;

    static {
        int numStates = DFA2_transitionS.length;
        DFA2_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA2_transition[i] = DFA.unpackEncodedString(DFA2_transitionS[i]);
        }
    }

    class DFA2 extends DFA {

        public DFA2(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 2;
            this.eot = DFA2_eot;
            this.eof = DFA2_eof;
            this.min = DFA2_min;
            this.max = DFA2_max;
            this.accept = DFA2_accept;
            this.special = DFA2_special;
            this.transition = DFA2_transition;
        }
        public String getDescription() {
            return "227:8: (depth= DECIMAL_NUMBER )?";
        }
    }
    static final String DFA3_eotS =
        "\15\uffff";
    static final String DFA3_eofS =
        "\1\1\14\uffff";
    static final String DFA3_minS =
        "\1\6\14\uffff";
    static final String DFA3_maxS =
        "\1\112\14\uffff";
    static final String DFA3_acceptS =
        "\1\uffff\1\3\1\1\11\uffff\1\2";
    static final String DFA3_specialS =
        "\15\uffff}>";
    static final String[] DFA3_transitionS = {
            "\1\2\17\uffff\1\14\2\uffff\2\2\3\uffff\3\2\14\uffff\3\2\13\uffff"+
            "\20\2",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA3_eot = DFA.unpackEncodedString(DFA3_eotS);
    static final short[] DFA3_eof = DFA.unpackEncodedString(DFA3_eofS);
    static final char[] DFA3_min = DFA.unpackEncodedStringToUnsignedChars(DFA3_minS);
    static final char[] DFA3_max = DFA.unpackEncodedStringToUnsignedChars(DFA3_maxS);
    static final short[] DFA3_accept = DFA.unpackEncodedString(DFA3_acceptS);
    static final short[] DFA3_special = DFA.unpackEncodedString(DFA3_specialS);
    static final short[][] DFA3_transition;

    static {
        int numStates = DFA3_transitionS.length;
        DFA3_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA3_transition[i] = DFA.unpackEncodedString(DFA3_transitionS[i]);
        }
    }

    class DFA3 extends DFA {

        public DFA3(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 3;
            this.eot = DFA3_eot;
            this.eof = DFA3_eof;
            this.min = DFA3_min;
            this.max = DFA3_max;
            this.accept = DFA3_accept;
            this.special = DFA3_special;
            this.transition = DFA3_transition;
        }
        public String getDescription() {
            return "()* loopback of 233:3: ( declaration | lineDirective )*";
        }
    }
    static final String DFA4_eotS =
        "\14\uffff";
    static final String DFA4_eofS =
        "\14\uffff";
    static final String DFA4_minS =
        "\1\6\13\uffff";
    static final String DFA4_maxS =
        "\1\112\13\uffff";
    static final String DFA4_acceptS =
        "\1\uffff\1\2\1\1\11\uffff";
    static final String DFA4_specialS =
        "\14\uffff}>";
    static final String[] DFA4_transitionS = {
            "\1\2\21\uffff\1\1\2\2\3\uffff\3\2\14\uffff\3\2\13\uffff\20\2",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA4_eot = DFA.unpackEncodedString(DFA4_eotS);
    static final short[] DFA4_eof = DFA.unpackEncodedString(DFA4_eofS);
    static final char[] DFA4_min = DFA.unpackEncodedStringToUnsignedChars(DFA4_minS);
    static final char[] DFA4_max = DFA.unpackEncodedStringToUnsignedChars(DFA4_maxS);
    static final short[] DFA4_accept = DFA.unpackEncodedString(DFA4_acceptS);
    static final short[] DFA4_special = DFA.unpackEncodedString(DFA4_specialS);
    static final short[][] DFA4_transition;

    static {
        int numStates = DFA4_transitionS.length;
        DFA4_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA4_transition[i] = DFA.unpackEncodedString(DFA4_transitionS[i]);
        }
    }

    class DFA4 extends DFA {

        public DFA4(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 4;
            this.eot = DFA4_eot;
            this.eof = DFA4_eof;
            this.min = DFA4_min;
            this.max = DFA4_max;
            this.accept = DFA4_accept;
            this.special = DFA4_special;
            this.transition = DFA4_transition;
        }
        public String getDescription() {
            return "()* loopback of 253:4: (ed= declaration )*";
        }
    }
    static final String DFA6_eotS =
        "\u010a\uffff";
    static final String DFA6_eofS =
        "\u010a\uffff";
    static final String DFA6_minS =
        "\1\6\1\5\2\6\1\100\2\6\4\uffff\1\6\1\4\3\6\1\100\4\6\1\66\1\uffff"+
        "\6\6\2\uffff\1\6\2\uffff\5\6\1\66\1\6\1\uffff\5\6\1\66\1\6\10\uffff"+
        "\16\0\1\uffff\3\0\7\uffff\10\0\2\uffff\12\0\1\uffff\1\0\3\uffff"+
        "\11\0\1\uffff\5\0\1\uffff\4\0\1\uffff\5\0\1\uffff\14\0\1\uffff\2"+
        "\0\2\uffff\23\0\1\uffff\1\0\3\uffff\5\0\3\uffff\3\0\3\uffff\7\0"+
        "\1\uffff\5\0\1\uffff\2\0\4\uffff\1\0\1\uffff\4\0\1\uffff\5\0\1\uffff"+
        "\4\0\2\uffff\6\0\1\uffff\5\0\1\uffff\2\0\4\uffff\1\0\1\uffff\4\0"+
        "\1\uffff\5\0\1\uffff\4\0\2\uffff";
    static final String DFA6_maxS =
        "\2\112\1\27\1\72\2\112\1\72\4\uffff\1\112\1\150\1\27\1\72\3\112"+
        "\3\72\1\66\1\uffff\1\112\1\72\1\112\1\72\1\30\1\72\2\uffff\1\72"+
        "\2\uffff\1\112\4\72\1\66\1\72\1\uffff\1\112\4\72\1\66\1\72\10\uffff"+
        "\16\0\1\uffff\3\0\7\uffff\10\0\2\uffff\12\0\1\uffff\1\0\3\uffff"+
        "\11\0\1\uffff\5\0\1\uffff\4\0\1\uffff\5\0\1\uffff\14\0\1\uffff\2"+
        "\0\2\uffff\23\0\1\uffff\1\0\3\uffff\5\0\3\uffff\3\0\3\uffff\7\0"+
        "\1\uffff\5\0\1\uffff\2\0\4\uffff\1\0\1\uffff\4\0\1\uffff\5\0\1\uffff"+
        "\4\0\2\uffff\6\0\1\uffff\5\0\1\uffff\2\0\4\uffff\1\0\1\uffff\4\0"+
        "\1\uffff\5\0\1\uffff\4\0\2\uffff";
    static final String DFA6_acceptS =
        "\7\uffff\1\4\1\5\1\6\1\7\13\uffff\1\3\12\uffff\1\1\26\uffff\1\2"+
        "\u00d1\uffff";
    static final String DFA6_specialS =
        "\71\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1"+
        "\14\1\15\1\uffff\1\16\1\17\1\20\7\uffff\1\21\1\22\1\23\1\24\1\25"+
        "\1\26\1\27\1\30\2\uffff\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40"+
        "\1\41\1\42\1\uffff\1\43\3\uffff\1\44\1\45\1\46\1\47\1\50\1\51\1"+
        "\52\1\53\1\54\1\uffff\1\55\1\56\1\57\1\60\1\61\1\uffff\1\62\1\63"+
        "\1\64\1\65\1\uffff\1\66\1\67\1\70\1\71\1\72\1\uffff\1\73\1\74\1"+
        "\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\uffff"+
        "\1\107\1\110\2\uffff\1\111\1\112\1\113\1\114\1\115\1\116\1\117\1"+
        "\120\1\121\1\122\1\123\1\124\1\125\1\126\1\127\1\130\1\131\1\132"+
        "\1\133\1\uffff\1\134\3\uffff\1\135\1\136\1\137\1\140\1\141\3\uffff"+
        "\1\142\1\143\1\144\3\uffff\1\145\1\146\1\147\1\150\1\151\1\152\1"+
        "\153\1\uffff\1\154\1\155\1\156\1\157\1\160\1\uffff\1\161\1\162\4"+
        "\uffff\1\163\1\uffff\1\164\1\165\1\166\1\167\1\uffff\1\170\1\171"+
        "\1\172\1\173\1\174\1\uffff\1\175\1\176\1\177\1\u0080\2\uffff\1\u0081"+
        "\1\u0082\1\u0083\1\u0084\1\u0085\1\u0086\1\uffff\1\u0087\1\u0088"+
        "\1\u0089\1\u008a\1\u008b\1\uffff\1\u008c\1\u008d\4\uffff\1\u008e"+
        "\1\uffff\1\u008f\1\u0090\1\u0091\1\u0092\1\uffff\1\u0093\1\u0094"+
        "\1\u0095\1\u0096\1\u0097\1\uffff\1\u0098\1\u0099\1\u009a\1\u009b"+
        "\2\uffff}>";
    static final String[] DFA6_transitionS = {
            "\1\1\22\uffff\1\12\1\11\3\uffff\1\3\2\7\14\uffff\3\2\13\uffff"+
            "\1\10\4\4\2\5\11\6",
            "\1\13\1\17\27\uffff\1\16\3\uffff\1\14\1\uffff\1\27\10\uffff"+
            "\3\15\3\uffff\1\23\1\24\1\25\4\uffff\1\26\1\uffff\4\20\2\21"+
            "\11\22",
            "\1\30\20\uffff\1\31",
            "\1\32\20\uffff\1\33\4\uffff\1\26\5\uffff\1\26\20\uffff\1\34"+
            "\1\37\1\41\4\uffff\1\26",
            "\2\42\11\43",
            "\1\44\33\uffff\1\50\20\uffff\1\45\1\46\1\47\4\uffff\1\26\5"+
            "\uffff\2\52\11\53",
            "\1\54\33\uffff\1\60\20\uffff\1\55\1\56\1\57\4\uffff\1\26",
            "",
            "",
            "",
            "",
            "\1\41\20\uffff\1\70\6\uffff\1\41\16\uffff\3\41\14\uffff\17"+
            "\41",
            "\1\75\1\102\1\72\1\76\1\77\1\100\1\101\23\uffff\1\41\1\105"+
            "\2\uffff\1\74\1\41\7\uffff\1\110\4\41\3\uffff\1\73\1\112\1\103"+
            "\1\uffff\1\71\2\uffff\1\26\1\uffff\17\41\14\uffff\1\104\1\106"+
            "\13\uffff\1\111\4\110",
            "\1\122\20\uffff\1\123",
            "\1\124\20\uffff\1\125\4\uffff\1\26\5\uffff\1\131\20\uffff\1"+
            "\126\1\127\1\130\4\uffff\1\26",
            "\1\140\24\uffff\3\26\1\137\3\uffff\1\134\1\uffff\1\147\10\uffff"+
            "\3\136\3\uffff\1\135\1\144\1\145\4\uffff\1\26\1\uffff\4\141"+
            "\2\142\11\143",
            "\2\153\11\154",
            "\1\157\33\uffff\1\163\20\uffff\1\160\1\161\1\162\4\uffff\1"+
            "\26\5\uffff\2\155\11\156",
            "\1\165\33\uffff\1\171\20\uffff\1\166\1\167\1\170\4\uffff\1"+
            "\26",
            "\1\173\33\uffff\1\u0080\20\uffff\1\174\1\175\1\176\4\uffff"+
            "\1\26",
            "\1\u0081\33\uffff\1\u0086\20\uffff\1\u0082\1\u0083\1\u0084"+
            "\4\uffff\1\26",
            "\1\u0087",
            "",
            "\1\u008a\27\uffff\1\u0089\6\uffff\1\u008e\7\uffff\3\u0088\14"+
            "\uffff\4\u008b\2\u008c\11\u008d",
            "\1\u008f\20\uffff\1\u0093\4\uffff\1\26\5\uffff\1\u0094\20\uffff"+
            "\1\u0090\1\u0091\1\41\4\uffff\1\26",
            "\1\u009a\21\uffff\1\u00a4\1\u00a3\1\u00a2\3\uffff\1\u009c\2"+
            "\u00a0\14\uffff\3\u009b\1\u0097\1\u0098\1\u0099\10\uffff\1\u00a1"+
            "\4\u009d\2\u009e\11\u009f",
            "\1\u00a8\20\uffff\1\u00a7\3\uffff\3\26\4\uffff\1\u00a6\20\uffff"+
            "\1\u00a5\1\u00a9\1\u00ab\4\uffff\1\26",
            "\1\u00af\21\uffff\1\u00b0",
            "\1\u00b1\33\uffff\1\26\20\uffff\1\u00b2\1\u00b3\1\41\4\uffff"+
            "\1\26",
            "",
            "",
            "\1\u00b7\33\uffff\1\26\20\uffff\1\u00b8\1\u00b9\1\41\4\uffff"+
            "\1\26",
            "",
            "",
            "\1\u00bf\33\uffff\1\u00c3\20\uffff\1\u00c0\1\u00c1\1\u00c2"+
            "\4\uffff\1\26\5\uffff\2\u00bd\11\u00be",
            "\1\u00c5\33\uffff\1\u00c9\20\uffff\1\u00c6\1\u00c7\1\u00c8"+
            "\4\uffff\1\26",
            "\1\u00d1\24\uffff\3\26\4\uffff\1\u00cc\20\uffff\1\u00cb\2\26"+
            "\4\uffff\1\26",
            "\1\u00d3\33\uffff\1\u00d8\20\uffff\1\u00d4\1\u00d5\1\u00d6"+
            "\4\uffff\1\26",
            "\1\u00d9\33\uffff\1\u00de\20\uffff\1\u00da\1\u00db\1\u00dc"+
            "\4\uffff\1\26",
            "\1\u00df",
            "\1\u00e0\33\uffff\1\26\20\uffff\1\u00e1\1\26\5\uffff\1\26",
            "",
            "\1\u00e5\33\uffff\1\u00e9\20\uffff\1\u00e6\1\u00e7\1\u00e8"+
            "\4\uffff\1\26\5\uffff\13\u00e4",
            "\1\u00eb\33\uffff\1\u00ef\20\uffff\1\u00ec\1\u00ed\1\u00ee"+
            "\4\uffff\1\26",
            "\1\u00f7\24\uffff\3\26\4\uffff\1\u00f2\20\uffff\1\u00f1\2\26"+
            "\4\uffff\1\26",
            "\1\u00f9\33\uffff\1\u00fe\20\uffff\1\u00fa\1\u00fb\1\u00fc"+
            "\4\uffff\1\26",
            "\1\u00ff\33\uffff\1\u0104\20\uffff\1\u0100\1\u0101\1\u0102"+
            "\4\uffff\1\26",
            "\1\u0105",
            "\1\u0106\33\uffff\1\26\20\uffff\1\u0107\1\26\5\uffff\1\26",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };

    static final short[] DFA6_eot = DFA.unpackEncodedString(DFA6_eotS);
    static final short[] DFA6_eof = DFA.unpackEncodedString(DFA6_eofS);
    static final char[] DFA6_min = DFA.unpackEncodedStringToUnsignedChars(DFA6_minS);
    static final char[] DFA6_max = DFA.unpackEncodedStringToUnsignedChars(DFA6_maxS);
    static final short[] DFA6_accept = DFA.unpackEncodedString(DFA6_acceptS);
    static final short[] DFA6_special = DFA.unpackEncodedString(DFA6_specialS);
    static final short[][] DFA6_transition;

    static {
        int numStates = DFA6_transitionS.length;
        DFA6_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA6_transition[i] = DFA.unpackEncodedString(DFA6_transitionS[i]);
        }
    }

    class DFA6 extends DFA {

        public DFA6(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 6;
            this.eot = DFA6_eot;
            this.eof = DFA6_eof;
            this.min = DFA6_min;
            this.max = DFA6_max;
            this.accept = DFA6_accept;
            this.special = DFA6_special;
            this.transition = DFA6_transition;
        }
        public String getDescription() {
            return "275:4: ( functionDeclaration | externDeclarations | varDecl | objCClassDef | typeDef | forwardClassDecl | 'namespace' ns= IDENTIFIER '{' (subD= declaration )* '}' )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA6_57 = input.LA(1);

                         
                        int index6_57 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( ((synpred8_ObjCpp()&&( "__success".equals(next()) ))) ) {s = 22;}

                         
                        input.seek(index6_57);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA6_58 = input.LA(1);

                         
                        int index6_58 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( (((synpred8_ObjCpp()&&( Modifier.parseModifier(next()) == null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.VCAnnotation2Args) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.VCAnnotation1Arg) ))&&( Modifier.parseModifier(next()) != null )))) ) {s = 22;}

                         
                        input.seek(index6_58);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA6_59 = input.LA(1);

                         
                        int index6_59 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( (((synpred8_ObjCpp()&&( Modifier.parseModifier(next()) == null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.VCAnnotation2Args) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.VCAnnotation1Arg) ))&&( Modifier.parseModifier(next()) != null )))) ) {s = 22;}

                         
                        input.seek(index6_59);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA6_60 = input.LA(1);

                         
                        int index6_60 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( (((synpred8_ObjCpp()&&( Modifier.parseModifier(next()) == null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.VCAnnotation2Args) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.VCAnnotation1Arg) ))&&( Modifier.parseModifier(next()) != null )))) ) {s = 22;}

                         
                        input.seek(index6_60);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA6_61 = input.LA(1);

                         
                        int index6_61 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( ((((synpred8_ObjCpp()&&( next(Modifier.Kind.VCAnnotation2Args) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.VCAnnotation1Arg) ))&&( Modifier.parseModifier(next()) != null )))) ) {s = 22;}

                         
                        input.seek(index6_61);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA6_62 = input.LA(1);

                         
                        int index6_62 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( ((((synpred8_ObjCpp()&&( next(Modifier.Kind.VCAnnotation2Args) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.VCAnnotation1Arg) ))&&( Modifier.parseModifier(next()) != null )))) ) {s = 22;}

                         
                        input.seek(index6_62);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA6_63 = input.LA(1);

                         
                        int index6_63 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( ((((synpred8_ObjCpp()&&( next(Modifier.Kind.VCAnnotation2Args) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.VCAnnotation1Arg) ))&&( Modifier.parseModifier(next()) != null )))) ) {s = 22;}

                         
                        input.seek(index6_63);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA6_64 = input.LA(1);

                         
                        int index6_64 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( ((((synpred8_ObjCpp()&&( next(Modifier.Kind.VCAnnotation2Args) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.VCAnnotation1Arg) ))&&( Modifier.parseModifier(next()) != null )))) ) {s = 22;}

                         
                        input.seek(index6_64);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA6_65 = input.LA(1);

                         
                        int index6_65 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( ((((synpred8_ObjCpp()&&( next(Modifier.Kind.VCAnnotation2Args) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.VCAnnotation1Arg) ))&&( Modifier.parseModifier(next()) != null )))) ) {s = 22;}

                         
                        input.seek(index6_65);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA6_66 = input.LA(1);

                         
                        int index6_66 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( ((((synpred8_ObjCpp()&&( next(Modifier.Kind.VCAnnotation2Args) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.VCAnnotation1Arg) ))&&( Modifier.parseModifier(next()) != null )))) ) {s = 22;}

                         
                        input.seek(index6_66);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA6_67 = input.LA(1);

                         
                        int index6_67 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( ((((synpred8_ObjCpp()&&( next(Modifier.Kind.VCAnnotation2Args) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.VCAnnotation1Arg) ))&&( Modifier.parseModifier(next()) != null )))) ) {s = 22;}

                         
                        input.seek(index6_67);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA6_68 = input.LA(1);

                         
                        int index6_68 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( ((((synpred8_ObjCpp()&&( next(Modifier.Kind.VCAnnotation2Args) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.VCAnnotation1Arg) ))&&( Modifier.parseModifier(next()) != null )))) ) {s = 22;}

                         
                        input.seek(index6_68);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA6_69 = input.LA(1);

                         
                        int index6_69 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( ((((synpred8_ObjCpp()&&( next(Modifier.Kind.VCAnnotation2Args) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.VCAnnotation1Arg) ))&&( Modifier.parseModifier(next()) != null )))) ) {s = 22;}

                         
                        input.seek(index6_69);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA6_70 = input.LA(1);

                         
                        int index6_70 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( ((((synpred8_ObjCpp()&&( next(Modifier.Kind.VCAnnotation2Args) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.VCAnnotation1Arg) ))&&( Modifier.parseModifier(next()) != null )))) ) {s = 22;}

                         
                        input.seek(index6_70);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA6_72 = input.LA(1);

                         
                        int index6_72 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( ((((synpred8_ObjCpp()&&( next(Modifier.Kind.VCAnnotation2Args) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.VCAnnotation1Arg) ))&&( Modifier.parseModifier(next()) != null )))) ) {s = 22;}

                         
                        input.seek(index6_72);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA6_73 = input.LA(1);

                         
                        int index6_73 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( ((((synpred8_ObjCpp()&&( next(Modifier.Kind.VCAnnotation2Args) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.VCAnnotation1Arg) ))&&( Modifier.parseModifier(next()) != null )))) ) {s = 22;}

                         
                        input.seek(index6_73);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA6_74 = input.LA(1);

                         
                        int index6_74 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( (((synpred8_ObjCpp()&&( Modifier.parseModifier(next()) == null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.VCAnnotation2Args) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.VCAnnotation1Arg) ))&&( Modifier.parseModifier(next()) != null )))) ) {s = 22;}

                         
                        input.seek(index6_74);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA6_82 = input.LA(1);

                         
                        int index6_82 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( ((((synpred8_ObjCpp()&&( next(Modifier.Kind.TypeQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.StorageClassSpecifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.ReferenceQualifier) ))&&( Modifier.parseModifier(next()) != null )))) ) {s = 22;}

                         
                        input.seek(index6_82);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA6_83 = input.LA(1);

                         
                        int index6_83 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( ((((synpred8_ObjCpp()&&( next(Modifier.Kind.TypeQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.StorageClassSpecifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.ReferenceQualifier) ))&&( Modifier.parseModifier(next()) != null )))) ) {s = 22;}

                         
                        input.seek(index6_83);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA6_84 = input.LA(1);

                         
                        int index6_84 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( ((((synpred8_ObjCpp()&&( next(Modifier.Kind.TypeQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.ReferenceQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.StorageClassSpecifier) ))&&( Modifier.parseModifier(next()) != null )))) ) {s = 22;}

                         
                        input.seek(index6_84);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA6_85 = input.LA(1);

                         
                        int index6_85 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( ((((synpred8_ObjCpp()&&( next(Modifier.Kind.TypeQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.ReferenceQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.StorageClassSpecifier) ))&&( Modifier.parseModifier(next()) != null )))) ) {s = 22;}

                         
                        input.seek(index6_85);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA6_86 = input.LA(1);

                         
                        int index6_86 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( ((((synpred8_ObjCpp()&&( next(Modifier.Kind.TypeQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.ReferenceQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.StorageClassSpecifier) ))&&( Modifier.parseModifier(next()) != null )))) ) {s = 22;}

                         
                        input.seek(index6_86);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA6_87 = input.LA(1);

                         
                        int index6_87 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( ((((synpred8_ObjCpp()&&( next(Modifier.Kind.TypeQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.ReferenceQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.StorageClassSpecifier) ))&&( Modifier.parseModifier(next()) != null )))) ) {s = 22;}

                         
                        input.seek(index6_87);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA6_88 = input.LA(1);

                         
                        int index6_88 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( (((synpred8_ObjCpp()&&( next(Modifier.Kind.ReferenceQualifier) ))&&( Modifier.parseModifier(next()) != null ))) ) {s = 22;}

                         
                        input.seek(index6_88);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA6_89 = input.LA(1);

                         
                        int index6_89 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( ((((synpred8_ObjCpp()&&( next(Modifier.Kind.TypeQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.ReferenceQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.StorageClassSpecifier) ))&&( Modifier.parseModifier(next()) != null )))) ) {s = 22;}

                         
                        input.seek(index6_89);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA6_92 = input.LA(1);

                         
                        int index6_92 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( (((synpred8_ObjCpp()&&( Modifier.parseModifier(next()) == null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.TypeQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.ReferenceQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.TypeQualifier, Modifier.Kind.VCAnnotationNoArg) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.StorageClassSpecifier) ))&&( Modifier.parseModifier(next()) != null )))) ) {s = 22;}

                         
                        input.seek(index6_92);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA6_93 = input.LA(1);

                         
                        int index6_93 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( (((synpred8_ObjCpp()&&( Modifier.parseModifier(next()) == null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.TypeQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.ReferenceQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.StorageClassSpecifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.TypeQualifier, Modifier.Kind.VCAnnotationNoArg) ))&&( Modifier.parseModifier(next()) != null )))) ) {s = 22;}

                         
                        input.seek(index6_93);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA6_94 = input.LA(1);

                         
                        int index6_94 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( ((((synpred8_ObjCpp()&&( next(Modifier.Kind.TypeQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.StorageClassSpecifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.ReferenceQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.TypeQualifier, Modifier.Kind.VCAnnotationNoArg) ))&&( Modifier.parseModifier(next()) != null )))) ) {s = 22;}

                         
                        input.seek(index6_94);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA6_95 = input.LA(1);

                         
                        int index6_95 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( ((((synpred8_ObjCpp()&&( next(Modifier.Kind.TypeQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.StorageClassSpecifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.ReferenceQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.TypeQualifier, Modifier.Kind.VCAnnotationNoArg) ))&&( Modifier.parseModifier(next()) != null )))) ) {s = 22;}

                         
                        input.seek(index6_95);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA6_96 = input.LA(1);

                         
                        int index6_96 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( (((synpred8_ObjCpp()&&( Modifier.parseModifier(next()) == null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.TypeQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.StorageClassSpecifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.TypeQualifier, Modifier.Kind.VCAnnotationNoArg) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.ReferenceQualifier) ))&&( Modifier.parseModifier(next()) != null )))) ) {s = 22;}

                         
                        input.seek(index6_96);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA6_97 = input.LA(1);

                         
                        int index6_97 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( ((((synpred8_ObjCpp()&&( next(Modifier.Kind.TypeQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.StorageClassSpecifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.TypeQualifier, Modifier.Kind.VCAnnotationNoArg) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.ReferenceQualifier) ))&&( Modifier.parseModifier(next()) != null )))) ) {s = 22;}

                         
                        input.seek(index6_97);
                        if ( s>=0 ) return s;
                        break;
                    case 31 : 
                        int LA6_98 = input.LA(1);

                         
                        int index6_98 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( ((((synpred8_ObjCpp()&&( next(Modifier.Kind.TypeQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.StorageClassSpecifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.TypeQualifier, Modifier.Kind.VCAnnotationNoArg) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.ReferenceQualifier) ))&&( Modifier.parseModifier(next()) != null )))) ) {s = 22;}

                         
                        input.seek(index6_98);
                        if ( s>=0 ) return s;
                        break;
                    case 32 : 
                        int LA6_99 = input.LA(1);

                         
                        int index6_99 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( ((((synpred8_ObjCpp()&&( next(Modifier.Kind.TypeQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.StorageClassSpecifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.TypeQualifier, Modifier.Kind.VCAnnotationNoArg) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.ReferenceQualifier) ))&&( Modifier.parseModifier(next()) != null )))) ) {s = 22;}

                         
                        input.seek(index6_99);
                        if ( s>=0 ) return s;
                        break;
                    case 33 : 
                        int LA6_100 = input.LA(1);

                         
                        int index6_100 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( (((synpred8_ObjCpp()&&( Modifier.parseModifier(next()) == null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.TypeQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.ReferenceQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.StorageClassSpecifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.TypeQualifier, Modifier.Kind.VCAnnotationNoArg) ))&&( Modifier.parseModifier(next()) != null )))) ) {s = 22;}

                         
                        input.seek(index6_100);
                        if ( s>=0 ) return s;
                        break;
                    case 34 : 
                        int LA6_101 = input.LA(1);

                         
                        int index6_101 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( (((synpred8_ObjCpp()&&( Modifier.parseModifier(next()) == null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.TypeQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.ReferenceQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.StorageClassSpecifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.TypeQualifier, Modifier.Kind.VCAnnotationNoArg) ))&&( Modifier.parseModifier(next()) != null )))) ) {s = 22;}

                         
                        input.seek(index6_101);
                        if ( s>=0 ) return s;
                        break;
                    case 35 : 
                        int LA6_103 = input.LA(1);

                         
                        int index6_103 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( ((((synpred8_ObjCpp()&&( next(Modifier.Kind.TypeQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.ReferenceQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.StorageClassSpecifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.TypeQualifier, Modifier.Kind.VCAnnotationNoArg) ))&&( Modifier.parseModifier(next()) != null )))) ) {s = 22;}

                         
                        input.seek(index6_103);
                        if ( s>=0 ) return s;
                        break;
                    case 36 : 
                        int LA6_107 = input.LA(1);

                         
                        int index6_107 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( ((((synpred8_ObjCpp()&&( next(Modifier.Kind.TypeQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.TypeQualifier, Modifier.Kind.VCAnnotationNoArg) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.ReferenceQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.StorageClassSpecifier) ))&&( Modifier.parseModifier(next()) != null )))) ) {s = 22;}

                         
                        input.seek(index6_107);
                        if ( s>=0 ) return s;
                        break;
                    case 37 : 
                        int LA6_108 = input.LA(1);

                         
                        int index6_108 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( ((((synpred8_ObjCpp()&&( next(Modifier.Kind.TypeQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.TypeQualifier, Modifier.Kind.VCAnnotationNoArg) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.ReferenceQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.StorageClassSpecifier) ))&&( Modifier.parseModifier(next()) != null )))) ) {s = 22;}

                         
                        input.seek(index6_108);
                        if ( s>=0 ) return s;
                        break;
                    case 38 : 
                        int LA6_109 = input.LA(1);

                         
                        int index6_109 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( ((((synpred8_ObjCpp()&&( next(Modifier.Kind.TypeQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.TypeQualifier, Modifier.Kind.VCAnnotationNoArg) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.ReferenceQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.StorageClassSpecifier) ))&&( Modifier.parseModifier(next()) != null )))) ) {s = 22;}

                         
                        input.seek(index6_109);
                        if ( s>=0 ) return s;
                        break;
                    case 39 : 
                        int LA6_110 = input.LA(1);

                         
                        int index6_110 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( ((((synpred8_ObjCpp()&&( next(Modifier.Kind.TypeQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.TypeQualifier, Modifier.Kind.VCAnnotationNoArg) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.ReferenceQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.StorageClassSpecifier) ))&&( Modifier.parseModifier(next()) != null )))) ) {s = 22;}

                         
                        input.seek(index6_110);
                        if ( s>=0 ) return s;
                        break;
                    case 40 : 
                        int LA6_111 = input.LA(1);

                         
                        int index6_111 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( ((((synpred8_ObjCpp()&&( next(Modifier.Kind.TypeQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.TypeQualifier, Modifier.Kind.VCAnnotationNoArg) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.ReferenceQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.StorageClassSpecifier) ))&&( Modifier.parseModifier(next()) != null )))) ) {s = 22;}

                         
                        input.seek(index6_111);
                        if ( s>=0 ) return s;
                        break;
                    case 41 : 
                        int LA6_112 = input.LA(1);

                         
                        int index6_112 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( ((((synpred8_ObjCpp()&&( next(Modifier.Kind.TypeQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.TypeQualifier, Modifier.Kind.VCAnnotationNoArg) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.ReferenceQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.StorageClassSpecifier) ))&&( Modifier.parseModifier(next()) != null )))) ) {s = 22;}

                         
                        input.seek(index6_112);
                        if ( s>=0 ) return s;
                        break;
                    case 42 : 
                        int LA6_113 = input.LA(1);

                         
                        int index6_113 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( ((((synpred8_ObjCpp()&&( next(Modifier.Kind.TypeQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.TypeQualifier, Modifier.Kind.VCAnnotationNoArg) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.ReferenceQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.StorageClassSpecifier) ))&&( Modifier.parseModifier(next()) != null )))) ) {s = 22;}

                         
                        input.seek(index6_113);
                        if ( s>=0 ) return s;
                        break;
                    case 43 : 
                        int LA6_114 = input.LA(1);

                         
                        int index6_114 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( ((((synpred8_ObjCpp()&&( next(Modifier.Kind.TypeQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.TypeQualifier, Modifier.Kind.VCAnnotationNoArg) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.ReferenceQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.StorageClassSpecifier) ))&&( Modifier.parseModifier(next()) != null )))) ) {s = 22;}

                         
                        input.seek(index6_114);
                        if ( s>=0 ) return s;
                        break;
                    case 44 : 
                        int LA6_115 = input.LA(1);

                         
                        int index6_115 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( ((((synpred8_ObjCpp()&&( next(Modifier.Kind.TypeQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.TypeQualifier, Modifier.Kind.VCAnnotationNoArg) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.ReferenceQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.StorageClassSpecifier) ))&&( Modifier.parseModifier(next()) != null )))) ) {s = 22;}

                         
                        input.seek(index6_115);
                        if ( s>=0 ) return s;
                        break;
                    case 45 : 
                        int LA6_117 = input.LA(1);

                         
                        int index6_117 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( ((((synpred8_ObjCpp()&&( next(Modifier.Kind.TypeQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.TypeQualifier, Modifier.Kind.VCAnnotationNoArg) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.ReferenceQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.StorageClassSpecifier) ))&&( Modifier.parseModifier(next()) != null )))) ) {s = 22;}

                         
                        input.seek(index6_117);
                        if ( s>=0 ) return s;
                        break;
                    case 46 : 
                        int LA6_118 = input.LA(1);

                         
                        int index6_118 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( ((((synpred8_ObjCpp()&&( next(Modifier.Kind.TypeQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.TypeQualifier, Modifier.Kind.VCAnnotationNoArg) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.ReferenceQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.StorageClassSpecifier) ))&&( Modifier.parseModifier(next()) != null )))) ) {s = 22;}

                         
                        input.seek(index6_118);
                        if ( s>=0 ) return s;
                        break;
                    case 47 : 
                        int LA6_119 = input.LA(1);

                         
                        int index6_119 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( ((((synpred8_ObjCpp()&&( next(Modifier.Kind.TypeQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.TypeQualifier, Modifier.Kind.VCAnnotationNoArg) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.ReferenceQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.StorageClassSpecifier) ))&&( Modifier.parseModifier(next()) != null )))) ) {s = 22;}

                         
                        input.seek(index6_119);
                        if ( s>=0 ) return s;
                        break;
                    case 48 : 
                        int LA6_120 = input.LA(1);

                         
                        int index6_120 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( ((((synpred8_ObjCpp()&&( next(Modifier.Kind.TypeQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.TypeQualifier, Modifier.Kind.VCAnnotationNoArg) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.ReferenceQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.StorageClassSpecifier) ))&&( Modifier.parseModifier(next()) != null )))) ) {s = 22;}

                         
                        input.seek(index6_120);
                        if ( s>=0 ) return s;
                        break;
                    case 49 : 
                        int LA6_121 = input.LA(1);

                         
                        int index6_121 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( ((((synpred8_ObjCpp()&&( next(Modifier.Kind.TypeQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.TypeQualifier, Modifier.Kind.VCAnnotationNoArg) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.ReferenceQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred8_ObjCpp()&&( next(Modifier.Kind.StorageClassSpecifier) ))&&( Modifier.parseModifier(next()) != null )))) ) {s = 22;}

                         
                        input.seek(index6_121);
                        if ( s>=0 ) return s;
                        break;
                    case 50 : 
                        int LA6_123 = input.LA(1);

                         
                        int index6_123 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( ((synpred8_ObjCpp()&&( Modifier.parseModifier(next()) == null ))) ) {s = 22;}

                         
                        input.seek(index6_123);
                        if ( s>=0 ) return s;
                        break;
                    case 51 : 
                        int LA6_124 = input.LA(1);

                         
                        int index6_124 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( ((synpred8_ObjCpp()&&( Modifier.parseModifier(next()) == null ))) ) {s = 22;}

                         
                        input.seek(index6_124);
                        if ( s>=0 ) return s;
                        break;
                    case 52 : 
                        int LA6_125 = input.LA(1);

                         
                        int index6_125 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( ((synpred8_ObjCpp()&&( Modifier.parseModifier(next()) == null ))) ) {s = 22;}

                         
                        input.seek(index6_125);
                        if ( s>=0 ) return s;
                        break;
                    case 53 : 
                        int LA6_126 = input.LA(1);

                         
                        int index6_126 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( ((synpred8_ObjCpp()&&( Modifier.parseModifier(next()) == null ))) ) {s = 22;}

                         
                        input.seek(index6_126);
                        if ( s>=0 ) return s;
                        break;
                    case 54 : 
                        int LA6_128 = input.LA(1);

                         
                        int index6_128 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( ((synpred8_ObjCpp()&&( Modifier.parseModifier(next()) == null ))) ) {s = 22;}

                         
                        input.seek(index6_128);
                        if ( s>=0 ) return s;
                        break;
                    case 55 : 
                        int LA6_129 = input.LA(1);

                         
                        int index6_129 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( ((synpred8_ObjCpp()&&( Modifier.parseModifier(next()) == null ))) ) {s = 22;}

                         
                        input.seek(index6_129);
                        if ( s>=0 ) return s;
                        break;
                    case 56 : 
                        int LA6_130 = input.LA(1);

                         
                        int index6_130 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( ((synpred8_ObjCpp()&&( Modifier.parseModifier(next()) == null ))) ) {s = 22;}

                         
                        input.seek(index6_130);
                        if ( s>=0 ) return s;
                        break;
                    case 57 : 
                        int LA6_131 = input.LA(1);

                         
                        int index6_131 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( ((synpred8_ObjCpp()&&( Modifier.parseModifier(next()) == null ))) ) {s = 22;}

                         
                        input.seek(index6_131);
                        if ( s>=0 ) return s;
                        break;
                    case 58 : 
                        int LA6_132 = input.LA(1);

                         
                        int index6_132 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( ((synpred8_ObjCpp()&&( Modifier.parseModifier(next()) == null ))) ) {s = 22;}

                         
                        input.seek(index6_132);
                        if ( s>=0 ) return s;
                        break;
                    case 59 : 
                        int LA6_134 = input.LA(1);

                         
                        int index6_134 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( ((synpred8_ObjCpp()&&( Modifier.parseModifier(next()) == null ))) ) {s = 22;}

                         
                        input.seek(index6_134);
                        if ( s>=0 ) return s;
                        break;
                    case 60 : 
                        int LA6_135 = input.LA(1);

                         
                        int index6_135 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( ((synpred8_ObjCpp()&&( Modifier.parseModifier(next()) == null ))) ) {s = 22;}

                         
                        input.seek(index6_135);
                        if ( s>=0 ) return s;
                        break;
                    case 61 : 
                        int LA6_136 = input.LA(1);

                         
                        int index6_136 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( ((synpred8_ObjCpp()&&( Modifier.parseModifier(next()) == null ))) ) {s = 22;}

                         
                        input.seek(index6_136);
                        if ( s>=0 ) return s;
                        break;
                    case 62 : 
                        int LA6_137 = input.LA(1);

                         
                        int index6_137 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( ((synpred8_ObjCpp()&&( Modifier.parseModifier(next()) == null ))) ) {s = 22;}

                         
                        input.seek(index6_137);
                        if ( s>=0 ) return s;
                        break;
                    case 63 : 
                        int LA6_138 = input.LA(1);

                         
                        int index6_138 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( ((synpred8_ObjCpp()&&( Modifier.parseModifier(next()) == null ))) ) {s = 22;}

                         
                        input.seek(index6_138);
                        if ( s>=0 ) return s;
                        break;
                    case 64 : 
                        int LA6_139 = input.LA(1);

                         
                        int index6_139 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( ((synpred8_ObjCpp()&&( Modifier.parseModifier(next()) == null ))) ) {s = 22;}

                         
                        input.seek(index6_139);
                        if ( s>=0 ) return s;
                        break;
                    case 65 : 
                        int LA6_140 = input.LA(1);

                         
                        int index6_140 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( ((synpred8_ObjCpp()&&( Modifier.parseModifier(next()) == null ))) ) {s = 22;}

                         
                        input.seek(index6_140);
                        if ( s>=0 ) return s;
                        break;
                    case 66 : 
                        int LA6_141 = input.LA(1);

                         
                        int index6_141 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( ((synpred8_ObjCpp()&&( Modifier.parseModifier(next()) == null ))) ) {s = 22;}

                         
                        input.seek(index6_141);
                        if ( s>=0 ) return s;
                        break;
                    case 67 : 
                        int LA6_142 = input.LA(1);

                         
                        int index6_142 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( ((synpred8_ObjCpp()&&( Modifier.parseModifier(next()) == null ))) ) {s = 22;}

                         
                        input.seek(index6_142);
                        if ( s>=0 ) return s;
                        break;
                    case 68 : 
                        int LA6_143 = input.LA(1);

                         
                        int index6_143 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( (synpred8_ObjCpp()) ) {s = 22;}

                         
                        input.seek(index6_143);
                        if ( s>=0 ) return s;
                        break;
                    case 69 : 
                        int LA6_144 = input.LA(1);

                         
                        int index6_144 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( (synpred8_ObjCpp()) ) {s = 22;}

                         
                        input.seek(index6_144);
                        if ( s>=0 ) return s;
                        break;
                    case 70 : 
                        int LA6_145 = input.LA(1);

                         
                        int index6_145 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( (synpred8_ObjCpp()) ) {s = 22;}

                         
                        input.seek(index6_145);
                        if ( s>=0 ) return s;
                        break;
                    case 71 : 
                        int LA6_147 = input.LA(1);

                         
                        int index6_147 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( (synpred8_ObjCpp()) ) {s = 22;}

                         
                        input.seek(index6_147);
                        if ( s>=0 ) return s;
                        break;
                    case 72 : 
                        int LA6_148 = input.LA(1);

                         
                        int index6_148 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( (synpred8_ObjCpp()) ) {s = 22;}

                         
                        input.seek(index6_148);
                        if ( s>=0 ) return s;
                        break;
                    case 73 : 
                        int LA6_151 = input.LA(1);

                         
                        int index6_151 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( (synpred8_ObjCpp()) ) {s = 22;}

                         
                        input.seek(index6_151);
                        if ( s>=0 ) return s;
                        break;
                    case 74 : 
                        int LA6_152 = input.LA(1);

                         
                        int index6_152 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( (synpred8_ObjCpp()) ) {s = 22;}

                         
                        input.seek(index6_152);
                        if ( s>=0 ) return s;
                        break;
                    case 75 : 
                        int LA6_153 = input.LA(1);

                         
                        int index6_153 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( (synpred8_ObjCpp()) ) {s = 22;}

                         
                        input.seek(index6_153);
                        if ( s>=0 ) return s;
                        break;
                    case 76 : 
                        int LA6_154 = input.LA(1);

                         
                        int index6_154 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( (synpred8_ObjCpp()) ) {s = 22;}

                         
                        input.seek(index6_154);
                        if ( s>=0 ) return s;
                        break;
                    case 77 : 
                        int LA6_155 = input.LA(1);

                         
                        int index6_155 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( (synpred8_ObjCpp()) ) {s = 22;}

                         
                        input.seek(index6_155);
                        if ( s>=0 ) return s;
                        break;
                    case 78 : 
                        int LA6_156 = input.LA(1);

                         
                        int index6_156 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( (synpred8_ObjCpp()) ) {s = 22;}

                         
                        input.seek(index6_156);
                        if ( s>=0 ) return s;
                        break;
                    case 79 : 
                        int LA6_157 = input.LA(1);

                         
                        int index6_157 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( (synpred8_ObjCpp()) ) {s = 22;}

                         
                        input.seek(index6_157);
                        if ( s>=0 ) return s;
                        break;
                    case 80 : 
                        int LA6_158 = input.LA(1);

                         
                        int index6_158 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( (synpred8_ObjCpp()) ) {s = 22;}

                         
                        input.seek(index6_158);
                        if ( s>=0 ) return s;
                        break;
                    case 81 : 
                        int LA6_159 = input.LA(1);

                         
                        int index6_159 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( (synpred8_ObjCpp()) ) {s = 22;}

                         
                        input.seek(index6_159);
                        if ( s>=0 ) return s;
                        break;
                    case 82 : 
                        int LA6_160 = input.LA(1);

                         
                        int index6_160 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( (synpred8_ObjCpp()) ) {s = 22;}

                         
                        input.seek(index6_160);
                        if ( s>=0 ) return s;
                        break;
                    case 83 : 
                        int LA6_161 = input.LA(1);

                         
                        int index6_161 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( (synpred8_ObjCpp()) ) {s = 22;}

                         
                        input.seek(index6_161);
                        if ( s>=0 ) return s;
                        break;
                    case 84 : 
                        int LA6_162 = input.LA(1);

                         
                        int index6_162 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( (synpred8_ObjCpp()) ) {s = 22;}

                         
                        input.seek(index6_162);
                        if ( s>=0 ) return s;
                        break;
                    case 85 : 
                        int LA6_163 = input.LA(1);

                         
                        int index6_163 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( (synpred8_ObjCpp()) ) {s = 22;}

                         
                        input.seek(index6_163);
                        if ( s>=0 ) return s;
                        break;
                    case 86 : 
                        int LA6_164 = input.LA(1);

                         
                        int index6_164 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( (synpred8_ObjCpp()) ) {s = 22;}

                         
                        input.seek(index6_164);
                        if ( s>=0 ) return s;
                        break;
                    case 87 : 
                        int LA6_165 = input.LA(1);

                         
                        int index6_165 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( (synpred8_ObjCpp()) ) {s = 22;}

                         
                        input.seek(index6_165);
                        if ( s>=0 ) return s;
                        break;
                    case 88 : 
                        int LA6_166 = input.LA(1);

                         
                        int index6_166 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( (synpred8_ObjCpp()) ) {s = 22;}

                         
                        input.seek(index6_166);
                        if ( s>=0 ) return s;
                        break;
                    case 89 : 
                        int LA6_167 = input.LA(1);

                         
                        int index6_167 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( (synpred8_ObjCpp()) ) {s = 22;}

                         
                        input.seek(index6_167);
                        if ( s>=0 ) return s;
                        break;
                    case 90 : 
                        int LA6_168 = input.LA(1);

                         
                        int index6_168 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( (synpred8_ObjCpp()) ) {s = 22;}

                         
                        input.seek(index6_168);
                        if ( s>=0 ) return s;
                        break;
                    case 91 : 
                        int LA6_169 = input.LA(1);

                         
                        int index6_169 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( (synpred8_ObjCpp()) ) {s = 22;}

                         
                        input.seek(index6_169);
                        if ( s>=0 ) return s;
                        break;
                    case 92 : 
                        int LA6_171 = input.LA(1);

                         
                        int index6_171 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( (synpred8_ObjCpp()) ) {s = 22;}

                         
                        input.seek(index6_171);
                        if ( s>=0 ) return s;
                        break;
                    case 93 : 
                        int LA6_175 = input.LA(1);

                         
                        int index6_175 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( (synpred8_ObjCpp()) ) {s = 22;}

                         
                        input.seek(index6_175);
                        if ( s>=0 ) return s;
                        break;
                    case 94 : 
                        int LA6_176 = input.LA(1);

                         
                        int index6_176 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( (synpred8_ObjCpp()) ) {s = 22;}

                         
                        input.seek(index6_176);
                        if ( s>=0 ) return s;
                        break;
                    case 95 : 
                        int LA6_177 = input.LA(1);

                         
                        int index6_177 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( (synpred8_ObjCpp()) ) {s = 22;}

                         
                        input.seek(index6_177);
                        if ( s>=0 ) return s;
                        break;
                    case 96 : 
                        int LA6_178 = input.LA(1);

                         
                        int index6_178 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( (synpred8_ObjCpp()) ) {s = 22;}

                         
                        input.seek(index6_178);
                        if ( s>=0 ) return s;
                        break;
                    case 97 : 
                        int LA6_179 = input.LA(1);

                         
                        int index6_179 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( (synpred8_ObjCpp()) ) {s = 22;}

                         
                        input.seek(index6_179);
                        if ( s>=0 ) return s;
                        break;
                    case 98 : 
                        int LA6_183 = input.LA(1);

                         
                        int index6_183 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( (synpred8_ObjCpp()) ) {s = 22;}

                         
                        input.seek(index6_183);
                        if ( s>=0 ) return s;
                        break;
                    case 99 : 
                        int LA6_184 = input.LA(1);

                         
                        int index6_184 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( (synpred8_ObjCpp()) ) {s = 22;}

                         
                        input.seek(index6_184);
                        if ( s>=0 ) return s;
                        break;
                    case 100 : 
                        int LA6_185 = input.LA(1);

                         
                        int index6_185 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( (synpred8_ObjCpp()) ) {s = 22;}

                         
                        input.seek(index6_185);
                        if ( s>=0 ) return s;
                        break;
                    case 101 : 
                        int LA6_189 = input.LA(1);

                         
                        int index6_189 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( (synpred8_ObjCpp()) ) {s = 22;}

                         
                        input.seek(index6_189);
                        if ( s>=0 ) return s;
                        break;
                    case 102 : 
                        int LA6_190 = input.LA(1);

                         
                        int index6_190 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( (synpred8_ObjCpp()) ) {s = 22;}

                         
                        input.seek(index6_190);
                        if ( s>=0 ) return s;
                        break;
                    case 103 : 
                        int LA6_191 = input.LA(1);

                         
                        int index6_191 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( (synpred8_ObjCpp()) ) {s = 22;}

                         
                        input.seek(index6_191);
                        if ( s>=0 ) return s;
                        break;
                    case 104 : 
                        int LA6_192 = input.LA(1);

                         
                        int index6_192 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( (synpred8_ObjCpp()) ) {s = 22;}

                         
                        input.seek(index6_192);
                        if ( s>=0 ) return s;
                        break;
                    case 105 : 
                        int LA6_193 = input.LA(1);

                         
                        int index6_193 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( (synpred8_ObjCpp()) ) {s = 22;}

                         
                        input.seek(index6_193);
                        if ( s>=0 ) return s;
                        break;
                    case 106 : 
                        int LA6_194 = input.LA(1);

                         
                        int index6_194 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( (synpred8_ObjCpp()) ) {s = 22;}

                         
                        input.seek(index6_194);
                        if ( s>=0 ) return s;
                        break;
                    case 107 : 
                        int LA6_195 = input.LA(1);

                         
                        int index6_195 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( (synpred8_ObjCpp()) ) {s = 22;}

                         
                        input.seek(index6_195);
                        if ( s>=0 ) return s;
                        break;
                    case 108 : 
                        int LA6_197 = input.LA(1);

                         
                        int index6_197 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( (synpred8_ObjCpp()) ) {s = 22;}

                         
                        input.seek(index6_197);
                        if ( s>=0 ) return s;
                        break;
                    case 109 : 
                        int LA6_198 = input.LA(1);

                         
                        int index6_198 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( (synpred8_ObjCpp()) ) {s = 22;}

                         
                        input.seek(index6_198);
                        if ( s>=0 ) return s;
                        break;
                    case 110 : 
                        int LA6_199 = input.LA(1);

                         
                        int index6_199 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( (synpred8_ObjCpp()) ) {s = 22;}

                         
                        input.seek(index6_199);
                        if ( s>=0 ) return s;
                        break;
                    case 111 : 
                        int LA6_200 = input.LA(1);

                         
                        int index6_200 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( (synpred8_ObjCpp()) ) {s = 22;}

                         
                        input.seek(index6_200);
                        if ( s>=0 ) return s;
                        break;
                    case 112 : 
                        int LA6_201 = input.LA(1);

                         
                        int index6_201 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( (synpred8_ObjCpp()) ) {s = 22;}

                         
                        input.seek(index6_201);
                        if ( s>=0 ) return s;
                        break;
                    case 113 : 
                        int LA6_203 = input.LA(1);

                         
                        int index6_203 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( (synpred8_ObjCpp()) ) {s = 22;}

                         
                        input.seek(index6_203);
                        if ( s>=0 ) return s;
                        break;
                    case 114 : 
                        int LA6_204 = input.LA(1);

                         
                        int index6_204 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( (synpred8_ObjCpp()) ) {s = 22;}

                         
                        input.seek(index6_204);
                        if ( s>=0 ) return s;
                        break;
                    case 115 : 
                        int LA6_209 = input.LA(1);

                         
                        int index6_209 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( (synpred8_ObjCpp()) ) {s = 22;}

                         
                        input.seek(index6_209);
                        if ( s>=0 ) return s;
                        break;
                    case 116 : 
                        int LA6_211 = input.LA(1);

                         
                        int index6_211 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( (synpred8_ObjCpp()) ) {s = 22;}

                         
                        input.seek(index6_211);
                        if ( s>=0 ) return s;
                        break;
                    case 117 : 
                        int LA6_212 = input.LA(1);

                         
                        int index6_212 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( (synpred8_ObjCpp()) ) {s = 22;}

                         
                        input.seek(index6_212);
                        if ( s>=0 ) return s;
                        break;
                    case 118 : 
                        int LA6_213 = input.LA(1);

                         
                        int index6_213 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( (synpred8_ObjCpp()) ) {s = 22;}

                         
                        input.seek(index6_213);
                        if ( s>=0 ) return s;
                        break;
                    case 119 : 
                        int LA6_214 = input.LA(1);

                         
                        int index6_214 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( (synpred8_ObjCpp()) ) {s = 22;}

                         
                        input.seek(index6_214);
                        if ( s>=0 ) return s;
                        break;
                    case 120 : 
                        int LA6_216 = input.LA(1);

                         
                        int index6_216 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( (synpred8_ObjCpp()) ) {s = 22;}

                         
                        input.seek(index6_216);
                        if ( s>=0 ) return s;
                        break;
                    case 121 : 
                        int LA6_217 = input.LA(1);

                         
                        int index6_217 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( (synpred8_ObjCpp()) ) {s = 22;}

                         
                        input.seek(index6_217);
                        if ( s>=0 ) return s;
                        break;
                    case 122 : 
                        int LA6_218 = input.LA(1);

                         
                        int index6_218 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( (synpred8_ObjCpp()) ) {s = 22;}

                         
                        input.seek(index6_218);
                        if ( s>=0 ) return s;
                        break;
                    case 123 : 
                        int LA6_219 = input.LA(1);

                         
                        int index6_219 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( (synpred8_ObjCpp()) ) {s = 22;}

                         
                        input.seek(index6_219);
                        if ( s>=0 ) return s;
                        break;
                    case 124 : 
                        int LA6_220 = input.LA(1);

                         
                        int index6_220 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( (synpred8_ObjCpp()) ) {s = 22;}

                         
                        input.seek(index6_220);
                        if ( s>=0 ) return s;
                        break;
                    case 125 : 
                        int LA6_222 = input.LA(1);

                         
                        int index6_222 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( (synpred8_ObjCpp()) ) {s = 22;}

                         
                        input.seek(index6_222);
                        if ( s>=0 ) return s;
                        break;
                    case 126 : 
                        int LA6_223 = input.LA(1);

                         
                        int index6_223 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( (synpred8_ObjCpp()) ) {s = 22;}

                         
                        input.seek(index6_223);
                        if ( s>=0 ) return s;
                        break;
                    case 127 : 
                        int LA6_224 = input.LA(1);

                         
                        int index6_224 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( (synpred8_ObjCpp()) ) {s = 22;}

                         
                        input.seek(index6_224);
                        if ( s>=0 ) return s;
                        break;
                    case 128 : 
                        int LA6_225 = input.LA(1);

                         
                        int index6_225 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( (synpred8_ObjCpp()) ) {s = 22;}

                         
                        input.seek(index6_225);
                        if ( s>=0 ) return s;
                        break;
                    case 129 : 
                        int LA6_228 = input.LA(1);

                         
                        int index6_228 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( (synpred8_ObjCpp()) ) {s = 22;}

                         
                        input.seek(index6_228);
                        if ( s>=0 ) return s;
                        break;
                    case 130 : 
                        int LA6_229 = input.LA(1);

                         
                        int index6_229 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( (synpred8_ObjCpp()) ) {s = 22;}

                         
                        input.seek(index6_229);
                        if ( s>=0 ) return s;
                        break;
                    case 131 : 
                        int LA6_230 = input.LA(1);

                         
                        int index6_230 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( (synpred8_ObjCpp()) ) {s = 22;}

                         
                        input.seek(index6_230);
                        if ( s>=0 ) return s;
                        break;
                    case 132 : 
                        int LA6_231 = input.LA(1);

                         
                        int index6_231 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( (synpred8_ObjCpp()) ) {s = 22;}

                         
                        input.seek(index6_231);
                        if ( s>=0 ) return s;
                        break;
                    case 133 : 
                        int LA6_232 = input.LA(1);

                         
                        int index6_232 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( (synpred8_ObjCpp()) ) {s = 22;}

                         
                        input.seek(index6_232);
                        if ( s>=0 ) return s;
                        break;
                    case 134 : 
                        int LA6_233 = input.LA(1);

                         
                        int index6_233 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( (synpred8_ObjCpp()) ) {s = 22;}

                         
                        input.seek(index6_233);
                        if ( s>=0 ) return s;
                        break;
                    case 135 : 
                        int LA6_235 = input.LA(1);

                         
                        int index6_235 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( (synpred8_ObjCpp()) ) {s = 22;}

                         
                        input.seek(index6_235);
                        if ( s>=0 ) return s;
                        break;
                    case 136 : 
                        int LA6_236 = input.LA(1);

                         
                        int index6_236 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( (synpred8_ObjCpp()) ) {s = 22;}

                         
                        input.seek(index6_236);
                        if ( s>=0 ) return s;
                        break;
                    case 137 : 
                        int LA6_237 = input.LA(1);

                         
                        int index6_237 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( (synpred8_ObjCpp()) ) {s = 22;}

                         
                        input.seek(index6_237);
                        if ( s>=0 ) return s;
                        break;
                    case 138 : 
                        int LA6_238 = input.LA(1);

                         
                        int index6_238 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( (synpred8_ObjCpp()) ) {s = 22;}

                         
                        input.seek(index6_238);
                        if ( s>=0 ) return s;
                        break;
                    case 139 : 
                        int LA6_239 = input.LA(1);

                         
                        int index6_239 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( (synpred8_ObjCpp()) ) {s = 22;}

                         
                        input.seek(index6_239);
                        if ( s>=0 ) return s;
                        break;
                    case 140 : 
                        int LA6_241 = input.LA(1);

                         
                        int index6_241 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( (synpred8_ObjCpp()) ) {s = 22;}

                         
                        input.seek(index6_241);
                        if ( s>=0 ) return s;
                        break;
                    case 141 : 
                        int LA6_242 = input.LA(1);

                         
                        int index6_242 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( (synpred8_ObjCpp()) ) {s = 22;}

                         
                        input.seek(index6_242);
                        if ( s>=0 ) return s;
                        break;
                    case 142 : 
                        int LA6_247 = input.LA(1);

                         
                        int index6_247 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( (synpred8_ObjCpp()) ) {s = 22;}

                         
                        input.seek(index6_247);
                        if ( s>=0 ) return s;
                        break;
                    case 143 : 
                        int LA6_249 = input.LA(1);

                         
                        int index6_249 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( (synpred8_ObjCpp()) ) {s = 22;}

                         
                        input.seek(index6_249);
                        if ( s>=0 ) return s;
                        break;
                    case 144 : 
                        int LA6_250 = input.LA(1);

                         
                        int index6_250 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( (synpred8_ObjCpp()) ) {s = 22;}

                         
                        input.seek(index6_250);
                        if ( s>=0 ) return s;
                        break;
                    case 145 : 
                        int LA6_251 = input.LA(1);

                         
                        int index6_251 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( (synpred8_ObjCpp()) ) {s = 22;}

                         
                        input.seek(index6_251);
                        if ( s>=0 ) return s;
                        break;
                    case 146 : 
                        int LA6_252 = input.LA(1);

                         
                        int index6_252 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( (synpred8_ObjCpp()) ) {s = 22;}

                         
                        input.seek(index6_252);
                        if ( s>=0 ) return s;
                        break;
                    case 147 : 
                        int LA6_254 = input.LA(1);

                         
                        int index6_254 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( (synpred8_ObjCpp()) ) {s = 22;}

                         
                        input.seek(index6_254);
                        if ( s>=0 ) return s;
                        break;
                    case 148 : 
                        int LA6_255 = input.LA(1);

                         
                        int index6_255 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( (synpred8_ObjCpp()) ) {s = 22;}

                         
                        input.seek(index6_255);
                        if ( s>=0 ) return s;
                        break;
                    case 149 : 
                        int LA6_256 = input.LA(1);

                         
                        int index6_256 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( (synpred8_ObjCpp()) ) {s = 22;}

                         
                        input.seek(index6_256);
                        if ( s>=0 ) return s;
                        break;
                    case 150 : 
                        int LA6_257 = input.LA(1);

                         
                        int index6_257 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( (synpred8_ObjCpp()) ) {s = 22;}

                         
                        input.seek(index6_257);
                        if ( s>=0 ) return s;
                        break;
                    case 151 : 
                        int LA6_258 = input.LA(1);

                         
                        int index6_258 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( (synpred8_ObjCpp()) ) {s = 22;}

                         
                        input.seek(index6_258);
                        if ( s>=0 ) return s;
                        break;
                    case 152 : 
                        int LA6_260 = input.LA(1);

                         
                        int index6_260 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( (synpred8_ObjCpp()) ) {s = 22;}

                         
                        input.seek(index6_260);
                        if ( s>=0 ) return s;
                        break;
                    case 153 : 
                        int LA6_261 = input.LA(1);

                         
                        int index6_261 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( (synpred8_ObjCpp()) ) {s = 22;}

                         
                        input.seek(index6_261);
                        if ( s>=0 ) return s;
                        break;
                    case 154 : 
                        int LA6_262 = input.LA(1);

                         
                        int index6_262 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( (synpred8_ObjCpp()) ) {s = 22;}

                         
                        input.seek(index6_262);
                        if ( s>=0 ) return s;
                        break;
                    case 155 : 
                        int LA6_263 = input.LA(1);

                         
                        int index6_263 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_ObjCpp()) ) {s = 33;}

                        else if ( (synpred8_ObjCpp()) ) {s = 22;}

                         
                        input.seek(index6_263);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 6, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA5_eotS =
        "\14\uffff";
    static final String DFA5_eofS =
        "\14\uffff";
    static final String DFA5_minS =
        "\1\6\13\uffff";
    static final String DFA5_maxS =
        "\1\112\13\uffff";
    static final String DFA5_acceptS =
        "\1\uffff\1\2\1\1\11\uffff";
    static final String DFA5_specialS =
        "\14\uffff}>";
    static final String[] DFA5_transitionS = {
            "\1\2\21\uffff\1\1\2\2\3\uffff\3\2\14\uffff\3\2\13\uffff\20\2",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA5_eot = DFA.unpackEncodedString(DFA5_eotS);
    static final short[] DFA5_eof = DFA.unpackEncodedString(DFA5_eofS);
    static final char[] DFA5_min = DFA.unpackEncodedStringToUnsignedChars(DFA5_minS);
    static final char[] DFA5_max = DFA.unpackEncodedStringToUnsignedChars(DFA5_maxS);
    static final short[] DFA5_accept = DFA.unpackEncodedString(DFA5_acceptS);
    static final short[] DFA5_special = DFA.unpackEncodedString(DFA5_specialS);
    static final short[][] DFA5_transition;

    static {
        int numStates = DFA5_transitionS.length;
        DFA5_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA5_transition[i] = DFA.unpackEncodedString(DFA5_transitionS[i]);
        }
    }

    class DFA5 extends DFA {

        public DFA5(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 5;
            this.eot = DFA5_eot;
            this.eof = DFA5_eof;
            this.min = DFA5_min;
            this.max = DFA5_max;
            this.accept = DFA5_accept;
            this.special = DFA5_special;
            this.transition = DFA5_transition;
        }
        public String getDescription() {
            return "()* loopback of 296:6: (subD= declaration )*";
        }
    }
    static final String DFA9_eotS =
        "\34\uffff";
    static final String DFA9_eofS =
        "\1\2\33\uffff";
    static final String DFA9_minS =
        "\1\6\1\0\32\uffff";
    static final String DFA9_maxS =
        "\1\72\1\0\32\uffff";
    static final String DFA9_acceptS =
        "\2\uffff\1\2\30\uffff\1\1";
    static final String DFA9_specialS =
        "\1\uffff\1\0\32\uffff}>";
    static final String[] DFA9_transitionS = {
            "\1\1\20\uffff\1\2\3\uffff\3\2\4\uffff\2\2\1\uffff\1\2\15\uffff"+
            "\3\2\4\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA9_eot = DFA.unpackEncodedString(DFA9_eotS);
    static final short[] DFA9_eof = DFA.unpackEncodedString(DFA9_eofS);
    static final char[] DFA9_min = DFA.unpackEncodedStringToUnsignedChars(DFA9_minS);
    static final char[] DFA9_max = DFA.unpackEncodedStringToUnsignedChars(DFA9_maxS);
    static final short[] DFA9_accept = DFA.unpackEncodedString(DFA9_acceptS);
    static final short[] DFA9_special = DFA.unpackEncodedString(DFA9_specialS);
    static final short[][] DFA9_transition;

    static {
        int numStates = DFA9_transitionS.length;
        DFA9_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA9_transition[i] = DFA.unpackEncodedString(DFA9_transitionS[i]);
        }
    }

    class DFA9 extends DFA {

        public DFA9(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 9;
            this.eot = DFA9_eot;
            this.eof = DFA9_eof;
            this.min = DFA9_min;
            this.max = DFA9_max;
            this.accept = DFA9_accept;
            this.special = DFA9_special;
            this.transition = DFA9_transition;
        }
        public String getDescription() {
            return "356:3: (n1= IDENTIFIER )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA9_1 = input.LA(1);

                         
                        int index9_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_ObjCpp()) ) {s = 27;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index9_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 9, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA13_eotS =
        "\16\uffff";
    static final String DFA13_eofS =
        "\1\2\15\uffff";
    static final String DFA13_minS =
        "\1\6\15\uffff";
    static final String DFA13_maxS =
        "\1\72\15\uffff";
    static final String DFA13_acceptS =
        "\1\uffff\1\1\1\2\13\uffff";
    static final String DFA13_specialS =
        "\16\uffff}>";
    static final String[] DFA13_transitionS = {
            "\1\2\20\uffff\1\1\3\uffff\3\2\4\uffff\2\2\1\uffff\1\2\15\uffff"+
            "\3\2\4\uffff\1\2",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA13_eot = DFA.unpackEncodedString(DFA13_eotS);
    static final short[] DFA13_eof = DFA.unpackEncodedString(DFA13_eofS);
    static final char[] DFA13_min = DFA.unpackEncodedStringToUnsignedChars(DFA13_minS);
    static final char[] DFA13_max = DFA.unpackEncodedStringToUnsignedChars(DFA13_maxS);
    static final short[] DFA13_accept = DFA.unpackEncodedString(DFA13_acceptS);
    static final short[] DFA13_special = DFA.unpackEncodedString(DFA13_specialS);
    static final short[][] DFA13_transition;

    static {
        int numStates = DFA13_transitionS.length;
        DFA13_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA13_transition[i] = DFA.unpackEncodedString(DFA13_transitionS[i]);
        }
    }

    class DFA13 extends DFA {

        public DFA13(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 13;
            this.eot = DFA13_eot;
            this.eof = DFA13_eof;
            this.min = DFA13_min;
            this.max = DFA13_max;
            this.accept = DFA13_accept;
            this.special = DFA13_special;
            this.transition = DFA13_transition;
        }
        public String getDescription() {
            return "361:3: ( '{' (i1= enumItem ( ',' (ix= enumItem )? )* )? '}' )?";
        }
    }
    static final String DFA15_eotS =
        "\17\uffff";
    static final String DFA15_eofS =
        "\17\uffff";
    static final String DFA15_minS =
        "\1\6\16\uffff";
    static final String DFA15_maxS =
        "\1\112\16\uffff";
    static final String DFA15_acceptS =
        "\1\uffff\1\1\14\uffff\1\2";
    static final String DFA15_specialS =
        "\17\uffff}>";
    static final String[] DFA15_transitionS = {
            "\1\1\20\uffff\1\1\6\uffff\1\1\2\uffff\1\1\1\16\1\uffff\1\1\4"+
            "\uffff\3\1\1\uffff\3\1\13\uffff\20\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA15_eot = DFA.unpackEncodedString(DFA15_eotS);
    static final short[] DFA15_eof = DFA.unpackEncodedString(DFA15_eofS);
    static final char[] DFA15_min = DFA.unpackEncodedStringToUnsignedChars(DFA15_minS);
    static final char[] DFA15_max = DFA.unpackEncodedStringToUnsignedChars(DFA15_maxS);
    static final short[] DFA15_accept = DFA.unpackEncodedString(DFA15_acceptS);
    static final short[] DFA15_special = DFA.unpackEncodedString(DFA15_specialS);
    static final short[][] DFA15_transition;

    static {
        int numStates = DFA15_transitionS.length;
        DFA15_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA15_transition[i] = DFA.unpackEncodedString(DFA15_transitionS[i]);
        }
    }

    class DFA15 extends DFA {

        public DFA15(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 15;
            this.eot = DFA15_eot;
            this.eof = DFA15_eof;
            this.min = DFA15_min;
            this.max = DFA15_max;
            this.accept = DFA15_accept;
            this.special = DFA15_special;
            this.transition = DFA15_transition;
        }
        public String getDescription() {
            return "399:3: ( ( ':' parentClass= IDENTIFIER )? | '(' categoryName= IDENTIFIER ')' )";
        }
    }
    static final String DFA14_eotS =
        "\16\uffff";
    static final String DFA14_eofS =
        "\16\uffff";
    static final String DFA14_minS =
        "\1\6\15\uffff";
    static final String DFA14_maxS =
        "\1\112\15\uffff";
    static final String DFA14_acceptS =
        "\1\uffff\1\1\1\2\13\uffff";
    static final String DFA14_specialS =
        "\16\uffff}>";
    static final String[] DFA14_transitionS = {
            "\1\2\20\uffff\1\2\6\uffff\1\2\2\uffff\1\1\2\uffff\1\2\4\uffff"+
            "\3\2\1\uffff\3\2\13\uffff\20\2",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA14_eot = DFA.unpackEncodedString(DFA14_eotS);
    static final short[] DFA14_eof = DFA.unpackEncodedString(DFA14_eofS);
    static final char[] DFA14_min = DFA.unpackEncodedStringToUnsignedChars(DFA14_minS);
    static final char[] DFA14_max = DFA.unpackEncodedStringToUnsignedChars(DFA14_maxS);
    static final short[] DFA14_accept = DFA.unpackEncodedString(DFA14_acceptS);
    static final short[] DFA14_special = DFA.unpackEncodedString(DFA14_specialS);
    static final short[][] DFA14_transition;

    static {
        int numStates = DFA14_transitionS.length;
        DFA14_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA14_transition[i] = DFA.unpackEncodedString(DFA14_transitionS[i]);
        }
    }

    class DFA14 extends DFA {

        public DFA14(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 14;
            this.eot = DFA14_eot;
            this.eof = DFA14_eof;
            this.min = DFA14_min;
            this.max = DFA14_max;
            this.accept = DFA14_accept;
            this.special = DFA14_special;
            this.transition = DFA14_transition;
        }
        public String getDescription() {
            return "400:4: ( ':' parentClass= IDENTIFIER )?";
        }
    }
    static final String DFA18_eotS =
        "\15\uffff";
    static final String DFA18_eofS =
        "\15\uffff";
    static final String DFA18_minS =
        "\1\6\14\uffff";
    static final String DFA18_maxS =
        "\1\112\14\uffff";
    static final String DFA18_acceptS =
        "\1\uffff\1\1\1\2\12\uffff";
    static final String DFA18_specialS =
        "\15\uffff}>";
    static final String[] DFA18_transitionS = {
            "\1\2\20\uffff\1\2\6\uffff\1\2\5\uffff\1\1\4\uffff\3\2\1\uffff"+
            "\3\2\13\uffff\20\2",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA18_eot = DFA.unpackEncodedString(DFA18_eotS);
    static final short[] DFA18_eof = DFA.unpackEncodedString(DFA18_eofS);
    static final char[] DFA18_min = DFA.unpackEncodedStringToUnsignedChars(DFA18_minS);
    static final char[] DFA18_max = DFA.unpackEncodedStringToUnsignedChars(DFA18_maxS);
    static final short[] DFA18_accept = DFA.unpackEncodedString(DFA18_acceptS);
    static final short[] DFA18_special = DFA.unpackEncodedString(DFA18_specialS);
    static final short[][] DFA18_transition;

    static {
        int numStates = DFA18_transitionS.length;
        DFA18_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA18_transition[i] = DFA.unpackEncodedString(DFA18_transitionS[i]);
        }
    }

    class DFA18 extends DFA {

        public DFA18(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 18;
            this.eot = DFA18_eot;
            this.eof = DFA18_eof;
            this.min = DFA18_min;
            this.max = DFA18_max;
            this.accept = DFA18_accept;
            this.special = DFA18_special;
            this.transition = DFA18_transition;
        }
        public String getDescription() {
            return "410:3: ( '<' (p1= IDENTIFIER ( ',' px= IDENTIFIER )* )? '>' )?";
        }
    }
    static final String DFA21_eotS =
        "\14\uffff";
    static final String DFA21_eofS =
        "\14\uffff";
    static final String DFA21_minS =
        "\1\6\13\uffff";
    static final String DFA21_maxS =
        "\1\112\13\uffff";
    static final String DFA21_acceptS =
        "\1\uffff\1\1\1\2\11\uffff";
    static final String DFA21_specialS =
        "\14\uffff}>";
    static final String[] DFA21_transitionS = {
            "\1\2\20\uffff\1\1\6\uffff\1\2\12\uffff\3\2\1\uffff\3\2\13\uffff"+
            "\20\2",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA21_eot = DFA.unpackEncodedString(DFA21_eotS);
    static final short[] DFA21_eof = DFA.unpackEncodedString(DFA21_eofS);
    static final char[] DFA21_min = DFA.unpackEncodedStringToUnsignedChars(DFA21_minS);
    static final char[] DFA21_max = DFA.unpackEncodedStringToUnsignedChars(DFA21_maxS);
    static final short[] DFA21_accept = DFA.unpackEncodedString(DFA21_acceptS);
    static final short[] DFA21_special = DFA.unpackEncodedString(DFA21_specialS);
    static final short[][] DFA21_transition;

    static {
        int numStates = DFA21_transitionS.length;
        DFA21_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA21_transition[i] = DFA.unpackEncodedString(DFA21_transitionS[i]);
        }
    }

    class DFA21 extends DFA {

        public DFA21(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 21;
            this.eot = DFA21_eot;
            this.eof = DFA21_eof;
            this.min = DFA21_min;
            this.max = DFA21_max;
            this.accept = DFA21_accept;
            this.special = DFA21_special;
            this.transition = DFA21_transition;
        }
        public String getDescription() {
            return "419:3: ( '{' ( '@public' | '@private' | '@protected' | ( (fv= varDecl | functionPointerVarDecl ) ) )* '}' )?";
        }
    }
    static final String DFA20_eotS =
        "\13\uffff";
    static final String DFA20_eofS =
        "\13\uffff";
    static final String DFA20_minS =
        "\1\6\12\uffff";
    static final String DFA20_maxS =
        "\1\112\12\uffff";
    static final String DFA20_acceptS =
        "\1\uffff\1\5\1\1\1\2\1\3\1\4\5\uffff";
    static final String DFA20_specialS =
        "\13\uffff}>";
    static final String[] DFA20_transitionS = {
            "\1\5\21\uffff\1\1\5\uffff\1\5\7\uffff\1\2\1\3\1\4\4\uffff\3"+
            "\5\14\uffff\17\5",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA20_eot = DFA.unpackEncodedString(DFA20_eotS);
    static final short[] DFA20_eof = DFA.unpackEncodedString(DFA20_eofS);
    static final char[] DFA20_min = DFA.unpackEncodedStringToUnsignedChars(DFA20_minS);
    static final char[] DFA20_max = DFA.unpackEncodedStringToUnsignedChars(DFA20_maxS);
    static final short[] DFA20_accept = DFA.unpackEncodedString(DFA20_acceptS);
    static final short[] DFA20_special = DFA.unpackEncodedString(DFA20_specialS);
    static final short[][] DFA20_transition;

    static {
        int numStates = DFA20_transitionS.length;
        DFA20_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA20_transition[i] = DFA.unpackEncodedString(DFA20_transitionS[i]);
        }
    }

    class DFA20 extends DFA {

        public DFA20(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 20;
            this.eot = DFA20_eot;
            this.eof = DFA20_eof;
            this.min = DFA20_min;
            this.max = DFA20_max;
            this.accept = DFA20_accept;
            this.special = DFA20_special;
            this.transition = DFA20_transition;
        }
        public String getDescription() {
            return "()* loopback of 421:4: ( '@public' | '@private' | '@protected' | ( (fv= varDecl | functionPointerVarDecl ) ) )*";
        }
    }
    static final String DFA19_eotS =
        "\u0112\uffff";
    static final String DFA19_eofS =
        "\u0112\uffff";
    static final String DFA19_minS =
        "\4\6\1\100\2\6\1\4\3\6\1\100\4\6\1\66\1\uffff\1\6\1\uffff\6\6\1"+
        "\uffff\1\0\2\uffff\7\6\1\66\1\6\2\uffff\3\6\1\66\1\6\2\uffff\20"+
        "\0\1\uffff\11\0\1\uffff\12\0\2\uffff\2\0\1\uffff\10\0\1\uffff\2"+
        "\0\1\uffff\5\0\2\uffff\4\0\1\uffff\1\0\1\uffff\5\0\2\uffff\16\0"+
        "\2\uffff\22\0\1\uffff\2\0\3\uffff\4\0\2\uffff\1\0\2\uffff\2\0\2"+
        "\uffff\1\0\14\uffff\7\0\2\uffff\5\0\2\uffff\5\0\1\uffff\1\0\1\uffff"+
        "\5\0\2\uffff\1\0\7\uffff\4\0\1\uffff\1\0\1\uffff\5\0\2\uffff\3\0"+
        "\2\uffff\1\0\7\uffff\4\0\1\uffff\1\0\1\uffff\5\0\2\uffff\3\0\2\uffff";
    static final String DFA19_maxS =
        "\2\112\1\27\1\72\2\112\1\72\1\150\1\27\1\72\3\112\3\72\1\66\1\uffff"+
        "\1\112\1\uffff\1\72\1\112\1\72\1\30\2\72\1\uffff\1\0\2\uffff\1\112"+
        "\1\72\1\112\4\72\1\66\1\72\2\uffff\3\72\1\66\1\72\2\uffff\20\0\1"+
        "\uffff\11\0\1\uffff\12\0\2\uffff\2\0\1\uffff\10\0\1\uffff\2\0\1"+
        "\uffff\5\0\2\uffff\4\0\1\uffff\1\0\1\uffff\5\0\2\uffff\16\0\2\uffff"+
        "\22\0\1\uffff\2\0\3\uffff\4\0\2\uffff\1\0\2\uffff\2\0\2\uffff\1"+
        "\0\14\uffff\7\0\2\uffff\5\0\2\uffff\5\0\1\uffff\1\0\1\uffff\5\0"+
        "\2\uffff\1\0\7\uffff\4\0\1\uffff\1\0\1\uffff\5\0\2\uffff\3\0\2\uffff"+
        "\1\0\7\uffff\4\0\1\uffff\1\0\1\uffff\5\0\2\uffff\3\0\2\uffff";
    static final String DFA19_acceptS =
        "\21\uffff\1\1\1\uffff\1\2\u00fe\uffff";
    static final String DFA19_specialS =
        "\33\uffff\1\0\24\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12"+
        "\1\13\1\14\1\15\1\16\1\17\1\20\1\uffff\1\21\1\22\1\23\1\24\1\25"+
        "\1\26\1\27\1\30\1\31\1\uffff\1\32\1\33\1\34\1\35\1\36\1\37\1\40"+
        "\1\41\1\42\1\43\2\uffff\1\44\1\45\1\uffff\1\46\1\47\1\50\1\51\1"+
        "\52\1\53\1\54\1\55\1\uffff\1\56\1\57\1\uffff\1\60\1\61\1\62\1\63"+
        "\1\64\2\uffff\1\65\1\66\1\67\1\70\1\uffff\1\71\1\uffff\1\72\1\73"+
        "\1\74\1\75\1\76\2\uffff\1\77\1\100\1\101\1\102\1\103\1\104\1\105"+
        "\1\106\1\107\1\110\1\111\1\112\1\113\1\114\2\uffff\1\115\1\116\1"+
        "\117\1\120\1\121\1\122\1\123\1\124\1\125\1\126\1\127\1\130\1\131"+
        "\1\132\1\133\1\134\1\135\1\136\1\uffff\1\137\1\140\3\uffff\1\141"+
        "\1\142\1\143\1\144\2\uffff\1\145\2\uffff\1\146\1\147\2\uffff\1\150"+
        "\14\uffff\1\151\1\152\1\153\1\154\1\155\1\156\1\157\2\uffff\1\160"+
        "\1\161\1\162\1\163\1\164\2\uffff\1\165\1\166\1\167\1\170\1\171\1"+
        "\uffff\1\172\1\uffff\1\173\1\174\1\175\1\176\1\177\2\uffff\1\u0080"+
        "\7\uffff\1\u0081\1\u0082\1\u0083\1\u0084\1\uffff\1\u0085\1\uffff"+
        "\1\u0086\1\u0087\1\u0088\1\u0089\1\u008a\2\uffff\1\u008b\1\u008c"+
        "\1\u008d\2\uffff\1\u008e\7\uffff\1\u008f\1\u0090\1\u0091\1\u0092"+
        "\1\uffff\1\u0093\1\uffff\1\u0094\1\u0095\1\u0096\1\u0097\1\u0098"+
        "\2\uffff\1\u0099\1\u009a\1\u009b\2\uffff}>";
    static final String[] DFA19_transitionS = {
            "\1\1\27\uffff\1\3\16\uffff\3\2\14\uffff\4\4\2\5\11\6",
            "\1\12\25\uffff\1\23\1\uffff\1\11\3\uffff\1\7\1\uffff\1\22\10"+
            "\uffff\3\10\3\uffff\1\16\1\17\1\20\4\uffff\1\21\1\uffff\4\13"+
            "\2\14\11\15",
            "\1\24\20\uffff\1\25",
            "\1\26\20\uffff\1\27\4\uffff\1\33\5\uffff\1\21\20\uffff\1\30"+
            "\1\31\1\23\4\uffff\1\21",
            "\2\36\11\37",
            "\1\42\25\uffff\1\23\5\uffff\1\46\20\uffff\1\43\1\44\1\45\4"+
            "\uffff\1\21\5\uffff\2\40\11\41",
            "\1\51\25\uffff\1\23\5\uffff\1\55\20\uffff\1\52\1\53\1\54\4"+
            "\uffff\1\21",
            "\1\63\1\70\1\62\1\64\1\65\1\66\1\67\24\uffff\1\73\2\uffff\1"+
            "\61\10\uffff\1\77\7\uffff\1\75\1\101\1\71\1\uffff\1\60\2\uffff"+
            "\1\21\34\uffff\1\72\1\74\13\uffff\1\76\4\77",
            "\1\102\20\uffff\1\103",
            "\1\104\20\uffff\1\105\4\uffff\1\113\5\uffff\1\111\20\uffff"+
            "\1\106\1\107\1\110\4\uffff\1\21",
            "\1\120\24\uffff\1\21\1\127\1\21\1\117\3\uffff\1\114\1\uffff"+
            "\1\132\10\uffff\3\116\3\uffff\1\115\1\130\1\124\4\uffff\1\21"+
            "\1\uffff\4\121\2\122\11\123",
            "\2\133\11\134",
            "\1\135\25\uffff\1\23\5\uffff\1\141\20\uffff\1\136\1\137\1\140"+
            "\4\uffff\1\21\5\uffff\2\143\11\144",
            "\1\146\25\uffff\1\23\5\uffff\1\152\20\uffff\1\147\1\150\1\151"+
            "\4\uffff\1\21",
            "\1\155\25\uffff\1\23\5\uffff\1\157\20\uffff\1\156\1\160\1\162"+
            "\4\uffff\1\21",
            "\1\165\25\uffff\1\23\5\uffff\1\164\20\uffff\1\166\1\167\1\170"+
            "\4\uffff\1\21",
            "\1\173",
            "",
            "\1\176\27\uffff\1\175\6\uffff\1\u0082\7\uffff\3\174\14\uffff"+
            "\4\177\2\u0080\11\u0081",
            "",
            "\1\u0084\20\uffff\1\u0087\4\uffff\1\u0086\5\uffff\1\u0083\20"+
            "\uffff\1\u0085\1\u0088\1\23\4\uffff\1\21",
            "\1\u008e\21\uffff\1\u0098\1\u0097\1\u0096\3\uffff\1\u0090\2"+
            "\u0094\14\uffff\3\u008f\1\u008b\1\u008c\1\u008d\10\uffff\1\u0095"+
            "\4\u0091\2\u0092\11\u0093",
            "\1\u009b\20\uffff\1\u009a\3\uffff\1\21\1\u009e\1\21\4\uffff"+
            "\1\21\20\uffff\1\u0099\1\u009c\1\u009f\4\uffff\1\21",
            "\1\u00a3\21\uffff\1\u00a4",
            "\1\u00a5\25\uffff\1\23\5\uffff\1\21\20\uffff\1\u00a6\1\u00a9"+
            "\1\23\4\uffff\1\21",
            "\1\u00ac\25\uffff\1\23\5\uffff\1\21\20\uffff\1\u00ad\1\u00b0"+
            "\1\23\4\uffff\1\21",
            "",
            "\1\uffff",
            "",
            "",
            "\1\u00bf\25\uffff\1\23\5\uffff\1\u00c3\20\uffff\1\u00c0\1\u00c1"+
            "\1\u00c2\4\uffff\1\21\5\uffff\2\u00bd\11\u00be",
            "\1\u00c6\25\uffff\1\23\5\uffff\1\u00ca\20\uffff\1\u00c7\1\u00c8"+
            "\1\u00c9\4\uffff\1\21",
            "\1\u00cd\25\uffff\1\23\5\uffff\1\u00d1\20\uffff\1\u00ce\1\u00cf"+
            "\1\u00d0\4\uffff\1\21\5\uffff\13\u00d3",
            "\1\u00d5\25\uffff\1\23\5\uffff\1\u00d9\20\uffff\1\u00d6\1\u00d7"+
            "\1\u00d8\4\uffff\1\21",
            "\1\21\24\uffff\3\21\4\uffff\1\21\20\uffff\1\u00dc\2\21\4\uffff"+
            "\1\21",
            "\1\u00e4\25\uffff\1\23\5\uffff\1\u00e6\20\uffff\1\u00e5\1\u00e7"+
            "\1\u00e9\4\uffff\1\21",
            "\1\u00ec\25\uffff\1\23\5\uffff\1\u00eb\20\uffff\1\u00ed\1\u00ee"+
            "\1\u00ef\4\uffff\1\21",
            "\1\u00f2",
            "\1\u00f3\33\uffff\1\21\20\uffff\1\u00f4\1\21\5\uffff\1\21",
            "",
            "",
            "\1\21\24\uffff\3\21\4\uffff\1\21\20\uffff\1\u00f7\2\21\4\uffff"+
            "\1\21",
            "\1\u00ff\25\uffff\1\23\5\uffff\1\u0101\20\uffff\1\u0100\1\u0102"+
            "\1\u0104\4\uffff\1\21",
            "\1\u0107\25\uffff\1\23\5\uffff\1\u0106\20\uffff\1\u0108\1\u0109"+
            "\1\u010a\4\uffff\1\21",
            "\1\u010d",
            "\1\u010e\33\uffff\1\21\20\uffff\1\u010f\1\21\5\uffff\1\21",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };

    static final short[] DFA19_eot = DFA.unpackEncodedString(DFA19_eotS);
    static final short[] DFA19_eof = DFA.unpackEncodedString(DFA19_eofS);
    static final char[] DFA19_min = DFA.unpackEncodedStringToUnsignedChars(DFA19_minS);
    static final char[] DFA19_max = DFA.unpackEncodedStringToUnsignedChars(DFA19_maxS);
    static final short[] DFA19_accept = DFA.unpackEncodedString(DFA19_acceptS);
    static final short[] DFA19_special = DFA.unpackEncodedString(DFA19_specialS);
    static final short[][] DFA19_transition;

    static {
        int numStates = DFA19_transitionS.length;
        DFA19_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA19_transition[i] = DFA.unpackEncodedString(DFA19_transitionS[i]);
        }
    }

    class DFA19 extends DFA {

        public DFA19(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 19;
            this.eot = DFA19_eot;
            this.eof = DFA19_eof;
            this.min = DFA19_min;
            this.max = DFA19_max;
            this.accept = DFA19_accept;
            this.special = DFA19_special;
            this.transition = DFA19_transition;
        }
        public String getDescription() {
            return "426:6: (fv= varDecl | functionPointerVarDecl )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA19_27 = input.LA(1);

                         
                        int index19_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred29_ObjCpp()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index19_27);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA19_48 = input.LA(1);

                         
                        int index19_48 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred29_ObjCpp()&&( "__success".equals(next()) ))) ) {s = 17;}

                        else if ( (( "__success".equals(next()) )) ) {s = 19;}

                         
                        input.seek(index19_48);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA19_49 = input.LA(1);

                         
                        int index19_49 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((((synpred29_ObjCpp()&&( next(Modifier.Kind.VCAnnotation1Arg) ))&&( Modifier.parseModifier(next()) != null ))||(synpred29_ObjCpp()&&( Modifier.parseModifier(next()) == null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.VCAnnotation2Args) ))&&( Modifier.parseModifier(next()) != null )))) ) {s = 17;}

                        else if ( (((( next(Modifier.Kind.VCAnnotation1Arg) )&&( Modifier.parseModifier(next()) != null ))||(( next(Modifier.Kind.VCAnnotation2Args) )&&( Modifier.parseModifier(next()) != null )))) ) {s = 19;}

                         
                        input.seek(index19_49);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA19_50 = input.LA(1);

                         
                        int index19_50 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((((synpred29_ObjCpp()&&( next(Modifier.Kind.VCAnnotation1Arg) ))&&( Modifier.parseModifier(next()) != null ))||(synpred29_ObjCpp()&&( Modifier.parseModifier(next()) == null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.VCAnnotation2Args) ))&&( Modifier.parseModifier(next()) != null )))) ) {s = 17;}

                        else if ( (((( next(Modifier.Kind.VCAnnotation1Arg) )&&( Modifier.parseModifier(next()) != null ))||(( next(Modifier.Kind.VCAnnotation2Args) )&&( Modifier.parseModifier(next()) != null ))||( Modifier.parseModifier(next()) == null ))) ) {s = 19;}

                         
                        input.seek(index19_50);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA19_51 = input.LA(1);

                         
                        int index19_51 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((((synpred29_ObjCpp()&&( next(Modifier.Kind.VCAnnotation1Arg) ))&&( Modifier.parseModifier(next()) != null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.VCAnnotation2Args) ))&&( Modifier.parseModifier(next()) != null )))) ) {s = 17;}

                        else if ( (((( next(Modifier.Kind.VCAnnotation1Arg) )&&( Modifier.parseModifier(next()) != null ))||(( next(Modifier.Kind.VCAnnotation2Args) )&&( Modifier.parseModifier(next()) != null )))) ) {s = 19;}

                         
                        input.seek(index19_51);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA19_52 = input.LA(1);

                         
                        int index19_52 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((((synpred29_ObjCpp()&&( next(Modifier.Kind.VCAnnotation1Arg) ))&&( Modifier.parseModifier(next()) != null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.VCAnnotation2Args) ))&&( Modifier.parseModifier(next()) != null )))) ) {s = 17;}

                        else if ( (((( next(Modifier.Kind.VCAnnotation1Arg) )&&( Modifier.parseModifier(next()) != null ))||(( next(Modifier.Kind.VCAnnotation2Args) )&&( Modifier.parseModifier(next()) != null )))) ) {s = 19;}

                         
                        input.seek(index19_52);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA19_53 = input.LA(1);

                         
                        int index19_53 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((((synpred29_ObjCpp()&&( next(Modifier.Kind.VCAnnotation1Arg) ))&&( Modifier.parseModifier(next()) != null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.VCAnnotation2Args) ))&&( Modifier.parseModifier(next()) != null )))) ) {s = 17;}

                        else if ( (((( next(Modifier.Kind.VCAnnotation1Arg) )&&( Modifier.parseModifier(next()) != null ))||(( next(Modifier.Kind.VCAnnotation2Args) )&&( Modifier.parseModifier(next()) != null )))) ) {s = 19;}

                         
                        input.seek(index19_53);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA19_54 = input.LA(1);

                         
                        int index19_54 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((((synpred29_ObjCpp()&&( next(Modifier.Kind.VCAnnotation1Arg) ))&&( Modifier.parseModifier(next()) != null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.VCAnnotation2Args) ))&&( Modifier.parseModifier(next()) != null )))) ) {s = 17;}

                        else if ( (((( next(Modifier.Kind.VCAnnotation1Arg) )&&( Modifier.parseModifier(next()) != null ))||(( next(Modifier.Kind.VCAnnotation2Args) )&&( Modifier.parseModifier(next()) != null )))) ) {s = 19;}

                         
                        input.seek(index19_54);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA19_55 = input.LA(1);

                         
                        int index19_55 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((((synpred29_ObjCpp()&&( next(Modifier.Kind.VCAnnotation1Arg) ))&&( Modifier.parseModifier(next()) != null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.VCAnnotation2Args) ))&&( Modifier.parseModifier(next()) != null )))) ) {s = 17;}

                        else if ( (((( next(Modifier.Kind.VCAnnotation1Arg) )&&( Modifier.parseModifier(next()) != null ))||(( next(Modifier.Kind.VCAnnotation2Args) )&&( Modifier.parseModifier(next()) != null )))) ) {s = 19;}

                         
                        input.seek(index19_55);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA19_56 = input.LA(1);

                         
                        int index19_56 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((((synpred29_ObjCpp()&&( next(Modifier.Kind.VCAnnotation1Arg) ))&&( Modifier.parseModifier(next()) != null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.VCAnnotation2Args) ))&&( Modifier.parseModifier(next()) != null )))) ) {s = 17;}

                        else if ( (((( next(Modifier.Kind.VCAnnotation1Arg) )&&( Modifier.parseModifier(next()) != null ))||(( next(Modifier.Kind.VCAnnotation2Args) )&&( Modifier.parseModifier(next()) != null )))) ) {s = 19;}

                         
                        input.seek(index19_56);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA19_57 = input.LA(1);

                         
                        int index19_57 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((((synpred29_ObjCpp()&&( next(Modifier.Kind.VCAnnotation1Arg) ))&&( Modifier.parseModifier(next()) != null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.VCAnnotation2Args) ))&&( Modifier.parseModifier(next()) != null )))) ) {s = 17;}

                        else if ( (((( next(Modifier.Kind.VCAnnotation1Arg) )&&( Modifier.parseModifier(next()) != null ))||(( next(Modifier.Kind.VCAnnotation2Args) )&&( Modifier.parseModifier(next()) != null )))) ) {s = 19;}

                         
                        input.seek(index19_57);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA19_58 = input.LA(1);

                         
                        int index19_58 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((((synpred29_ObjCpp()&&( next(Modifier.Kind.VCAnnotation1Arg) ))&&( Modifier.parseModifier(next()) != null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.VCAnnotation2Args) ))&&( Modifier.parseModifier(next()) != null )))) ) {s = 17;}

                        else if ( (((( next(Modifier.Kind.VCAnnotation1Arg) )&&( Modifier.parseModifier(next()) != null ))||(( next(Modifier.Kind.VCAnnotation2Args) )&&( Modifier.parseModifier(next()) != null )))) ) {s = 19;}

                         
                        input.seek(index19_58);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA19_59 = input.LA(1);

                         
                        int index19_59 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((((synpred29_ObjCpp()&&( next(Modifier.Kind.VCAnnotation1Arg) ))&&( Modifier.parseModifier(next()) != null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.VCAnnotation2Args) ))&&( Modifier.parseModifier(next()) != null )))) ) {s = 17;}

                        else if ( (((( next(Modifier.Kind.VCAnnotation1Arg) )&&( Modifier.parseModifier(next()) != null ))||(( next(Modifier.Kind.VCAnnotation2Args) )&&( Modifier.parseModifier(next()) != null )))) ) {s = 19;}

                         
                        input.seek(index19_59);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA19_60 = input.LA(1);

                         
                        int index19_60 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((((synpred29_ObjCpp()&&( next(Modifier.Kind.VCAnnotation1Arg) ))&&( Modifier.parseModifier(next()) != null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.VCAnnotation2Args) ))&&( Modifier.parseModifier(next()) != null )))) ) {s = 17;}

                        else if ( (((( next(Modifier.Kind.VCAnnotation1Arg) )&&( Modifier.parseModifier(next()) != null ))||(( next(Modifier.Kind.VCAnnotation2Args) )&&( Modifier.parseModifier(next()) != null )))) ) {s = 19;}

                         
                        input.seek(index19_60);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA19_61 = input.LA(1);

                         
                        int index19_61 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((((synpred29_ObjCpp()&&( next(Modifier.Kind.VCAnnotation1Arg) ))&&( Modifier.parseModifier(next()) != null ))||(synpred29_ObjCpp()&&( Modifier.parseModifier(next()) == null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.VCAnnotation2Args) ))&&( Modifier.parseModifier(next()) != null )))) ) {s = 17;}

                        else if ( (((( next(Modifier.Kind.VCAnnotation1Arg) )&&( Modifier.parseModifier(next()) != null ))||(( next(Modifier.Kind.VCAnnotation2Args) )&&( Modifier.parseModifier(next()) != null ))||( Modifier.parseModifier(next()) == null ))) ) {s = 19;}

                         
                        input.seek(index19_61);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA19_62 = input.LA(1);

                         
                        int index19_62 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((((synpred29_ObjCpp()&&( next(Modifier.Kind.VCAnnotation1Arg) ))&&( Modifier.parseModifier(next()) != null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.VCAnnotation2Args) ))&&( Modifier.parseModifier(next()) != null )))) ) {s = 17;}

                        else if ( (((( next(Modifier.Kind.VCAnnotation1Arg) )&&( Modifier.parseModifier(next()) != null ))||(( next(Modifier.Kind.VCAnnotation2Args) )&&( Modifier.parseModifier(next()) != null )))) ) {s = 19;}

                         
                        input.seek(index19_62);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA19_63 = input.LA(1);

                         
                        int index19_63 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((((synpred29_ObjCpp()&&( next(Modifier.Kind.VCAnnotation1Arg) ))&&( Modifier.parseModifier(next()) != null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.VCAnnotation2Args) ))&&( Modifier.parseModifier(next()) != null )))) ) {s = 17;}

                        else if ( (((( next(Modifier.Kind.VCAnnotation1Arg) )&&( Modifier.parseModifier(next()) != null ))||(( next(Modifier.Kind.VCAnnotation2Args) )&&( Modifier.parseModifier(next()) != null )))) ) {s = 19;}

                         
                        input.seek(index19_63);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA19_65 = input.LA(1);

                         
                        int index19_65 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((((synpred29_ObjCpp()&&( next(Modifier.Kind.VCAnnotation1Arg) ))&&( Modifier.parseModifier(next()) != null ))||(synpred29_ObjCpp()&&( Modifier.parseModifier(next()) == null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.VCAnnotation2Args) ))&&( Modifier.parseModifier(next()) != null )))) ) {s = 17;}

                        else if ( (((( next(Modifier.Kind.VCAnnotation1Arg) )&&( Modifier.parseModifier(next()) != null ))||(( next(Modifier.Kind.VCAnnotation2Args) )&&( Modifier.parseModifier(next()) != null )))) ) {s = 19;}

                         
                        input.seek(index19_65);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA19_66 = input.LA(1);

                         
                        int index19_66 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((((synpred29_ObjCpp()&&( next(Modifier.Kind.StorageClassSpecifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.ReferenceQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.TypeQualifier) ))&&( Modifier.parseModifier(next()) != null )))) ) {s = 17;}

                        else if ( ((( next(Modifier.Kind.ReferenceQualifier) )&&( Modifier.parseModifier(next()) != null ))) ) {s = 19;}

                         
                        input.seek(index19_66);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA19_67 = input.LA(1);

                         
                        int index19_67 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((((synpred29_ObjCpp()&&( next(Modifier.Kind.StorageClassSpecifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.ReferenceQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.TypeQualifier) ))&&( Modifier.parseModifier(next()) != null )))) ) {s = 17;}

                        else if ( ((( next(Modifier.Kind.ReferenceQualifier) )&&( Modifier.parseModifier(next()) != null ))) ) {s = 19;}

                         
                        input.seek(index19_67);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA19_68 = input.LA(1);

                         
                        int index19_68 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((((synpred29_ObjCpp()&&( next(Modifier.Kind.StorageClassSpecifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.ReferenceQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.TypeQualifier) ))&&( Modifier.parseModifier(next()) != null )))) ) {s = 17;}

                        else if ( ((( next(Modifier.Kind.ReferenceQualifier) )&&( Modifier.parseModifier(next()) != null ))) ) {s = 19;}

                         
                        input.seek(index19_68);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA19_69 = input.LA(1);

                         
                        int index19_69 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((((synpred29_ObjCpp()&&( next(Modifier.Kind.StorageClassSpecifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.ReferenceQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.TypeQualifier) ))&&( Modifier.parseModifier(next()) != null )))) ) {s = 17;}

                        else if ( ((( next(Modifier.Kind.ReferenceQualifier) )&&( Modifier.parseModifier(next()) != null ))) ) {s = 19;}

                         
                        input.seek(index19_69);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA19_70 = input.LA(1);

                         
                        int index19_70 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((((synpred29_ObjCpp()&&( next(Modifier.Kind.StorageClassSpecifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.ReferenceQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.TypeQualifier) ))&&( Modifier.parseModifier(next()) != null )))) ) {s = 17;}

                        else if ( ((( next(Modifier.Kind.ReferenceQualifier) )&&( Modifier.parseModifier(next()) != null ))) ) {s = 19;}

                         
                        input.seek(index19_70);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA19_71 = input.LA(1);

                         
                        int index19_71 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((((synpred29_ObjCpp()&&( next(Modifier.Kind.StorageClassSpecifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.ReferenceQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.TypeQualifier) ))&&( Modifier.parseModifier(next()) != null )))) ) {s = 17;}

                        else if ( ((( next(Modifier.Kind.ReferenceQualifier) )&&( Modifier.parseModifier(next()) != null ))) ) {s = 19;}

                         
                        input.seek(index19_71);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA19_72 = input.LA(1);

                         
                        int index19_72 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (((synpred29_ObjCpp()&&( next(Modifier.Kind.ReferenceQualifier) ))&&( Modifier.parseModifier(next()) != null ))) ) {s = 17;}

                        else if ( ((( next(Modifier.Kind.ReferenceQualifier) )&&( Modifier.parseModifier(next()) != null ))) ) {s = 19;}

                         
                        input.seek(index19_72);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA19_73 = input.LA(1);

                         
                        int index19_73 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((((synpred29_ObjCpp()&&( next(Modifier.Kind.StorageClassSpecifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.ReferenceQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.TypeQualifier) ))&&( Modifier.parseModifier(next()) != null )))) ) {s = 17;}

                        else if ( ((( next(Modifier.Kind.ReferenceQualifier) )&&( Modifier.parseModifier(next()) != null ))) ) {s = 19;}

                         
                        input.seek(index19_73);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA19_75 = input.LA(1);

                         
                        int index19_75 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((((synpred29_ObjCpp()&&( next(Modifier.Kind.StorageClassSpecifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.TypeQualifier) ))&&( Modifier.parseModifier(next()) != null )))) ) {s = 17;}

                        else if ( ((( next(Modifier.Kind.ReferenceQualifier) )&&( Modifier.parseModifier(next()) != null ))) ) {s = 19;}

                         
                        input.seek(index19_75);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA19_76 = input.LA(1);

                         
                        int index19_76 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((((synpred29_ObjCpp()&&( next(Modifier.Kind.StorageClassSpecifier) ))&&( Modifier.parseModifier(next()) != null ))||(synpred29_ObjCpp()&&( Modifier.parseModifier(next()) == null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.ReferenceQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.TypeQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.TypeQualifier, Modifier.Kind.VCAnnotationNoArg) ))&&( Modifier.parseModifier(next()) != null )))) ) {s = 17;}

                        else if ( (((( next(Modifier.Kind.TypeQualifier, Modifier.Kind.VCAnnotationNoArg) )&&( Modifier.parseModifier(next()) != null ))||(( next(Modifier.Kind.ReferenceQualifier) )&&( Modifier.parseModifier(next()) != null )))) ) {s = 19;}

                         
                        input.seek(index19_76);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA19_77 = input.LA(1);

                         
                        int index19_77 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((((synpred29_ObjCpp()&&( next(Modifier.Kind.StorageClassSpecifier) ))&&( Modifier.parseModifier(next()) != null ))||(synpred29_ObjCpp()&&( Modifier.parseModifier(next()) == null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.ReferenceQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.TypeQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.TypeQualifier, Modifier.Kind.VCAnnotationNoArg) ))&&( Modifier.parseModifier(next()) != null )))) ) {s = 17;}

                        else if ( (((( next(Modifier.Kind.TypeQualifier, Modifier.Kind.VCAnnotationNoArg) )&&( Modifier.parseModifier(next()) != null ))||(( next(Modifier.Kind.ReferenceQualifier) )&&( Modifier.parseModifier(next()) != null ))||( Modifier.parseModifier(next()) == null ))) ) {s = 19;}

                         
                        input.seek(index19_77);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA19_78 = input.LA(1);

                         
                        int index19_78 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((((synpred29_ObjCpp()&&( next(Modifier.Kind.StorageClassSpecifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.ReferenceQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.TypeQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.TypeQualifier, Modifier.Kind.VCAnnotationNoArg) ))&&( Modifier.parseModifier(next()) != null )))) ) {s = 17;}

                        else if ( (((( next(Modifier.Kind.TypeQualifier, Modifier.Kind.VCAnnotationNoArg) )&&( Modifier.parseModifier(next()) != null ))||(( next(Modifier.Kind.ReferenceQualifier) )&&( Modifier.parseModifier(next()) != null )))) ) {s = 19;}

                         
                        input.seek(index19_78);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA19_79 = input.LA(1);

                         
                        int index19_79 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((((synpred29_ObjCpp()&&( next(Modifier.Kind.StorageClassSpecifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.ReferenceQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.TypeQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.TypeQualifier, Modifier.Kind.VCAnnotationNoArg) ))&&( Modifier.parseModifier(next()) != null )))) ) {s = 17;}

                        else if ( (((( next(Modifier.Kind.TypeQualifier, Modifier.Kind.VCAnnotationNoArg) )&&( Modifier.parseModifier(next()) != null ))||(( next(Modifier.Kind.ReferenceQualifier) )&&( Modifier.parseModifier(next()) != null )))) ) {s = 19;}

                         
                        input.seek(index19_79);
                        if ( s>=0 ) return s;
                        break;
                    case 31 : 
                        int LA19_80 = input.LA(1);

                         
                        int index19_80 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((((synpred29_ObjCpp()&&( next(Modifier.Kind.StorageClassSpecifier) ))&&( Modifier.parseModifier(next()) != null ))||(synpred29_ObjCpp()&&( Modifier.parseModifier(next()) == null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.ReferenceQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.TypeQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.TypeQualifier, Modifier.Kind.VCAnnotationNoArg) ))&&( Modifier.parseModifier(next()) != null )))) ) {s = 17;}

                        else if ( (((( next(Modifier.Kind.TypeQualifier, Modifier.Kind.VCAnnotationNoArg) )&&( Modifier.parseModifier(next()) != null ))||(( next(Modifier.Kind.ReferenceQualifier) )&&( Modifier.parseModifier(next()) != null )))) ) {s = 19;}

                         
                        input.seek(index19_80);
                        if ( s>=0 ) return s;
                        break;
                    case 32 : 
                        int LA19_81 = input.LA(1);

                         
                        int index19_81 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((((synpred29_ObjCpp()&&( next(Modifier.Kind.StorageClassSpecifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.ReferenceQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.TypeQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.TypeQualifier, Modifier.Kind.VCAnnotationNoArg) ))&&( Modifier.parseModifier(next()) != null )))) ) {s = 17;}

                        else if ( (((( next(Modifier.Kind.TypeQualifier, Modifier.Kind.VCAnnotationNoArg) )&&( Modifier.parseModifier(next()) != null ))||(( next(Modifier.Kind.ReferenceQualifier) )&&( Modifier.parseModifier(next()) != null )))) ) {s = 19;}

                         
                        input.seek(index19_81);
                        if ( s>=0 ) return s;
                        break;
                    case 33 : 
                        int LA19_82 = input.LA(1);

                         
                        int index19_82 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((((synpred29_ObjCpp()&&( next(Modifier.Kind.StorageClassSpecifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.ReferenceQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.TypeQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.TypeQualifier, Modifier.Kind.VCAnnotationNoArg) ))&&( Modifier.parseModifier(next()) != null )))) ) {s = 17;}

                        else if ( (((( next(Modifier.Kind.TypeQualifier, Modifier.Kind.VCAnnotationNoArg) )&&( Modifier.parseModifier(next()) != null ))||(( next(Modifier.Kind.ReferenceQualifier) )&&( Modifier.parseModifier(next()) != null )))) ) {s = 19;}

                         
                        input.seek(index19_82);
                        if ( s>=0 ) return s;
                        break;
                    case 34 : 
                        int LA19_83 = input.LA(1);

                         
                        int index19_83 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((((synpred29_ObjCpp()&&( next(Modifier.Kind.StorageClassSpecifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.ReferenceQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.TypeQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.TypeQualifier, Modifier.Kind.VCAnnotationNoArg) ))&&( Modifier.parseModifier(next()) != null )))) ) {s = 17;}

                        else if ( (((( next(Modifier.Kind.TypeQualifier, Modifier.Kind.VCAnnotationNoArg) )&&( Modifier.parseModifier(next()) != null ))||(( next(Modifier.Kind.ReferenceQualifier) )&&( Modifier.parseModifier(next()) != null )))) ) {s = 19;}

                         
                        input.seek(index19_83);
                        if ( s>=0 ) return s;
                        break;
                    case 35 : 
                        int LA19_84 = input.LA(1);

                         
                        int index19_84 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((((synpred29_ObjCpp()&&( next(Modifier.Kind.StorageClassSpecifier) ))&&( Modifier.parseModifier(next()) != null ))||(synpred29_ObjCpp()&&( Modifier.parseModifier(next()) == null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.ReferenceQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.TypeQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.TypeQualifier, Modifier.Kind.VCAnnotationNoArg) ))&&( Modifier.parseModifier(next()) != null )))) ) {s = 17;}

                        else if ( (((( next(Modifier.Kind.TypeQualifier, Modifier.Kind.VCAnnotationNoArg) )&&( Modifier.parseModifier(next()) != null ))||(( next(Modifier.Kind.ReferenceQualifier) )&&( Modifier.parseModifier(next()) != null )))) ) {s = 19;}

                         
                        input.seek(index19_84);
                        if ( s>=0 ) return s;
                        break;
                    case 36 : 
                        int LA19_87 = input.LA(1);

                         
                        int index19_87 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred29_ObjCpp()&&( Modifier.parseModifier(next()) == null ))) ) {s = 17;}

                        else if ( (((( next(Modifier.Kind.TypeQualifier, Modifier.Kind.VCAnnotationNoArg) )&&( Modifier.parseModifier(next()) != null ))||(( next(Modifier.Kind.ReferenceQualifier) )&&( Modifier.parseModifier(next()) != null )))) ) {s = 19;}

                         
                        input.seek(index19_87);
                        if ( s>=0 ) return s;
                        break;
                    case 37 : 
                        int LA19_88 = input.LA(1);

                         
                        int index19_88 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((((synpred29_ObjCpp()&&( next(Modifier.Kind.StorageClassSpecifier) ))&&( Modifier.parseModifier(next()) != null ))||(synpred29_ObjCpp()&&( Modifier.parseModifier(next()) == null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.ReferenceQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.TypeQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.TypeQualifier, Modifier.Kind.VCAnnotationNoArg) ))&&( Modifier.parseModifier(next()) != null )))) ) {s = 17;}

                        else if ( (((( next(Modifier.Kind.TypeQualifier, Modifier.Kind.VCAnnotationNoArg) )&&( Modifier.parseModifier(next()) != null ))||(( next(Modifier.Kind.ReferenceQualifier) )&&( Modifier.parseModifier(next()) != null )))) ) {s = 19;}

                         
                        input.seek(index19_88);
                        if ( s>=0 ) return s;
                        break;
                    case 38 : 
                        int LA19_90 = input.LA(1);

                         
                        int index19_90 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((((synpred29_ObjCpp()&&( next(Modifier.Kind.StorageClassSpecifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.ReferenceQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.TypeQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.TypeQualifier, Modifier.Kind.VCAnnotationNoArg) ))&&( Modifier.parseModifier(next()) != null )))) ) {s = 17;}

                        else if ( (((( next(Modifier.Kind.TypeQualifier, Modifier.Kind.VCAnnotationNoArg) )&&( Modifier.parseModifier(next()) != null ))||(( next(Modifier.Kind.ReferenceQualifier) )&&( Modifier.parseModifier(next()) != null )))) ) {s = 19;}

                         
                        input.seek(index19_90);
                        if ( s>=0 ) return s;
                        break;
                    case 39 : 
                        int LA19_91 = input.LA(1);

                         
                        int index19_91 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((((synpred29_ObjCpp()&&( next(Modifier.Kind.StorageClassSpecifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.ReferenceQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.TypeQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.TypeQualifier, Modifier.Kind.VCAnnotationNoArg) ))&&( Modifier.parseModifier(next()) != null )))) ) {s = 17;}

                        else if ( (((( next(Modifier.Kind.TypeQualifier, Modifier.Kind.VCAnnotationNoArg) )&&( Modifier.parseModifier(next()) != null ))||(( next(Modifier.Kind.ReferenceQualifier) )&&( Modifier.parseModifier(next()) != null )))) ) {s = 19;}

                         
                        input.seek(index19_91);
                        if ( s>=0 ) return s;
                        break;
                    case 40 : 
                        int LA19_92 = input.LA(1);

                         
                        int index19_92 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((((synpred29_ObjCpp()&&( next(Modifier.Kind.StorageClassSpecifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.ReferenceQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.TypeQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.TypeQualifier, Modifier.Kind.VCAnnotationNoArg) ))&&( Modifier.parseModifier(next()) != null )))) ) {s = 17;}

                        else if ( (((( next(Modifier.Kind.TypeQualifier, Modifier.Kind.VCAnnotationNoArg) )&&( Modifier.parseModifier(next()) != null ))||(( next(Modifier.Kind.ReferenceQualifier) )&&( Modifier.parseModifier(next()) != null )))) ) {s = 19;}

                         
                        input.seek(index19_92);
                        if ( s>=0 ) return s;
                        break;
                    case 41 : 
                        int LA19_93 = input.LA(1);

                         
                        int index19_93 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((((synpred29_ObjCpp()&&( next(Modifier.Kind.StorageClassSpecifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.ReferenceQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.TypeQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.TypeQualifier, Modifier.Kind.VCAnnotationNoArg) ))&&( Modifier.parseModifier(next()) != null )))) ) {s = 17;}

                        else if ( (((( next(Modifier.Kind.TypeQualifier, Modifier.Kind.VCAnnotationNoArg) )&&( Modifier.parseModifier(next()) != null ))||(( next(Modifier.Kind.ReferenceQualifier) )&&( Modifier.parseModifier(next()) != null )))) ) {s = 19;}

                         
                        input.seek(index19_93);
                        if ( s>=0 ) return s;
                        break;
                    case 42 : 
                        int LA19_94 = input.LA(1);

                         
                        int index19_94 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((((synpred29_ObjCpp()&&( next(Modifier.Kind.StorageClassSpecifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.ReferenceQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.TypeQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.TypeQualifier, Modifier.Kind.VCAnnotationNoArg) ))&&( Modifier.parseModifier(next()) != null )))) ) {s = 17;}

                        else if ( (((( next(Modifier.Kind.TypeQualifier, Modifier.Kind.VCAnnotationNoArg) )&&( Modifier.parseModifier(next()) != null ))||(( next(Modifier.Kind.ReferenceQualifier) )&&( Modifier.parseModifier(next()) != null )))) ) {s = 19;}

                         
                        input.seek(index19_94);
                        if ( s>=0 ) return s;
                        break;
                    case 43 : 
                        int LA19_95 = input.LA(1);

                         
                        int index19_95 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((((synpred29_ObjCpp()&&( next(Modifier.Kind.StorageClassSpecifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.ReferenceQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.TypeQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.TypeQualifier, Modifier.Kind.VCAnnotationNoArg) ))&&( Modifier.parseModifier(next()) != null )))) ) {s = 17;}

                        else if ( (((( next(Modifier.Kind.TypeQualifier, Modifier.Kind.VCAnnotationNoArg) )&&( Modifier.parseModifier(next()) != null ))||(( next(Modifier.Kind.ReferenceQualifier) )&&( Modifier.parseModifier(next()) != null )))) ) {s = 19;}

                         
                        input.seek(index19_95);
                        if ( s>=0 ) return s;
                        break;
                    case 44 : 
                        int LA19_96 = input.LA(1);

                         
                        int index19_96 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((((synpred29_ObjCpp()&&( next(Modifier.Kind.StorageClassSpecifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.ReferenceQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.TypeQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.TypeQualifier, Modifier.Kind.VCAnnotationNoArg) ))&&( Modifier.parseModifier(next()) != null )))) ) {s = 17;}

                        else if ( (((( next(Modifier.Kind.TypeQualifier, Modifier.Kind.VCAnnotationNoArg) )&&( Modifier.parseModifier(next()) != null ))||(( next(Modifier.Kind.ReferenceQualifier) )&&( Modifier.parseModifier(next()) != null )))) ) {s = 19;}

                         
                        input.seek(index19_96);
                        if ( s>=0 ) return s;
                        break;
                    case 45 : 
                        int LA19_97 = input.LA(1);

                         
                        int index19_97 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((((synpred29_ObjCpp()&&( next(Modifier.Kind.StorageClassSpecifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.ReferenceQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.TypeQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.TypeQualifier, Modifier.Kind.VCAnnotationNoArg) ))&&( Modifier.parseModifier(next()) != null )))) ) {s = 17;}

                        else if ( (((( next(Modifier.Kind.TypeQualifier, Modifier.Kind.VCAnnotationNoArg) )&&( Modifier.parseModifier(next()) != null ))||(( next(Modifier.Kind.ReferenceQualifier) )&&( Modifier.parseModifier(next()) != null )))) ) {s = 19;}

                         
                        input.seek(index19_97);
                        if ( s>=0 ) return s;
                        break;
                    case 46 : 
                        int LA19_99 = input.LA(1);

                         
                        int index19_99 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((((synpred29_ObjCpp()&&( next(Modifier.Kind.StorageClassSpecifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.ReferenceQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.TypeQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.TypeQualifier, Modifier.Kind.VCAnnotationNoArg) ))&&( Modifier.parseModifier(next()) != null )))) ) {s = 17;}

                        else if ( (((( next(Modifier.Kind.TypeQualifier, Modifier.Kind.VCAnnotationNoArg) )&&( Modifier.parseModifier(next()) != null ))||(( next(Modifier.Kind.ReferenceQualifier) )&&( Modifier.parseModifier(next()) != null )))) ) {s = 19;}

                         
                        input.seek(index19_99);
                        if ( s>=0 ) return s;
                        break;
                    case 47 : 
                        int LA19_100 = input.LA(1);

                         
                        int index19_100 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((((synpred29_ObjCpp()&&( next(Modifier.Kind.StorageClassSpecifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.ReferenceQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.TypeQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.TypeQualifier, Modifier.Kind.VCAnnotationNoArg) ))&&( Modifier.parseModifier(next()) != null )))) ) {s = 17;}

                        else if ( (((( next(Modifier.Kind.TypeQualifier, Modifier.Kind.VCAnnotationNoArg) )&&( Modifier.parseModifier(next()) != null ))||(( next(Modifier.Kind.ReferenceQualifier) )&&( Modifier.parseModifier(next()) != null )))) ) {s = 19;}

                         
                        input.seek(index19_100);
                        if ( s>=0 ) return s;
                        break;
                    case 48 : 
                        int LA19_102 = input.LA(1);

                         
                        int index19_102 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((((synpred29_ObjCpp()&&( next(Modifier.Kind.StorageClassSpecifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.ReferenceQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.TypeQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.TypeQualifier, Modifier.Kind.VCAnnotationNoArg) ))&&( Modifier.parseModifier(next()) != null )))) ) {s = 17;}

                        else if ( (((( next(Modifier.Kind.TypeQualifier, Modifier.Kind.VCAnnotationNoArg) )&&( Modifier.parseModifier(next()) != null ))||(( next(Modifier.Kind.ReferenceQualifier) )&&( Modifier.parseModifier(next()) != null )))) ) {s = 19;}

                         
                        input.seek(index19_102);
                        if ( s>=0 ) return s;
                        break;
                    case 49 : 
                        int LA19_103 = input.LA(1);

                         
                        int index19_103 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((((synpred29_ObjCpp()&&( next(Modifier.Kind.StorageClassSpecifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.ReferenceQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.TypeQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.TypeQualifier, Modifier.Kind.VCAnnotationNoArg) ))&&( Modifier.parseModifier(next()) != null )))) ) {s = 17;}

                        else if ( (((( next(Modifier.Kind.TypeQualifier, Modifier.Kind.VCAnnotationNoArg) )&&( Modifier.parseModifier(next()) != null ))||(( next(Modifier.Kind.ReferenceQualifier) )&&( Modifier.parseModifier(next()) != null )))) ) {s = 19;}

                         
                        input.seek(index19_103);
                        if ( s>=0 ) return s;
                        break;
                    case 50 : 
                        int LA19_104 = input.LA(1);

                         
                        int index19_104 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((((synpred29_ObjCpp()&&( next(Modifier.Kind.StorageClassSpecifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.ReferenceQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.TypeQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.TypeQualifier, Modifier.Kind.VCAnnotationNoArg) ))&&( Modifier.parseModifier(next()) != null )))) ) {s = 17;}

                        else if ( (((( next(Modifier.Kind.TypeQualifier, Modifier.Kind.VCAnnotationNoArg) )&&( Modifier.parseModifier(next()) != null ))||(( next(Modifier.Kind.ReferenceQualifier) )&&( Modifier.parseModifier(next()) != null )))) ) {s = 19;}

                         
                        input.seek(index19_104);
                        if ( s>=0 ) return s;
                        break;
                    case 51 : 
                        int LA19_105 = input.LA(1);

                         
                        int index19_105 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((((synpred29_ObjCpp()&&( next(Modifier.Kind.StorageClassSpecifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.ReferenceQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.TypeQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.TypeQualifier, Modifier.Kind.VCAnnotationNoArg) ))&&( Modifier.parseModifier(next()) != null )))) ) {s = 17;}

                        else if ( (((( next(Modifier.Kind.TypeQualifier, Modifier.Kind.VCAnnotationNoArg) )&&( Modifier.parseModifier(next()) != null ))||(( next(Modifier.Kind.ReferenceQualifier) )&&( Modifier.parseModifier(next()) != null )))) ) {s = 19;}

                         
                        input.seek(index19_105);
                        if ( s>=0 ) return s;
                        break;
                    case 52 : 
                        int LA19_106 = input.LA(1);

                         
                        int index19_106 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((((synpred29_ObjCpp()&&( next(Modifier.Kind.StorageClassSpecifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.ReferenceQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.TypeQualifier) ))&&( Modifier.parseModifier(next()) != null ))||((synpred29_ObjCpp()&&( next(Modifier.Kind.TypeQualifier, Modifier.Kind.VCAnnotationNoArg) ))&&( Modifier.parseModifier(next()) != null )))) ) {s = 17;}

                        else if ( (((( next(Modifier.Kind.TypeQualifier, Modifier.Kind.VCAnnotationNoArg) )&&( Modifier.parseModifier(next()) != null ))||(( next(Modifier.Kind.ReferenceQualifier) )&&( Modifier.parseModifier(next()) != null )))) ) {s = 19;}

                         
                        input.seek(index19_106);
                        if ( s>=0 ) return s;
                        break;
                    case 53 : 
                        int LA19_109 = input.LA(1);

                         
                        int index19_109 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred29_ObjCpp()&&( Modifier.parseModifier(next()) == null ))) ) {s = 17;}

                        else if ( (( Modifier.parseModifier(next()) == null )) ) {s = 19;}

                         
                        input.seek(index19_109);
                        if ( s>=0 ) return s;
                        break;
                    case 54 : 
                        int LA19_110 = input.LA(1);

                         
                        int index19_110 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred29_ObjCpp()&&( Modifier.parseModifier(next()) == null ))) ) {s = 17;}

                        else if ( (( Modifier.parseModifier(next()) == null )) ) {s = 19;}

                         
                        input.seek(index19_110);
                        if ( s>=0 ) return s;
                        break;
                    case 55 : 
                        int LA19_111 = input.LA(1);

                         
                        int index19_111 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred29_ObjCpp()&&( Modifier.parseModifier(next()) == null ))) ) {s = 17;}

                        else if ( (( Modifier.parseModifier(next()) == null )) ) {s = 19;}

                         
                        input.seek(index19_111);
                        if ( s>=0 ) return s;
                        break;
                    case 56 : 
                        int LA19_112 = input.LA(1);

                         
                        int index19_112 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred29_ObjCpp()&&( Modifier.parseModifier(next()) == null ))) ) {s = 17;}

                        else if ( (( Modifier.parseModifier(next()) == null )) ) {s = 19;}

                         
                        input.seek(index19_112);
                        if ( s>=0 ) return s;
                        break;
                    case 57 : 
                        int LA19_114 = input.LA(1);

                         
                        int index19_114 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred29_ObjCpp()&&( Modifier.parseModifier(next()) == null ))) ) {s = 17;}

                        else if ( (( Modifier.parseModifier(next()) == null )) ) {s = 19;}

                         
                        input.seek(index19_114);
                        if ( s>=0 ) return s;
                        break;
                    case 58 : 
                        int LA19_116 = input.LA(1);

                         
                        int index19_116 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred29_ObjCpp()&&( Modifier.parseModifier(next()) == null ))) ) {s = 17;}

                        else if ( (( Modifier.parseModifier(next()) == null )) ) {s = 19;}

                         
                        input.seek(index19_116);
                        if ( s>=0 ) return s;
                        break;
                    case 59 : 
                        int LA19_117 = input.LA(1);

                         
                        int index19_117 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred29_ObjCpp()&&( Modifier.parseModifier(next()) == null ))) ) {s = 17;}

                        else if ( (( Modifier.parseModifier(next()) == null )) ) {s = 19;}

                         
                        input.seek(index19_117);
                        if ( s>=0 ) return s;
                        break;
                    case 60 : 
                        int LA19_118 = input.LA(1);

                         
                        int index19_118 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred29_ObjCpp()&&( Modifier.parseModifier(next()) == null ))) ) {s = 17;}

                        else if ( (( Modifier.parseModifier(next()) == null )) ) {s = 19;}

                         
                        input.seek(index19_118);
                        if ( s>=0 ) return s;
                        break;
                    case 61 : 
                        int LA19_119 = input.LA(1);

                         
                        int index19_119 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred29_ObjCpp()&&( Modifier.parseModifier(next()) == null ))) ) {s = 17;}

                        else if ( (( Modifier.parseModifier(next()) == null )) ) {s = 19;}

                         
                        input.seek(index19_119);
                        if ( s>=0 ) return s;
                        break;
                    case 62 : 
                        int LA19_120 = input.LA(1);

                         
                        int index19_120 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred29_ObjCpp()&&( Modifier.parseModifier(next()) == null ))) ) {s = 17;}

                        else if ( (( Modifier.parseModifier(next()) == null )) ) {s = 19;}

                         
                        input.seek(index19_120);
                        if ( s>=0 ) return s;
                        break;
                    case 63 : 
                        int LA19_123 = input.LA(1);

                         
                        int index19_123 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred29_ObjCpp()&&( Modifier.parseModifier(next()) == null ))) ) {s = 17;}

                        else if ( (( Modifier.parseModifier(next()) == null )) ) {s = 19;}

                         
                        input.seek(index19_123);
                        if ( s>=0 ) return s;
                        break;
                    case 64 : 
                        int LA19_124 = input.LA(1);

                         
                        int index19_124 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred29_ObjCpp()&&( Modifier.parseModifier(next()) == null ))) ) {s = 17;}

                        else if ( (( Modifier.parseModifier(next()) == null )) ) {s = 19;}

                         
                        input.seek(index19_124);
                        if ( s>=0 ) return s;
                        break;
                    case 65 : 
                        int LA19_125 = input.LA(1);

                         
                        int index19_125 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred29_ObjCpp()&&( Modifier.parseModifier(next()) == null ))) ) {s = 17;}

                        else if ( (( Modifier.parseModifier(next()) == null )) ) {s = 19;}

                         
                        input.seek(index19_125);
                        if ( s>=0 ) return s;
                        break;
                    case 66 : 
                        int LA19_126 = input.LA(1);

                         
                        int index19_126 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred29_ObjCpp()&&( Modifier.parseModifier(next()) == null ))) ) {s = 17;}

                        else if ( (( Modifier.parseModifier(next()) == null )) ) {s = 19;}

                         
                        input.seek(index19_126);
                        if ( s>=0 ) return s;
                        break;
                    case 67 : 
                        int LA19_127 = input.LA(1);

                         
                        int index19_127 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred29_ObjCpp()&&( Modifier.parseModifier(next()) == null ))) ) {s = 17;}

                        else if ( (( Modifier.parseModifier(next()) == null )) ) {s = 19;}

                         
                        input.seek(index19_127);
                        if ( s>=0 ) return s;
                        break;
                    case 68 : 
                        int LA19_128 = input.LA(1);

                         
                        int index19_128 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred29_ObjCpp()&&( Modifier.parseModifier(next()) == null ))) ) {s = 17;}

                        else if ( (( Modifier.parseModifier(next()) == null )) ) {s = 19;}

                         
                        input.seek(index19_128);
                        if ( s>=0 ) return s;
                        break;
                    case 69 : 
                        int LA19_129 = input.LA(1);

                         
                        int index19_129 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred29_ObjCpp()&&( Modifier.parseModifier(next()) == null ))) ) {s = 17;}

                        else if ( (( Modifier.parseModifier(next()) == null )) ) {s = 19;}

                         
                        input.seek(index19_129);
                        if ( s>=0 ) return s;
                        break;
                    case 70 : 
                        int LA19_130 = input.LA(1);

                         
                        int index19_130 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred29_ObjCpp()&&( Modifier.parseModifier(next()) == null ))) ) {s = 17;}

                        else if ( (( Modifier.parseModifier(next()) == null )) ) {s = 19;}

                         
                        input.seek(index19_130);
                        if ( s>=0 ) return s;
                        break;
                    case 71 : 
                        int LA19_131 = input.LA(1);

                         
                        int index19_131 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred29_ObjCpp()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index19_131);
                        if ( s>=0 ) return s;
                        break;
                    case 72 : 
                        int LA19_132 = input.LA(1);

                         
                        int index19_132 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred29_ObjCpp()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index19_132);
                        if ( s>=0 ) return s;
                        break;
                    case 73 : 
                        int LA19_133 = input.LA(1);

                         
                        int index19_133 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred29_ObjCpp()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index19_133);
                        if ( s>=0 ) return s;
                        break;
                    case 74 : 
                        int LA19_134 = input.LA(1);

                         
                        int index19_134 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred29_ObjCpp()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index19_134);
                        if ( s>=0 ) return s;
                        break;
                    case 75 : 
                        int LA19_135 = input.LA(1);

                         
                        int index19_135 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred29_ObjCpp()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index19_135);
                        if ( s>=0 ) return s;
                        break;
                    case 76 : 
                        int LA19_136 = input.LA(1);

                         
                        int index19_136 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred29_ObjCpp()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index19_136);
                        if ( s>=0 ) return s;
                        break;
                    case 77 : 
                        int LA19_139 = input.LA(1);

                         
                        int index19_139 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred29_ObjCpp()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index19_139);
                        if ( s>=0 ) return s;
                        break;
                    case 78 : 
                        int LA19_140 = input.LA(1);

                         
                        int index19_140 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred29_ObjCpp()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index19_140);
                        if ( s>=0 ) return s;
                        break;
                    case 79 : 
                        int LA19_141 = input.LA(1);

                         
                        int index19_141 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred29_ObjCpp()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index19_141);
                        if ( s>=0 ) return s;
                        break;
                    case 80 : 
                        int LA19_142 = input.LA(1);

                         
                        int index19_142 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred29_ObjCpp()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index19_142);
                        if ( s>=0 ) return s;
                        break;
                    case 81 : 
                        int LA19_143 = input.LA(1);

                         
                        int index19_143 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred29_ObjCpp()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index19_143);
                        if ( s>=0 ) return s;
                        break;
                    case 82 : 
                        int LA19_144 = input.LA(1);

                         
                        int index19_144 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred29_ObjCpp()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index19_144);
                        if ( s>=0 ) return s;
                        break;
                    case 83 : 
                        int LA19_145 = input.LA(1);

                         
                        int index19_145 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred29_ObjCpp()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index19_145);
                        if ( s>=0 ) return s;
                        break;
                    case 84 : 
                        int LA19_146 = input.LA(1);

                         
                        int index19_146 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred29_ObjCpp()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index19_146);
                        if ( s>=0 ) return s;
                        break;
                    case 85 : 
                        int LA19_147 = input.LA(1);

                         
                        int index19_147 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred29_ObjCpp()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index19_147);
                        if ( s>=0 ) return s;
                        break;
                    case 86 : 
                        int LA19_148 = input.LA(1);

                         
                        int index19_148 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred29_ObjCpp()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index19_148);
                        if ( s>=0 ) return s;
                        break;
                    case 87 : 
                        int LA19_149 = input.LA(1);

                         
                        int index19_149 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred29_ObjCpp()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index19_149);
                        if ( s>=0 ) return s;
                        break;
                    case 88 : 
                        int LA19_150 = input.LA(1);

                         
                        int index19_150 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred29_ObjCpp()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index19_150);
                        if ( s>=0 ) return s;
                        break;
                    case 89 : 
                        int LA19_151 = input.LA(1);

                         
                        int index19_151 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred29_ObjCpp()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index19_151);
                        if ( s>=0 ) return s;
                        break;
                    case 90 : 
                        int LA19_152 = input.LA(1);

                         
                        int index19_152 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred29_ObjCpp()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index19_152);
                        if ( s>=0 ) return s;
                        break;
                    case 91 : 
                        int LA19_153 = input.LA(1);

                         
                        int index19_153 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred29_ObjCpp()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index19_153);
                        if ( s>=0 ) return s;
                        break;
                    case 92 : 
                        int LA19_154 = input.LA(1);

                         
                        int index19_154 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred29_ObjCpp()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index19_154);
                        if ( s>=0 ) return s;
                        break;
                    case 93 : 
                        int LA19_155 = input.LA(1);

                         
                        int index19_155 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred29_ObjCpp()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index19_155);
                        if ( s>=0 ) return s;
                        break;
                    case 94 : 
                        int LA19_156 = input.LA(1);

                         
                        int index19_156 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred29_ObjCpp()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index19_156);
                        if ( s>=0 ) return s;
                        break;
                    case 95 : 
                        int LA19_158 = input.LA(1);

                         
                        int index19_158 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred29_ObjCpp()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index19_158);
                        if ( s>=0 ) return s;
                        break;
                    case 96 : 
                        int LA19_159 = input.LA(1);

                         
                        int index19_159 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred29_ObjCpp()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index19_159);
                        if ( s>=0 ) return s;
                        break;
                    case 97 : 
                        int LA19_163 = input.LA(1);

                         
                        int index19_163 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred29_ObjCpp()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index19_163);
                        if ( s>=0 ) return s;
                        break;
                    case 98 : 
                        int LA19_164 = input.LA(1);

                         
                        int index19_164 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred29_ObjCpp()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index19_164);
                        if ( s>=0 ) return s;
                        break;
                    case 99 : 
                        int LA19_165 = input.LA(1);

                         
                        int index19_165 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred29_ObjCpp()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index19_165);
                        if ( s>=0 ) return s;
                        break;
                    case 100 : 
                        int LA19_166 = input.LA(1);

                         
                        int index19_166 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred29_ObjCpp()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index19_166);
                        if ( s>=0 ) return s;
                        break;
                    case 101 : 
                        int LA19_169 = input.LA(1);

                         
                        int index19_169 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred29_ObjCpp()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index19_169);
                        if ( s>=0 ) return s;
                        break;
                    case 102 : 
                        int LA19_172 = input.LA(1);

                         
                        int index19_172 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred29_ObjCpp()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index19_172);
                        if ( s>=0 ) return s;
                        break;
                    case 103 : 
                        int LA19_173 = input.LA(1);

                         
                        int index19_173 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred29_ObjCpp()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index19_173);
                        if ( s>=0 ) return s;
                        break;
                    case 104 : 
                        int LA19_176 = input.LA(1);

                         
                        int index19_176 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred29_ObjCpp()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index19_176);
                        if ( s>=0 ) return s;
                        break;
                    case 105 : 
                        int LA19_189 = input.LA(1);

                         
                        int index19_189 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred29_ObjCpp()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index19_189);
                        if ( s>=0 ) return s;
                        break;
                    case 106 : 
                        int LA19_190 = input.LA(1);

                         
                        int index19_190 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred29_ObjCpp()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index19_190);
                        if ( s>=0 ) return s;
                        break;
                    case 107 : 
                        int LA19_191 = input.LA(1);

                         
                        int index19_191 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred29_ObjCpp()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index19_191);
                        if ( s>=0 ) return s;
                        break;
                    case 108 : 
                        int LA19_192 = input.LA(1);

                         
                        int index19_192 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred29_ObjCpp()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index19_192);
                        if ( s>=0 ) return s;
                        break;
                    case 109 : 
                        int LA19_193 = input.LA(1);

                         
                        int index19_193 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred29_ObjCpp()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index19_193);
                        if ( s>=0 ) return s;
                        break;
                    case 110 : 
                        int LA19_194 = input.LA(1);

                         
                        int index19_194 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred29_ObjCpp()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index19_194);
                        if ( s>=0 ) return s;
                        break;
                    case 111 : 
                        int LA19_195 = input.LA(1);

                         
                        int index19_195 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred29_ObjCpp()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index19_195);
                        if ( s>=0 ) return s;
                        break;
                    case 112 : 
                        int LA19_198 = input.LA(1);

                         
                        int index19_198 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred29_ObjCpp()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index19_198);
                        if ( s>=0 ) return s;
                        break;
                    case 113 : 
                        int LA19_199 = input.LA(1);

                         
                        int index19_199 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred29_ObjCpp()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index19_199);
                        if ( s>=0 ) return s;
                        break;
                    case 114 : 
                        int LA19_200 = input.LA(1);

                         
                        int index19_200 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred29_ObjCpp()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index19_200);
                        if ( s>=0 ) return s;
                        break;
                    case 115 : 
                        int LA19_201 = input.LA(1);

                         
                        int index19_201 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred29_ObjCpp()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index19_201);
                        if ( s>=0 ) return s;
                        break;
                    case 116 : 
                        int LA19_202 = input.LA(1);

                         
                        int index19_202 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred29_ObjCpp()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index19_202);
                        if ( s>=0 ) return s;
                        break;
                    case 117 : 
                        int LA19_205 = input.LA(1);

                         
                        int index19_205 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred29_ObjCpp()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index19_205);
                        if ( s>=0 ) return s;
                        break;
                    case 118 : 
                        int LA19_206 = input.LA(1);

                         
                        int index19_206 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred29_ObjCpp()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index19_206);
                        if ( s>=0 ) return s;
                        break;
                    case 119 : 
                        int LA19_207 = input.LA(1);

                         
                        int index19_207 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred29_ObjCpp()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index19_207);
                        if ( s>=0 ) return s;
                        break;
                    case 120 : 
                        int LA19_208 = input.LA(1);

                         
                        int index19_208 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred29_ObjCpp()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index19_208);
                        if ( s>=0 ) return s;
                        break;
                    case 121 : 
                        int LA19_209 = input.LA(1);

                         
                        int index19_209 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred29_ObjCpp()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index19_209);
                        if ( s>=0 ) return s;
                        break;
                    case 122 : 
                        int LA19_211 = input.LA(1);

                         
                        int index19_211 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred29_ObjCpp()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index19_211);
                        if ( s>=0 ) return s;
                        break;
                    case 123 : 
                        int LA19_213 = input.LA(1);

                         
                        int index19_213 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred29_ObjCpp()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index19_213);
                        if ( s>=0 ) return s;
                        break;
                    case 124 : 
                        int LA19_214 = input.LA(1);

                         
                        int index19_214 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred29_ObjCpp()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index19_214);
                        if ( s>=0 ) return s;
                        break;
                    case 125 : 
                        int LA19_215 = input.LA(1);

                         
                        int index19_215 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred29_ObjCpp()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index19_215);
                        if ( s>=0 ) return s;
                        break;
                    case 126 : 
                        int LA19_216 = input.LA(1);

                         
                        int index19_216 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred29_ObjCpp()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index19_216);
                        if ( s>=0 ) return s;
                        break;
                    case 127 : 
                        int LA19_217 = input.LA(1);

                         
                        int index19_217 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred29_ObjCpp()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index19_217);
                        if ( s>=0 ) return s;
                        break;
                    case 128 : 
                        int LA19_220 = input.LA(1);

                         
                        int index19_220 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred29_ObjCpp()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index19_220);
                        if ( s>=0 ) return s;
                        break;
                    case 129 : 
                        int LA19_228 = input.LA(1);

                         
                        int index19_228 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred29_ObjCpp()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index19_228);
                        if ( s>=0 ) return s;
                        break;
                    case 130 : 
                        int LA19_229 = input.LA(1);

                         
                        int index19_229 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred29_ObjCpp()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index19_229);
                        if ( s>=0 ) return s;
                        break;
                    case 131 : 
                        int LA19_230 = input.LA(1);

                         
                        int index19_230 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred29_ObjCpp()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index19_230);
                        if ( s>=0 ) return s;
                        break;
                    case 132 : 
                        int LA19_231 = input.LA(1);

                         
                        int index19_231 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred29_ObjCpp()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index19_231);
                        if ( s>=0 ) return s;
                        break;
                    case 133 : 
                        int LA19_233 = input.LA(1);

                         
                        int index19_233 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred29_ObjCpp()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index19_233);
                        if ( s>=0 ) return s;
                        break;
                    case 134 : 
                        int LA19_235 = input.LA(1);

                         
                        int index19_235 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred29_ObjCpp()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index19_235);
                        if ( s>=0 ) return s;
                        break;
                    case 135 : 
                        int LA19_236 = input.LA(1);

                         
                        int index19_236 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred29_ObjCpp()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index19_236);
                        if ( s>=0 ) return s;
                        break;
                    case 136 : 
                        int LA19_237 = input.LA(1);

                         
                        int index19_237 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred29_ObjCpp()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index19_237);
                        if ( s>=0 ) return s;
                        break;
                    case 137 : 
                        int LA19_238 = input.LA(1);

                         
                        int index19_238 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred29_ObjCpp()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index19_238);
                        if ( s>=0 ) return s;
                        break;
                    case 138 : 
                        int LA19_239 = input.LA(1);

                         
                        int index19_239 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred29_ObjCpp()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index19_239);
                        if ( s>=0 ) return s;
                        break;
                    case 139 : 
                        int LA19_242 = input.LA(1);

                         
                        int index19_242 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred29_ObjCpp()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index19_242);
                        if ( s>=0 ) return s;
                        break;
                    case 140 : 
                        int LA19_243 = input.LA(1);

                         
                        int index19_243 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred29_ObjCpp()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index19_243);
                        if ( s>=0 ) return s;
                        break;
                    case 141 : 
                        int LA19_244 = input.LA(1);

                         
                        int index19_244 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred29_ObjCpp()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index19_244);
                        if ( s>=0 ) return s;
                        break;
                    case 142 : 
                        int LA19_247 = input.LA(1);

                         
                        int index19_247 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred29_ObjCpp()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index19_247);
                        if ( s>=0 ) return s;
                        break;
                    case 143 : 
                        int LA19_255 = input.LA(1);

                         
                        int index19_255 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred29_ObjCpp()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index19_255);
                        if ( s>=0 ) return s;
                        break;
                    case 144 : 
                        int LA19_256 = input.LA(1);

                         
                        int index19_256 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred29_ObjCpp()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index19_256);
                        if ( s>=0 ) return s;
                        break;
                    case 145 : 
                        int LA19_257 = input.LA(1);

                         
                        int index19_257 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred29_ObjCpp()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index19_257);
                        if ( s>=0 ) return s;
                        break;
                    case 146 : 
                        int LA19_258 = input.LA(1);

                         
                        int index19_258 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred29_ObjCpp()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index19_258);
                        if ( s>=0 ) return s;
                        break;
                    case 147 : 
                        int LA19_260 = input.LA(1);

                         
                        int index19_260 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred29_ObjCpp()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index19_260);
                        if ( s>=0 ) return s;
                        break;
                    case 148 : 
                        int LA19_262 = input.LA(1);

                         
                        int index19_262 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred29_ObjCpp()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index19_262);
                        if ( s>=0 ) return s;
                        break;
                    case 149 : 
                        int LA19_263 = input.LA(1);

                         
                        int index19_263 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred29_ObjCpp()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index19_263);
                        if ( s>=0 ) return s;
                        break;
                    case 150 : 
                        int LA19_264 = input.LA(1);

                         
                        int index19_264 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred29_ObjCpp()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index19_264);
                        if ( s>=0 ) return s;
                        break;
                    case 151 : 
                        int LA19_265 = input.LA(1);

                         
                        int index19_265 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred29_ObjCpp()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index19_265);
                        if ( s>=0 ) return s;
                        break;
                    case 152 : 
                        int LA19_266 = input.LA(1);

                         
                        int index19_266 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred29_ObjCpp()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index19_266);
                        if ( s>=0 ) return s;
                        break;
                    case 153 : 
                        int LA19_269 = input.LA(1);

                         
                        int index19_269 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred29_ObjCpp()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index19_269);
                        if ( s>=0 ) return s;
                        break;
                    case 154 : 
                        int LA19_270 = input.LA(1);

                         
                        int index19_270 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred29_ObjCpp()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index19_270);
                        if ( s>=0 ) return s;
                        break;
                    case 155 : 
                        int LA19_271 = input.LA(1);

                         
                        int index19_271 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred29_ObjCpp()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index19_271);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 19, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA22_eotS =
        "\13\uffff";
    static final String DFA22_eofS =
        "\13\uffff";
    static final String DFA22_minS =
        "\1\6\12\uffff";
    static final String DFA22_maxS =
        "\1\112\12\uffff";
    static final String DFA22_acceptS =
        "\1\uffff\1\4\1\1\1\uffff\1\2\1\3\5\uffff";
    static final String DFA22_specialS =
        "\13\uffff}>";
    static final String[] DFA22_transitionS = {
            "\1\5\27\uffff\1\5\12\uffff\1\1\2\2\1\uffff\3\5\13\uffff\1\4"+
            "\17\5",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA22_eot = DFA.unpackEncodedString(DFA22_eotS);
    static final short[] DFA22_eof = DFA.unpackEncodedString(DFA22_eofS);
    static final char[] DFA22_min = DFA.unpackEncodedStringToUnsignedChars(DFA22_minS);
    static final char[] DFA22_max = DFA.unpackEncodedStringToUnsignedChars(DFA22_maxS);
    static final short[] DFA22_accept = DFA.unpackEncodedString(DFA22_acceptS);
    static final short[] DFA22_special = DFA.unpackEncodedString(DFA22_specialS);
    static final short[][] DFA22_transition;

    static {
        int numStates = DFA22_transitionS.length;
        DFA22_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA22_transition[i] = DFA.unpackEncodedString(DFA22_transitionS[i]);
        }
    }

    class DFA22 extends DFA {

        public DFA22(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 22;
            this.eot = DFA22_eot;
            this.eof = DFA22_eof;
            this.min = DFA22_min;
            this.max = DFA22_max;
            this.accept = DFA22_accept;
            this.special = DFA22_special;
            this.transition = DFA22_transition;
        }
        public String getDescription() {
            return "()* loopback of 439:3: ( objCMethodDecl | typeDef | vd= varDecl {...}?)*";
        }
    }
    static final String DFA33_eotS =
        "\40\uffff";
    static final String DFA33_eofS =
        "\1\uffff\1\5\1\uffff\1\5\34\uffff";
    static final String DFA33_minS =
        "\2\6\1\uffff\2\6\15\uffff\2\0\7\uffff\1\0\4\uffff";
    static final String DFA33_maxS =
        "\1\27\1\72\1\uffff\2\72\15\uffff\2\0\7\uffff\1\0\4\uffff";
    static final String DFA33_acceptS =
        "\2\uffff\1\2\2\uffff\1\1\32\uffff";
    static final String DFA33_specialS =
        "\22\uffff\1\0\1\1\7\uffff\1\2\4\uffff}>";
    static final String[] DFA33_transitionS = {
            "\1\1\20\uffff\1\2",
            "\1\3\20\uffff\1\2\3\uffff\3\5\4\uffff\1\4\1\5\1\uffff\1\5\15"+
            "\uffff\3\5\4\uffff\1\5",
            "",
            "\1\22\20\uffff\1\2\3\uffff\3\5\4\uffff\1\23\1\5\17\uffff\3"+
            "\5\4\uffff\1\5",
            "\1\33\33\uffff\1\5\1\2\17\uffff\2\5\5\uffff\1\5",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA33_eot = DFA.unpackEncodedString(DFA33_eotS);
    static final short[] DFA33_eof = DFA.unpackEncodedString(DFA33_eofS);
    static final char[] DFA33_min = DFA.unpackEncodedStringToUnsignedChars(DFA33_minS);
    static final char[] DFA33_max = DFA.unpackEncodedStringToUnsignedChars(DFA33_maxS);
    static final short[] DFA33_accept = DFA.unpackEncodedString(DFA33_acceptS);
    static final short[] DFA33_special = DFA.unpackEncodedString(DFA33_specialS);
    static final short[][] DFA33_transition;

    static {
        int numStates = DFA33_transitionS.length;
        DFA33_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA33_transition[i] = DFA.unpackEncodedString(DFA33_transitionS[i]);
        }
    }

    class DFA33 extends DFA {

        public DFA33(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 33;
            this.eot = DFA33_eot;
            this.eof = DFA33_eof;
            this.min = DFA33_min;
            this.max = DFA33_max;
            this.accept = DFA33_accept;
            this.special = DFA33_special;
            this.transition = DFA33_transition;
        }
        public String getDescription() {
            return "530:3: ( (n0= IDENTIFIER ) | ( ( exportationModifiers )? n1= IDENTIFIER )? '{' ( ( 'public' | 'private' | 'protected' ) ':' | declaration )* '}' )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA33_18 = input.LA(1);

                         
                        int index33_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred43_ObjCpp()) ) {s = 5;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index33_18);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA33_19 = input.LA(1);

                         
                        int index33_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred43_ObjCpp()) ) {s = 5;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index33_19);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA33_27 = input.LA(1);

                         
                        int index33_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred43_ObjCpp()) ) {s = 5;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index33_27);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 33, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA32_eotS =
        "\17\uffff";
    static final String DFA32_eofS =
        "\17\uffff";
    static final String DFA32_minS =
        "\1\6\16\uffff";
    static final String DFA32_maxS =
        "\1\112\16\uffff";
    static final String DFA32_acceptS =
        "\1\uffff\1\3\1\1\2\uffff\1\2\11\uffff";
    static final String DFA32_specialS =
        "\17\uffff}>";
    static final String[] DFA32_transitionS = {
            "\1\5\21\uffff\1\1\2\5\3\uffff\3\5\14\uffff\3\5\3\2\10\uffff"+
            "\20\5",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA32_eot = DFA.unpackEncodedString(DFA32_eotS);
    static final short[] DFA32_eof = DFA.unpackEncodedString(DFA32_eofS);
    static final char[] DFA32_min = DFA.unpackEncodedStringToUnsignedChars(DFA32_minS);
    static final char[] DFA32_max = DFA.unpackEncodedStringToUnsignedChars(DFA32_maxS);
    static final short[] DFA32_accept = DFA.unpackEncodedString(DFA32_acceptS);
    static final short[] DFA32_special = DFA.unpackEncodedString(DFA32_specialS);
    static final short[][] DFA32_transition;

    static {
        int numStates = DFA32_transitionS.length;
        DFA32_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA32_transition[i] = DFA.unpackEncodedString(DFA32_transitionS[i]);
        }
    }

    class DFA32 extends DFA {

        public DFA32(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 32;
            this.eot = DFA32_eot;
            this.eof = DFA32_eof;
            this.min = DFA32_min;
            this.max = DFA32_max;
            this.accept = DFA32_accept;
            this.special = DFA32_special;
            this.transition = DFA32_transition;
        }
        public String getDescription() {
            return "()* loopback of 544:5: ( ( 'public' | 'private' | 'protected' ) ':' | declaration )*";
        }
    }
    static final String DFA34_eotS =
        "\52\uffff";
    static final String DFA34_eofS =
        "\52\uffff";
    static final String DFA34_minS =
        "\1\6\1\5\5\0\43\uffff";
    static final String DFA34_maxS =
        "\1\112\1\5\5\0\43\uffff";
    static final String DFA34_acceptS =
        "\7\uffff\1\1\13\uffff\1\2\1\3\25\uffff";
    static final String DFA34_specialS =
        "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\43\uffff}>";
    static final String[] DFA34_transitionS = {
            "\1\1\27\uffff\1\3\16\uffff\3\2\14\uffff\4\4\2\5\11\6",
            "\1\7",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA34_eot = DFA.unpackEncodedString(DFA34_eotS);
    static final short[] DFA34_eof = DFA.unpackEncodedString(DFA34_eofS);
    static final char[] DFA34_min = DFA.unpackEncodedStringToUnsignedChars(DFA34_minS);
    static final char[] DFA34_max = DFA.unpackEncodedStringToUnsignedChars(DFA34_maxS);
    static final short[] DFA34_accept = DFA.unpackEncodedString(DFA34_acceptS);
    static final short[] DFA34_special = DFA.unpackEncodedString(DFA34_specialS);
    static final short[][] DFA34_transition;

    static {
        int numStates = DFA34_transitionS.length;
        DFA34_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA34_transition[i] = DFA.unpackEncodedString(DFA34_transitionS[i]);
        }
    }

    class DFA34 extends DFA {

        public DFA34(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 34;
            this.eot = DFA34_eot;
            this.eof = DFA34_eof;
            this.min = DFA34_min;
            this.max = DFA34_max;
            this.accept = DFA34_accept;
            this.special = DFA34_special;
            this.transition = DFA34_transition;
        }
        public String getDescription() {
            return "577:3: ({...}? IDENTIFIER STRING | )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA34_1 = input.LA(1);

                         
                        int index34_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA34_1==STRING) ) {s = 7;}

                        else if ( (synpred51_ObjCpp()) ) {s = 19;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index34_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA34_2 = input.LA(1);

                         
                        int index34_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred51_ObjCpp()) ) {s = 19;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index34_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA34_3 = input.LA(1);

                         
                        int index34_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred51_ObjCpp()) ) {s = 19;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index34_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA34_4 = input.LA(1);

                         
                        int index34_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred51_ObjCpp()) ) {s = 19;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index34_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA34_5 = input.LA(1);

                         
                        int index34_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred51_ObjCpp()) ) {s = 19;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index34_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA34_6 = input.LA(1);

                         
                        int index34_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred51_ObjCpp()) ) {s = 19;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index34_6);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 34, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA35_eotS =
        "\23\uffff";
    static final String DFA35_eofS =
        "\23\uffff";
    static final String DFA35_minS =
        "\1\6\2\uffff\1\0\17\uffff";
    static final String DFA35_maxS =
        "\1\112\2\uffff\1\0\17\uffff";
    static final String DFA35_acceptS =
        "\1\uffff\1\1\20\uffff\1\2";
    static final String DFA35_specialS =
        "\3\uffff\1\0\17\uffff}>";
    static final String[] DFA35_transitionS = {
            "\1\3\27\uffff\1\1\16\uffff\3\1\14\uffff\17\1",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA35_eot = DFA.unpackEncodedString(DFA35_eotS);
    static final short[] DFA35_eof = DFA.unpackEncodedString(DFA35_eofS);
    static final char[] DFA35_min = DFA.unpackEncodedStringToUnsignedChars(DFA35_minS);
    static final char[] DFA35_max = DFA.unpackEncodedStringToUnsignedChars(DFA35_maxS);
    static final short[] DFA35_accept = DFA.unpackEncodedString(DFA35_acceptS);
    static final short[] DFA35_special = DFA.unpackEncodedString(DFA35_specialS);
    static final short[][] DFA35_transition;

    static {
        int numStates = DFA35_transitionS.length;
        DFA35_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA35_transition[i] = DFA.unpackEncodedString(DFA35_transitionS[i]);
        }
    }

    class DFA35 extends DFA {

        public DFA35(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 35;
            this.eot = DFA35_eot;
            this.eof = DFA35_eof;
            this.min = DFA35_min;
            this.max = DFA35_max;
            this.accept = DFA35_accept;
            this.special = DFA35_special;
            this.transition = DFA35_transition;
        }
        public String getDescription() {
            return "585:16: (returnTypeRef= typeRef )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA35_3 = input.LA(1);

                         
                        int index35_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (((synpred52_ObjCpp()&&( Modifier.parseModifier(next()) == null ))||((synpred52_ObjCpp()&&( next(Modifier.Kind.TypeQualifier, Modifier.Kind.VCAnnotationNoArg) ))&&( Modifier.parseModifier(next()) != null ))||(synpred52_ObjCpp()&&( "__success".equals(next()) ))||((synpred52_ObjCpp()&&( next(Modifier.Kind.VCAnnotation1Arg) ))&&( Modifier.parseModifier(next()) != null ))||((synpred52_ObjCpp()&&( next(Modifier.Kind.VCAnnotation2Args) ))&&( Modifier.parseModifier(next()) != null ))||((synpred52_ObjCpp()&&( next(Modifier.Kind.ReferenceQualifier) ))&&( Modifier.parseModifier(next()) != null )))) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index35_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 35, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA38_eotS =
        "\32\uffff";
    static final String DFA38_eofS =
        "\1\2\31\uffff";
    static final String DFA38_minS =
        "\1\6\1\0\30\uffff";
    static final String DFA38_maxS =
        "\1\112\1\0\30\uffff";
    static final String DFA38_acceptS =
        "\2\uffff\1\2\26\uffff\1\1";
    static final String DFA38_specialS =
        "\1\uffff\1\0\30\uffff}>";
    static final String[] DFA38_transitionS = {
            "\1\1\20\uffff\1\2\4\uffff\1\2\1\uffff\1\2\16\uffff\3\2\3\uffff"+
            "\1\2\10\uffff\17\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA38_eot = DFA.unpackEncodedString(DFA38_eotS);
    static final short[] DFA38_eof = DFA.unpackEncodedString(DFA38_eofS);
    static final char[] DFA38_min = DFA.unpackEncodedStringToUnsignedChars(DFA38_minS);
    static final char[] DFA38_max = DFA.unpackEncodedStringToUnsignedChars(DFA38_maxS);
    static final short[] DFA38_accept = DFA.unpackEncodedString(DFA38_acceptS);
    static final short[] DFA38_special = DFA.unpackEncodedString(DFA38_specialS);
    static final short[][] DFA38_transition;

    static {
        int numStates = DFA38_transitionS.length;
        DFA38_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA38_transition[i] = DFA.unpackEncodedString(DFA38_transitionS[i]);
        }
    }

    class DFA38 extends DFA {

        public DFA38(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 38;
            this.eot = DFA38_eot;
            this.eof = DFA38_eof;
            this.min = DFA38_min;
            this.max = DFA38_max;
            this.accept = DFA38_accept;
            this.special = DFA38_special;
            this.transition = DFA38_transition;
        }
        public String getDescription() {
            return "()* loopback of 616:3: ( exportationModifier )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA38_1 = input.LA(1);

                         
                        int index38_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_ObjCpp()) ) {s = 25;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index38_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 38, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA39_eotS =
        "\15\uffff";
    static final String DFA39_eofS =
        "\1\uffff\1\3\13\uffff";
    static final String DFA39_minS =
        "\2\6\13\uffff";
    static final String DFA39_maxS =
        "\1\6\1\112\13\uffff";
    static final String DFA39_acceptS =
        "\2\uffff\1\2\1\1\11\uffff";
    static final String DFA39_specialS =
        "\15\uffff}>";
    static final String[] DFA39_transitionS = {
            "\1\1",
            "\1\3\20\uffff\1\3\4\uffff\1\3\1\uffff\1\3\3\uffff\1\2\12\uffff"+
            "\3\3\3\uffff\1\3\10\uffff\17\3",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA39_eot = DFA.unpackEncodedString(DFA39_eotS);
    static final short[] DFA39_eof = DFA.unpackEncodedString(DFA39_eofS);
    static final char[] DFA39_min = DFA.unpackEncodedStringToUnsignedChars(DFA39_minS);
    static final char[] DFA39_max = DFA.unpackEncodedStringToUnsignedChars(DFA39_maxS);
    static final short[] DFA39_accept = DFA.unpackEncodedString(DFA39_acceptS);
    static final short[] DFA39_special = DFA.unpackEncodedString(DFA39_specialS);
    static final short[][] DFA39_transition;

    static {
        int numStates = DFA39_transitionS.length;
        DFA39_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA39_transition[i] = DFA.unpackEncodedString(DFA39_transitionS[i]);
        }
    }

    class DFA39 extends DFA {

        public DFA39(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 39;
            this.eot = DFA39_eot;
            this.eof = DFA39_eof;
            this.min = DFA39_min;
            this.max = DFA39_max;
            this.accept = DFA39_accept;
            this.special = DFA39_special;
            this.transition = DFA39_transition;
        }
        public String getDescription() {
            return "639:3: ({...}? modifier | IDENTIFIER {...}? '(' extendedModifiers ')' )";
        }
    }
    static final String DFA41_eotS =
        "\31\uffff";
    static final String DFA41_eofS =
        "\31\uffff";
    static final String DFA41_minS =
        "\1\6\2\uffff\1\0\25\uffff";
    static final String DFA41_maxS =
        "\1\112\2\uffff\1\0\25\uffff";
    static final String DFA41_acceptS =
        "\1\uffff\1\3\25\uffff\1\1\1\2";
    static final String DFA41_specialS =
        "\3\uffff\1\0\25\uffff}>";
    static final String[] DFA41_transitionS = {
            "\1\3\27\uffff\1\1\16\uffff\3\1\14\uffff\17\1",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA41_eot = DFA.unpackEncodedString(DFA41_eotS);
    static final short[] DFA41_eof = DFA.unpackEncodedString(DFA41_eofS);
    static final char[] DFA41_min = DFA.unpackEncodedStringToUnsignedChars(DFA41_minS);
    static final char[] DFA41_max = DFA.unpackEncodedStringToUnsignedChars(DFA41_maxS);
    static final short[] DFA41_accept = DFA.unpackEncodedString(DFA41_acceptS);
    static final short[] DFA41_special = DFA.unpackEncodedString(DFA41_specialS);
    static final short[][] DFA41_transition;

    static {
        int numStates = DFA41_transitionS.length;
        DFA41_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA41_transition[i] = DFA.unpackEncodedString(DFA41_transitionS[i]);
        }
    }

    class DFA41 extends DFA {

        public DFA41(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 41;
            this.eot = DFA41_eot;
            this.eof = DFA41_eof;
            this.min = DFA41_min;
            this.max = DFA41_max;
            this.accept = DFA41_accept;
            this.special = DFA41_special;
            this.transition = DFA41_transition;
        }
        public String getDescription() {
            return "()* loopback of 676:3: ({...}?sm= modifier | {...}?tm= modifier )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA41_3 = input.LA(1);

                         
                        int index41_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (((synpred58_ObjCpp()&&( next(Modifier.Kind.StorageClassSpecifier) ))&&( Modifier.parseModifier(next()) != null ))) ) {s = 23;}

                        else if ( (((synpred59_ObjCpp()&&( next(Modifier.Kind.TypeQualifier) ))&&( Modifier.parseModifier(next()) != null ))) ) {s = 24;}

                        else if ( ((( "__success".equals(next()) )||(( next(Modifier.Kind.VCAnnotation2Args) )&&( Modifier.parseModifier(next()) != null ))||(( next(Modifier.Kind.TypeQualifier, Modifier.Kind.VCAnnotationNoArg) )&&( Modifier.parseModifier(next()) != null ))||(( next(Modifier.Kind.VCAnnotation1Arg) )&&( Modifier.parseModifier(next()) != null ))||(( next(Modifier.Kind.ReferenceQualifier) )&&( Modifier.parseModifier(next()) != null ))||( Modifier.parseModifier(next()) == null ))) ) {s = 1;}

                         
                        input.seek(index41_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 41, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA46_eotS =
        "\53\uffff";
    static final String DFA46_eofS =
        "\1\uffff\1\2\51\uffff";
    static final String DFA46_minS =
        "\2\6\3\uffff\1\4\22\uffff\17\0\1\uffff\1\0\2\uffff";
    static final String DFA46_maxS =
        "\2\112\3\uffff\1\150\22\uffff\17\0\1\uffff\1\0\2\uffff";
    static final String DFA46_acceptS =
        "\2\uffff\1\4\24\uffff\1\1\21\uffff\1\2\1\3";
    static final String DFA46_specialS =
        "\30\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1"+
        "\14\1\15\1\16\1\uffff\1\17\2\uffff}>";
    static final String[] DFA46_transitionS = {
            "\1\1\65\uffff\17\2",
            "\1\2\24\uffff\4\2\3\uffff\1\5\3\2\7\uffff\3\2\3\uffff\3\2\4"+
            "\uffff\1\2\1\uffff\17\2",
            "",
            "",
            "",
            "\1\32\1\37\1\31\1\33\1\34\1\35\1\36\24\uffff\1\42\2\uffff\1"+
            "\30\10\uffff\1\46\7\uffff\1\44\1\50\1\40\1\uffff\1\27\2\uffff"+
            "\1\2\34\uffff\1\41\1\43\13\uffff\1\45\4\46",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "",
            ""
    };

    static final short[] DFA46_eot = DFA.unpackEncodedString(DFA46_eotS);
    static final short[] DFA46_eof = DFA.unpackEncodedString(DFA46_eofS);
    static final char[] DFA46_min = DFA.unpackEncodedStringToUnsignedChars(DFA46_minS);
    static final char[] DFA46_max = DFA.unpackEncodedStringToUnsignedChars(DFA46_maxS);
    static final short[] DFA46_accept = DFA.unpackEncodedString(DFA46_acceptS);
    static final short[] DFA46_special = DFA.unpackEncodedString(DFA46_specialS);
    static final short[][] DFA46_transition;

    static {
        int numStates = DFA46_transitionS.length;
        DFA46_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA46_transition[i] = DFA.unpackEncodedString(DFA46_transitionS[i]);
        }
    }

    class DFA46 extends DFA {

        public DFA46(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 46;
            this.eot = DFA46_eot;
            this.eof = DFA46_eof;
            this.min = DFA46_min;
            this.max = DFA46_max;
            this.accept = DFA46_accept;
            this.special = DFA46_special;
            this.transition = DFA46_transition;
        }
        public String getDescription() {
            return "765:3: ({...}? IDENTIFIER '(' 'return' binaryOp expression ')' | {...}?m1a= modifier '(' expression ')' | {...}?m2a= modifier '(' expression ',' expression ')' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA46_24 = input.LA(1);

                         
                        int index46_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (((synpred67_ObjCpp()&&( next(Modifier.Kind.VCAnnotation1Arg) ))&&( Modifier.parseModifier(next()) != null ))) ) {s = 41;}

                        else if ( (((synpred68_ObjCpp()&&( next(Modifier.Kind.VCAnnotation2Args) ))&&( Modifier.parseModifier(next()) != null ))) ) {s = 42;}

                        else if ( (( Modifier.parseModifier(next()) == null )) ) {s = 2;}

                         
                        input.seek(index46_24);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA46_25 = input.LA(1);

                         
                        int index46_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (((synpred67_ObjCpp()&&( next(Modifier.Kind.VCAnnotation1Arg) ))&&( Modifier.parseModifier(next()) != null ))) ) {s = 41;}

                        else if ( (((synpred68_ObjCpp()&&( next(Modifier.Kind.VCAnnotation2Args) ))&&( Modifier.parseModifier(next()) != null ))) ) {s = 42;}

                        else if ( (( Modifier.parseModifier(next()) == null )) ) {s = 2;}

                         
                        input.seek(index46_25);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA46_26 = input.LA(1);

                         
                        int index46_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (((synpred67_ObjCpp()&&( next(Modifier.Kind.VCAnnotation1Arg) ))&&( Modifier.parseModifier(next()) != null ))) ) {s = 41;}

                        else if ( (((synpred68_ObjCpp()&&( next(Modifier.Kind.VCAnnotation2Args) ))&&( Modifier.parseModifier(next()) != null ))) ) {s = 42;}

                         
                        input.seek(index46_26);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA46_27 = input.LA(1);

                         
                        int index46_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (((synpred67_ObjCpp()&&( next(Modifier.Kind.VCAnnotation1Arg) ))&&( Modifier.parseModifier(next()) != null ))) ) {s = 41;}

                        else if ( (((synpred68_ObjCpp()&&( next(Modifier.Kind.VCAnnotation2Args) ))&&( Modifier.parseModifier(next()) != null ))) ) {s = 42;}

                         
                        input.seek(index46_27);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA46_28 = input.LA(1);

                         
                        int index46_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (((synpred67_ObjCpp()&&( next(Modifier.Kind.VCAnnotation1Arg) ))&&( Modifier.parseModifier(next()) != null ))) ) {s = 41;}

                        else if ( (((synpred68_ObjCpp()&&( next(Modifier.Kind.VCAnnotation2Args) ))&&( Modifier.parseModifier(next()) != null ))) ) {s = 42;}

                         
                        input.seek(index46_28);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA46_29 = input.LA(1);

                         
                        int index46_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (((synpred67_ObjCpp()&&( next(Modifier.Kind.VCAnnotation1Arg) ))&&( Modifier.parseModifier(next()) != null ))) ) {s = 41;}

                        else if ( (((synpred68_ObjCpp()&&( next(Modifier.Kind.VCAnnotation2Args) ))&&( Modifier.parseModifier(next()) != null ))) ) {s = 42;}

                         
                        input.seek(index46_29);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA46_30 = input.LA(1);

                         
                        int index46_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (((synpred67_ObjCpp()&&( next(Modifier.Kind.VCAnnotation1Arg) ))&&( Modifier.parseModifier(next()) != null ))) ) {s = 41;}

                        else if ( (((synpred68_ObjCpp()&&( next(Modifier.Kind.VCAnnotation2Args) ))&&( Modifier.parseModifier(next()) != null ))) ) {s = 42;}

                         
                        input.seek(index46_30);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA46_31 = input.LA(1);

                         
                        int index46_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (((synpred67_ObjCpp()&&( next(Modifier.Kind.VCAnnotation1Arg) ))&&( Modifier.parseModifier(next()) != null ))) ) {s = 41;}

                        else if ( (((synpred68_ObjCpp()&&( next(Modifier.Kind.VCAnnotation2Args) ))&&( Modifier.parseModifier(next()) != null ))) ) {s = 42;}

                         
                        input.seek(index46_31);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA46_32 = input.LA(1);

                         
                        int index46_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (((synpred67_ObjCpp()&&( next(Modifier.Kind.VCAnnotation1Arg) ))&&( Modifier.parseModifier(next()) != null ))) ) {s = 41;}

                        else if ( (((synpred68_ObjCpp()&&( next(Modifier.Kind.VCAnnotation2Args) ))&&( Modifier.parseModifier(next()) != null ))) ) {s = 42;}

                         
                        input.seek(index46_32);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA46_33 = input.LA(1);

                         
                        int index46_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (((synpred67_ObjCpp()&&( next(Modifier.Kind.VCAnnotation1Arg) ))&&( Modifier.parseModifier(next()) != null ))) ) {s = 41;}

                        else if ( (((synpred68_ObjCpp()&&( next(Modifier.Kind.VCAnnotation2Args) ))&&( Modifier.parseModifier(next()) != null ))) ) {s = 42;}

                         
                        input.seek(index46_33);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA46_34 = input.LA(1);

                         
                        int index46_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (((synpred67_ObjCpp()&&( next(Modifier.Kind.VCAnnotation1Arg) ))&&( Modifier.parseModifier(next()) != null ))) ) {s = 41;}

                        else if ( (((synpred68_ObjCpp()&&( next(Modifier.Kind.VCAnnotation2Args) ))&&( Modifier.parseModifier(next()) != null ))) ) {s = 42;}

                         
                        input.seek(index46_34);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA46_35 = input.LA(1);

                         
                        int index46_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (((synpred67_ObjCpp()&&( next(Modifier.Kind.VCAnnotation1Arg) ))&&( Modifier.parseModifier(next()) != null ))) ) {s = 41;}

                        else if ( (((synpred68_ObjCpp()&&( next(Modifier.Kind.VCAnnotation2Args) ))&&( Modifier.parseModifier(next()) != null ))) ) {s = 42;}

                         
                        input.seek(index46_35);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA46_36 = input.LA(1);

                         
                        int index46_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (((synpred67_ObjCpp()&&( next(Modifier.Kind.VCAnnotation1Arg) ))&&( Modifier.parseModifier(next()) != null ))) ) {s = 41;}

                        else if ( (((synpred68_ObjCpp()&&( next(Modifier.Kind.VCAnnotation2Args) ))&&( Modifier.parseModifier(next()) != null ))) ) {s = 42;}

                        else if ( (( Modifier.parseModifier(next()) == null )) ) {s = 2;}

                         
                        input.seek(index46_36);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA46_37 = input.LA(1);

                         
                        int index46_37 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (((synpred67_ObjCpp()&&( next(Modifier.Kind.VCAnnotation1Arg) ))&&( Modifier.parseModifier(next()) != null ))) ) {s = 41;}

                        else if ( (((synpred68_ObjCpp()&&( next(Modifier.Kind.VCAnnotation2Args) ))&&( Modifier.parseModifier(next()) != null ))) ) {s = 42;}

                         
                        input.seek(index46_37);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA46_38 = input.LA(1);

                         
                        int index46_38 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (((synpred67_ObjCpp()&&( next(Modifier.Kind.VCAnnotation1Arg) ))&&( Modifier.parseModifier(next()) != null ))) ) {s = 41;}

                        else if ( (((synpred68_ObjCpp()&&( next(Modifier.Kind.VCAnnotation2Args) ))&&( Modifier.parseModifier(next()) != null ))) ) {s = 42;}

                         
                        input.seek(index46_38);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA46_40 = input.LA(1);

                         
                        int index46_40 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (((synpred67_ObjCpp()&&( next(Modifier.Kind.VCAnnotation1Arg) ))&&( Modifier.parseModifier(next()) != null ))) ) {s = 41;}

                        else if ( (((synpred68_ObjCpp()&&( next(Modifier.Kind.VCAnnotation2Args) ))&&( Modifier.parseModifier(next()) != null ))) ) {s = 42;}

                        else if ( (( Modifier.parseModifier(next()) == null )) ) {s = 2;}

                         
                        input.seek(index46_40);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 46, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA47_eotS =
        "\30\uffff";
    static final String DFA47_eofS =
        "\30\uffff";
    static final String DFA47_minS =
        "\1\6\1\0\26\uffff";
    static final String DFA47_maxS =
        "\1\112\1\0\26\uffff";
    static final String DFA47_acceptS =
        "\2\uffff\1\2\24\uffff\1\1";
    static final String DFA47_specialS =
        "\1\uffff\1\0\26\uffff}>";
    static final String[] DFA47_transitionS = {
            "\1\1\65\uffff\17\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA47_eot = DFA.unpackEncodedString(DFA47_eotS);
    static final short[] DFA47_eof = DFA.unpackEncodedString(DFA47_eofS);
    static final char[] DFA47_min = DFA.unpackEncodedStringToUnsignedChars(DFA47_minS);
    static final char[] DFA47_max = DFA.unpackEncodedStringToUnsignedChars(DFA47_maxS);
    static final short[] DFA47_accept = DFA.unpackEncodedString(DFA47_acceptS);
    static final short[] DFA47_special = DFA.unpackEncodedString(DFA47_specialS);
    static final short[][] DFA47_transition;

    static {
        int numStates = DFA47_transitionS.length;
        DFA47_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA47_transition[i] = DFA.unpackEncodedString(DFA47_transitionS[i]);
        }
    }

    class DFA47 extends DFA {

        public DFA47(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 47;
            this.eot = DFA47_eot;
            this.eof = DFA47_eof;
            this.min = DFA47_min;
            this.max = DFA47_max;
            this.accept = DFA47_accept;
            this.special = DFA47_special;
            this.transition = DFA47_transition;
        }
        public String getDescription() {
            return "772:3: ({...}?m= modifier )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA47_1 = input.LA(1);

                         
                        int index47_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (((synpred69_ObjCpp()&&( next(Modifier.Kind.TypeQualifier, Modifier.Kind.VCAnnotationNoArg) ))&&( Modifier.parseModifier(next()) != null ))) ) {s = 23;}

                        else if ( (((( next(Modifier.Kind.ReferenceQualifier) )&&( Modifier.parseModifier(next()) != null ))||( Modifier.parseModifier(next()) == null ))) ) {s = 2;}

                         
                        input.seek(index47_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 47, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA52_eotS =
        "\51\uffff";
    static final String DFA52_eofS =
        "\1\uffff\1\2\47\uffff";
    static final String DFA52_minS =
        "\2\6\5\uffff\1\0\41\uffff";
    static final String DFA52_maxS =
        "\2\112\5\uffff\1\0\41\uffff";
    static final String DFA52_acceptS =
        "\2\uffff\1\2\2\uffff\1\1\43\uffff";
    static final String DFA52_specialS =
        "\7\uffff\1\0\41\uffff}>";
    static final String[] DFA52_transitionS = {
            "\1\1\65\uffff\17\2",
            "\1\7\24\uffff\3\2\1\5\3\uffff\4\2\7\uffff\3\5\3\uffff\3\2\4"+
            "\uffff\1\2\1\uffff\17\5",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA52_eot = DFA.unpackEncodedString(DFA52_eotS);
    static final short[] DFA52_eof = DFA.unpackEncodedString(DFA52_eofS);
    static final char[] DFA52_min = DFA.unpackEncodedStringToUnsignedChars(DFA52_minS);
    static final char[] DFA52_max = DFA.unpackEncodedStringToUnsignedChars(DFA52_maxS);
    static final short[] DFA52_accept = DFA.unpackEncodedString(DFA52_acceptS);
    static final short[] DFA52_special = DFA.unpackEncodedString(DFA52_specialS);
    static final short[][] DFA52_transition;

    static {
        int numStates = DFA52_transitionS.length;
        DFA52_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA52_transition[i] = DFA.unpackEncodedString(DFA52_transitionS[i]);
        }
    }

    class DFA52 extends DFA {

        public DFA52(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 52;
            this.eot = DFA52_eot;
            this.eof = DFA52_eof;
            this.min = DFA52_min;
            this.max = DFA52_max;
            this.accept = DFA52_accept;
            this.special = DFA52_special;
            this.transition = DFA52_transition;
        }
        public String getDescription() {
            return "773:3: ({...}?m1= modifier tr= typeRef | ( primitiveTypeRef | {...}?ref= IDENTIFIER ( | '<' (t1= typeRef ( ',' tx= typeRef )* )? '>' ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA52_7 = input.LA(1);

                         
                        int index52_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (((synpred70_ObjCpp()&&( next(Modifier.Kind.ReferenceQualifier) ))&&( Modifier.parseModifier(next()) != null ))) ) {s = 5;}

                        else if ( (( Modifier.parseModifier(next()) == null )) ) {s = 2;}

                         
                        input.seek(index52_7);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 52, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA50_eotS =
        "\16\uffff";
    static final String DFA50_eofS =
        "\1\1\15\uffff";
    static final String DFA50_minS =
        "\1\6\15\uffff";
    static final String DFA50_maxS =
        "\1\72\15\uffff";
    static final String DFA50_acceptS =
        "\1\uffff\1\1\13\uffff\1\2";
    static final String DFA50_specialS =
        "\16\uffff}>";
    static final String[] DFA50_transitionS = {
            "\1\1\24\uffff\3\1\4\uffff\2\1\1\15\1\1\15\uffff\3\1\4\uffff"+
            "\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA50_eot = DFA.unpackEncodedString(DFA50_eotS);
    static final short[] DFA50_eof = DFA.unpackEncodedString(DFA50_eofS);
    static final char[] DFA50_min = DFA.unpackEncodedStringToUnsignedChars(DFA50_minS);
    static final char[] DFA50_max = DFA.unpackEncodedStringToUnsignedChars(DFA50_maxS);
    static final short[] DFA50_accept = DFA.unpackEncodedString(DFA50_acceptS);
    static final short[] DFA50_special = DFA.unpackEncodedString(DFA50_specialS);
    static final short[][] DFA50_transition;

    static {
        int numStates = DFA50_transitionS.length;
        DFA50_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA50_transition[i] = DFA.unpackEncodedString(DFA50_transitionS[i]);
        }
    }

    class DFA50 extends DFA {

        public DFA50(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 50;
            this.eot = DFA50_eot;
            this.eof = DFA50_eof;
            this.min = DFA50_min;
            this.max = DFA50_max;
            this.accept = DFA50_accept;
            this.special = DFA50_special;
            this.transition = DFA50_transition;
        }
        public String getDescription() {
            return "779:64: ( | '<' (t1= typeRef ( ',' tx= typeRef )* )? '>' )";
        }
    }
    static final String DFA64_eotS =
        "\65\uffff";
    static final String DFA64_eofS =
        "\1\6\64\uffff";
    static final String DFA64_minS =
        "\1\6\5\0\57\uffff";
    static final String DFA64_maxS =
        "\1\72\5\0\57\uffff";
    static final String DFA64_acceptS =
        "\6\uffff\1\2\20\uffff\1\1\35\uffff";
    static final String DFA64_specialS =
        "\1\uffff\1\0\1\1\1\2\1\3\1\4\57\uffff}>";
    static final String[] DFA64_transitionS = {
            "\1\1\24\uffff\3\6\4\uffff\1\5\1\6\1\uffff\1\6\15\uffff\1\2\1"+
            "\3\1\4\4\uffff\1\6",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA64_eot = DFA.unpackEncodedString(DFA64_eotS);
    static final short[] DFA64_eof = DFA.unpackEncodedString(DFA64_eofS);
    static final char[] DFA64_min = DFA.unpackEncodedStringToUnsignedChars(DFA64_minS);
    static final char[] DFA64_max = DFA.unpackEncodedStringToUnsignedChars(DFA64_maxS);
    static final short[] DFA64_accept = DFA.unpackEncodedString(DFA64_acceptS);
    static final short[] DFA64_special = DFA.unpackEncodedString(DFA64_specialS);
    static final short[][] DFA64_transition;

    static {
        int numStates = DFA64_transitionS.length;
        DFA64_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA64_transition[i] = DFA.unpackEncodedString(DFA64_transitionS[i]);
        }
    }

    class DFA64 extends DFA {

        public DFA64(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 64;
            this.eot = DFA64_eot;
            this.eof = DFA64_eof;
            this.min = DFA64_min;
            this.max = DFA64_max;
            this.accept = DFA64_accept;
            this.special = DFA64_special;
            this.transition = DFA64_transition;
        }
        public String getDescription() {
            return "858:3: ( ( typeMutator )* functionSignatureSuffix )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA64_1 = input.LA(1);

                         
                        int index64_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred87_ObjCpp()&&( next("const", "__const") ))) ) {s = 23;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index64_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA64_2 = input.LA(1);

                         
                        int index64_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred87_ObjCpp()) ) {s = 23;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index64_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA64_3 = input.LA(1);

                         
                        int index64_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred87_ObjCpp()) ) {s = 23;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index64_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA64_4 = input.LA(1);

                         
                        int index64_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred87_ObjCpp()) ) {s = 23;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index64_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA64_5 = input.LA(1);

                         
                        int index64_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred87_ObjCpp()) ) {s = 23;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index64_5);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 64, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA66_eotS =
        "\140\uffff";
    static final String DFA66_eofS =
        "\140\uffff";
    static final String DFA66_minS =
        "\4\6\1\uffff\1\6\1\uffff\1\6\7\uffff\4\6\2\uffff\4\6\2\uffff\2\6"+
        "\2\uffff\4\0\2\uffff\2\0\2\uffff\1\0\7\uffff\4\0\2\uffff\4\0\2\uffff"+
        "\2\0\2\uffff\1\0\7\uffff\4\0\2\uffff\4\0\3\uffff\1\0\2\uffff\2\0"+
        "\5\uffff";
    static final String DFA66_maxS =
        "\4\72\1\uffff\1\72\1\uffff\1\72\7\uffff\4\72\2\uffff\4\72\2\uffff"+
        "\2\72\2\uffff\4\0\2\uffff\2\0\2\uffff\1\0\7\uffff\4\0\2\uffff\4"+
        "\0\2\uffff\2\0\2\uffff\1\0\7\uffff\4\0\2\uffff\4\0\3\uffff\1\0\2"+
        "\uffff\2\0\5\uffff";
    static final String DFA66_acceptS =
        "\4\uffff\1\1\1\uffff\1\2\131\uffff";
    static final String DFA66_specialS =
        "\37\uffff\1\0\1\1\1\2\1\3\2\uffff\1\4\1\5\2\uffff\1\6\7\uffff\1"+
        "\7\1\10\1\11\1\12\2\uffff\1\13\1\14\1\15\1\16\2\uffff\1\17\1\20"+
        "\2\uffff\1\21\7\uffff\1\22\1\23\1\24\1\25\2\uffff\1\26\1\27\1\30"+
        "\1\31\3\uffff\1\32\2\uffff\1\33\1\34\5\uffff}>";
    static final String[] DFA66_transitionS = {
            "\1\1\33\uffff\1\5\20\uffff\1\2\1\3\1\4\4\uffff\1\6",
            "\1\6\24\uffff\3\6\4\uffff\1\6\20\uffff\1\7\2\6\4\uffff\1\6",
            "\1\20\33\uffff\1\17\20\uffff\1\21\1\22\1\4\4\uffff\1\6",
            "\1\26\33\uffff\1\25\20\uffff\1\27\1\30\1\4\4\uffff\1\6",
            "",
            "\1\33\33\uffff\1\6\20\uffff\1\34\1\6\5\uffff\1\6",
            "",
            "\1\40\33\uffff\1\37\20\uffff\1\41\1\42\1\4\4\uffff\1\6",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\45\33\uffff\1\6\20\uffff\1\46\1\6\5\uffff\1\6",
            "\1\6\24\uffff\3\6\4\uffff\1\6\20\uffff\1\51\2\6\4\uffff\1\6",
            "\1\62\33\uffff\1\61\20\uffff\1\63\1\64\1\4\4\uffff\1\6",
            "\1\70\33\uffff\1\67\20\uffff\1\71\1\72\1\4\4\uffff\1\6",
            "",
            "",
            "\1\75\33\uffff\1\6\20\uffff\1\76\1\6\5\uffff\1\6",
            "\1\6\24\uffff\3\6\4\uffff\1\6\20\uffff\1\101\2\6\4\uffff\1"+
            "\6",
            "\1\112\33\uffff\1\111\20\uffff\1\113\1\114\1\4\4\uffff\1\6",
            "\1\120\33\uffff\1\117\20\uffff\1\121\1\122\1\4\4\uffff\1\6",
            "",
            "",
            "\1\131\26\uffff\1\6\4\uffff\1\126\1\6\17\uffff\1\132\2\6\4"+
            "\uffff\1\6",
            "\1\6\33\uffff\1\6\1\4\17\uffff\2\6\5\uffff\1\6",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA66_eot = DFA.unpackEncodedString(DFA66_eotS);
    static final short[] DFA66_eof = DFA.unpackEncodedString(DFA66_eofS);
    static final char[] DFA66_min = DFA.unpackEncodedStringToUnsignedChars(DFA66_minS);
    static final char[] DFA66_max = DFA.unpackEncodedStringToUnsignedChars(DFA66_maxS);
    static final short[] DFA66_accept = DFA.unpackEncodedString(DFA66_acceptS);
    static final short[] DFA66_special = DFA.unpackEncodedString(DFA66_specialS);
    static final short[][] DFA66_transition;

    static {
        int numStates = DFA66_transitionS.length;
        DFA66_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA66_transition[i] = DFA.unpackEncodedString(DFA66_transitionS[i]);
        }
    }

    class DFA66 extends DFA {

        public DFA66(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 66;
            this.eot = DFA66_eot;
            this.eof = DFA66_eof;
            this.min = DFA66_min;
            this.max = DFA66_max;
            this.accept = DFA66_accept;
            this.special = DFA66_special;
            this.transition = DFA66_transition;
        }
        public String getDescription() {
            return "873:3: ( ( typeMutator )* functionSignatureSuffixNoName )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA66_31 = input.LA(1);

                         
                        int index66_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred89_ObjCpp()&&( next("const", "__const") ))) ) {s = 4;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index66_31);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA66_32 = input.LA(1);

                         
                        int index66_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred89_ObjCpp()&&( next("const", "__const") ))) ) {s = 4;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index66_32);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA66_33 = input.LA(1);

                         
                        int index66_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred89_ObjCpp()&&( next("const", "__const") ))) ) {s = 4;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index66_33);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA66_34 = input.LA(1);

                         
                        int index66_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred89_ObjCpp()&&( next("const", "__const") ))) ) {s = 4;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index66_34);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA66_37 = input.LA(1);

                         
                        int index66_37 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred89_ObjCpp()) ) {s = 4;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index66_37);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA66_38 = input.LA(1);

                         
                        int index66_38 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred89_ObjCpp()) ) {s = 4;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index66_38);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA66_41 = input.LA(1);

                         
                        int index66_41 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred89_ObjCpp()) ) {s = 4;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index66_41);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA66_49 = input.LA(1);

                         
                        int index66_49 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred89_ObjCpp()) ) {s = 4;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index66_49);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA66_50 = input.LA(1);

                         
                        int index66_50 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred89_ObjCpp()) ) {s = 4;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index66_50);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA66_51 = input.LA(1);

                         
                        int index66_51 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred89_ObjCpp()) ) {s = 4;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index66_51);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA66_52 = input.LA(1);

                         
                        int index66_52 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred89_ObjCpp()) ) {s = 4;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index66_52);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA66_55 = input.LA(1);

                         
                        int index66_55 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred89_ObjCpp()) ) {s = 4;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index66_55);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA66_56 = input.LA(1);

                         
                        int index66_56 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred89_ObjCpp()) ) {s = 4;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index66_56);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA66_57 = input.LA(1);

                         
                        int index66_57 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred89_ObjCpp()) ) {s = 4;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index66_57);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA66_58 = input.LA(1);

                         
                        int index66_58 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred89_ObjCpp()) ) {s = 4;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index66_58);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA66_61 = input.LA(1);

                         
                        int index66_61 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred89_ObjCpp()) ) {s = 4;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index66_61);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA66_62 = input.LA(1);

                         
                        int index66_62 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred89_ObjCpp()) ) {s = 4;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index66_62);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA66_65 = input.LA(1);

                         
                        int index66_65 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred89_ObjCpp()) ) {s = 4;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index66_65);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA66_73 = input.LA(1);

                         
                        int index66_73 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred89_ObjCpp()) ) {s = 4;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index66_73);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA66_74 = input.LA(1);

                         
                        int index66_74 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred89_ObjCpp()) ) {s = 4;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index66_74);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA66_75 = input.LA(1);

                         
                        int index66_75 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred89_ObjCpp()) ) {s = 4;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index66_75);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA66_76 = input.LA(1);

                         
                        int index66_76 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred89_ObjCpp()) ) {s = 4;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index66_76);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA66_79 = input.LA(1);

                         
                        int index66_79 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred89_ObjCpp()) ) {s = 4;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index66_79);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA66_80 = input.LA(1);

                         
                        int index66_80 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred89_ObjCpp()) ) {s = 4;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index66_80);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA66_81 = input.LA(1);

                         
                        int index66_81 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred89_ObjCpp()) ) {s = 4;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index66_81);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA66_82 = input.LA(1);

                         
                        int index66_82 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred89_ObjCpp()) ) {s = 4;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index66_82);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA66_86 = input.LA(1);

                         
                        int index66_86 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred89_ObjCpp()) ) {s = 4;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index66_86);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA66_89 = input.LA(1);

                         
                        int index66_89 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred89_ObjCpp()) ) {s = 4;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index66_89);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA66_90 = input.LA(1);

                         
                        int index66_90 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred89_ObjCpp()) ) {s = 4;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index66_90);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 66, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA68_eotS =
        "\27\uffff";
    static final String DFA68_eofS =
        "\2\uffff\1\1\24\uffff";
    static final String DFA68_minS =
        "\1\6\1\uffff\1\6\2\uffff\1\6\7\uffff\1\0\11\uffff";
    static final String DFA68_maxS =
        "\1\72\1\uffff\1\72\2\uffff\1\112\7\uffff\1\0\11\uffff";
    static final String DFA68_acceptS =
        "\1\uffff\1\2\11\uffff\1\1\13\uffff";
    static final String DFA68_specialS =
        "\15\uffff\1\0\11\uffff}>";
    static final String[] DFA68_transitionS = {
            "\1\2\33\uffff\1\1\20\uffff\2\1\5\uffff\1\1",
            "",
            "\1\13\24\uffff\3\1\4\uffff\1\5\1\1\17\uffff\2\13\1\1\4\uffff"+
            "\1\13",
            "",
            "",
            "\1\15\27\uffff\1\1\3\uffff\1\13\1\1\10\uffff\4\1\3\uffff\2"+
            "\13\5\uffff\1\13\1\uffff\17\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA68_eot = DFA.unpackEncodedString(DFA68_eotS);
    static final short[] DFA68_eof = DFA.unpackEncodedString(DFA68_eofS);
    static final char[] DFA68_min = DFA.unpackEncodedStringToUnsignedChars(DFA68_minS);
    static final char[] DFA68_max = DFA.unpackEncodedStringToUnsignedChars(DFA68_maxS);
    static final short[] DFA68_accept = DFA.unpackEncodedString(DFA68_acceptS);
    static final short[] DFA68_special = DFA.unpackEncodedString(DFA68_specialS);
    static final short[][] DFA68_transition;

    static {
        int numStates = DFA68_transitionS.length;
        DFA68_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA68_transition[i] = DFA.unpackEncodedString(DFA68_transitionS[i]);
        }
    }

    class DFA68 extends DFA {

        public DFA68(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 68;
            this.eot = DFA68_eot;
            this.eof = DFA68_eof;
            this.min = DFA68_min;
            this.max = DFA68_max;
            this.accept = DFA68_accept;
            this.special = DFA68_special;
            this.transition = DFA68_transition;
        }
        public String getDescription() {
            return "()* loopback of 894:3: ({...}? modifier )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA68_13 = input.LA(1);

                         
                        int index68_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (((synpred91_ObjCpp()&&( next(Modifier.Kind.TypeQualifier) ))&&( Modifier.parseModifier(next()) != null ))) ) {s = 11;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index68_13);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 68, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA70_eotS =
        "\25\uffff";
    static final String DFA70_eofS =
        "\1\2\24\uffff";
    static final String DFA70_minS =
        "\1\33\1\0\23\uffff";
    static final String DFA70_maxS =
        "\1\43\1\0\23\uffff";
    static final String DFA70_acceptS =
        "\2\uffff\1\2\21\uffff\1\1";
    static final String DFA70_specialS =
        "\1\uffff\1\0\23\uffff}>";
    static final String[] DFA70_transitionS = {
            "\2\2\1\1\5\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA70_eot = DFA.unpackEncodedString(DFA70_eotS);
    static final short[] DFA70_eof = DFA.unpackEncodedString(DFA70_eofS);
    static final char[] DFA70_min = DFA.unpackEncodedStringToUnsignedChars(DFA70_minS);
    static final char[] DFA70_max = DFA.unpackEncodedStringToUnsignedChars(DFA70_maxS);
    static final short[] DFA70_accept = DFA.unpackEncodedString(DFA70_acceptS);
    static final short[] DFA70_special = DFA.unpackEncodedString(DFA70_specialS);
    static final short[][] DFA70_transition;

    static {
        int numStates = DFA70_transitionS.length;
        DFA70_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA70_transition[i] = DFA.unpackEncodedString(DFA70_transitionS[i]);
        }
    }

    class DFA70 extends DFA {

        public DFA70(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 70;
            this.eot = DFA70_eot;
            this.eof = DFA70_eof;
            this.min = DFA70_min;
            this.max = DFA70_max;
            this.accept = DFA70_accept;
            this.special = DFA70_special;
            this.transition = DFA70_transition;
        }
        public String getDescription() {
            return "914:4: ( '=' expression )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA70_1 = input.LA(1);

                         
                        int index70_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_ObjCpp()) ) {s = 20;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index70_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 70, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA72_eotS =
        "\25\uffff";
    static final String DFA72_eofS =
        "\25\uffff";
    static final String DFA72_minS =
        "\1\6\2\uffff\1\0\21\uffff";
    static final String DFA72_maxS =
        "\1\112\2\uffff\1\0\21\uffff";
    static final String DFA72_acceptS =
        "\1\uffff\1\3\21\uffff\1\1\1\2";
    static final String DFA72_specialS =
        "\3\uffff\1\0\21\uffff}>";
    static final String[] DFA72_transitionS = {
            "\1\3\27\uffff\1\1\16\uffff\3\1\14\uffff\17\1",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA72_eot = DFA.unpackEncodedString(DFA72_eotS);
    static final short[] DFA72_eof = DFA.unpackEncodedString(DFA72_eofS);
    static final char[] DFA72_min = DFA.unpackEncodedStringToUnsignedChars(DFA72_minS);
    static final char[] DFA72_max = DFA.unpackEncodedStringToUnsignedChars(DFA72_maxS);
    static final short[] DFA72_accept = DFA.unpackEncodedString(DFA72_acceptS);
    static final short[] DFA72_special = DFA.unpackEncodedString(DFA72_specialS);
    static final short[][] DFA72_transition;

    static {
        int numStates = DFA72_transitionS.length;
        DFA72_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA72_transition[i] = DFA.unpackEncodedString(DFA72_transitionS[i]);
        }
    }

    class DFA72 extends DFA {

        public DFA72(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 72;
            this.eot = DFA72_eot;
            this.eof = DFA72_eof;
            this.min = DFA72_min;
            this.max = DFA72_max;
            this.accept = DFA72_accept;
            this.special = DFA72_special;
            this.transition = DFA72_transition;
        }
        public String getDescription() {
            return "()* loopback of 956:4: ({...}?sm= modifier | {...}?tm= modifier )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA72_3 = input.LA(1);

                         
                        int index72_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (((synpred97_ObjCpp()&&( next(Modifier.Kind.StorageClassSpecifier) ))&&( Modifier.parseModifier(next()) != null ))) ) {s = 19;}

                        else if ( (((synpred98_ObjCpp()&&( next(Modifier.Kind.TypeQualifier) ))&&( Modifier.parseModifier(next()) != null ))) ) {s = 20;}

                        else if ( ((( "__success".equals(next()) )||(( next(Modifier.Kind.ReferenceQualifier) )&&( Modifier.parseModifier(next()) != null ))||(( next(Modifier.Kind.TypeQualifier, Modifier.Kind.VCAnnotationNoArg) )&&( Modifier.parseModifier(next()) != null ))||(( next(Modifier.Kind.VCAnnotation1Arg) )&&( Modifier.parseModifier(next()) != null ))||(( next(Modifier.Kind.VCAnnotation2Args) )&&( Modifier.parseModifier(next()) != null ))||( Modifier.parseModifier(next()) == null ))) ) {s = 1;}

                         
                        input.seek(index72_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 72, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA77_eotS =
        "\13\uffff";
    static final String DFA77_eofS =
        "\13\uffff";
    static final String DFA77_minS =
        "\1\6\1\0\11\uffff";
    static final String DFA77_maxS =
        "\1\72\1\0\11\uffff";
    static final String DFA77_acceptS =
        "\2\uffff\1\2\7\uffff\1\1";
    static final String DFA77_specialS =
        "\1\uffff\1\0\11\uffff}>";
    static final String[] DFA77_transitionS = {
            "\1\1\33\uffff\1\2\20\uffff\2\2\5\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA77_eot = DFA.unpackEncodedString(DFA77_eotS);
    static final short[] DFA77_eof = DFA.unpackEncodedString(DFA77_eofS);
    static final char[] DFA77_min = DFA.unpackEncodedStringToUnsignedChars(DFA77_minS);
    static final char[] DFA77_max = DFA.unpackEncodedStringToUnsignedChars(DFA77_maxS);
    static final short[] DFA77_accept = DFA.unpackEncodedString(DFA77_acceptS);
    static final short[] DFA77_special = DFA.unpackEncodedString(DFA77_specialS);
    static final short[][] DFA77_transition;

    static {
        int numStates = DFA77_transitionS.length;
        DFA77_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA77_transition[i] = DFA.unpackEncodedString(DFA77_transitionS[i]);
        }
    }

    class DFA77 extends DFA {

        public DFA77(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 77;
            this.eot = DFA77_eot;
            this.eof = DFA77_eof;
            this.min = DFA77_min;
            this.max = DFA77_max;
            this.accept = DFA77_accept;
            this.special = DFA77_special;
            this.transition = DFA77_transition;
        }
        public String getDescription() {
            return "()* loopback of 1046:4: (im= modifier )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA77_1 = input.LA(1);

                         
                        int index77_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred104_ObjCpp()&&( Modifier.parseModifier(next()) != null ))) ) {s = 10;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index77_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 77, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA79_eotS =
        "\20\uffff";
    static final String DFA79_eofS =
        "\20\uffff";
    static final String DFA79_minS =
        "\1\4\17\uffff";
    static final String DFA79_maxS =
        "\1\150\17\uffff";
    static final String DFA79_acceptS =
        "\1\uffff\1\1\15\uffff\1\2";
    static final String DFA79_specialS =
        "\20\uffff}>";
    static final String[] DFA79_transitionS = {
            "\7\1\24\uffff\1\1\2\uffff\1\1\10\uffff\1\1\7\uffff\3\1\1\17"+
            "\40\uffff\2\1\13\uffff\5\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA79_eot = DFA.unpackEncodedString(DFA79_eotS);
    static final short[] DFA79_eof = DFA.unpackEncodedString(DFA79_eofS);
    static final char[] DFA79_min = DFA.unpackEncodedStringToUnsignedChars(DFA79_minS);
    static final char[] DFA79_max = DFA.unpackEncodedStringToUnsignedChars(DFA79_maxS);
    static final short[] DFA79_accept = DFA.unpackEncodedString(DFA79_acceptS);
    static final short[] DFA79_special = DFA.unpackEncodedString(DFA79_specialS);
    static final short[][] DFA79_transition;

    static {
        int numStates = DFA79_transitionS.length;
        DFA79_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA79_transition[i] = DFA.unpackEncodedString(DFA79_transitionS[i]);
        }
    }

    class DFA79 extends DFA {

        public DFA79(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 79;
            this.eot = DFA79_eot;
            this.eof = DFA79_eof;
            this.min = DFA79_min;
            this.max = DFA79_max;
            this.accept = DFA79_accept;
            this.special = DFA79_special;
            this.transition = DFA79_transition;
        }
        public String getDescription() {
            return "1058:4: ( expression | )";
        }
    }
    static final String DFA81_eotS =
        "\14\uffff";
    static final String DFA81_eofS =
        "\14\uffff";
    static final String DFA81_minS =
        "\1\33\1\6\1\uffff\1\0\10\uffff";
    static final String DFA81_maxS =
        "\1\43\1\112\1\uffff\1\0\10\uffff";
    static final String DFA81_acceptS =
        "\2\uffff\1\2\1\uffff\1\1\7\uffff";
    static final String DFA81_specialS =
        "\3\uffff\1\0\10\uffff}>";
    static final String[] DFA81_transitionS = {
            "\1\1\7\uffff\1\2",
            "\1\4\27\uffff\1\4\15\uffff\1\3\3\4\14\uffff\17\4",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA81_eot = DFA.unpackEncodedString(DFA81_eotS);
    static final short[] DFA81_eof = DFA.unpackEncodedString(DFA81_eofS);
    static final char[] DFA81_min = DFA.unpackEncodedStringToUnsignedChars(DFA81_minS);
    static final char[] DFA81_max = DFA.unpackEncodedStringToUnsignedChars(DFA81_maxS);
    static final short[] DFA81_accept = DFA.unpackEncodedString(DFA81_acceptS);
    static final short[] DFA81_special = DFA.unpackEncodedString(DFA81_specialS);
    static final short[][] DFA81_transition;

    static {
        int numStates = DFA81_transitionS.length;
        DFA81_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA81_transition[i] = DFA.unpackEncodedString(DFA81_transitionS[i]);
        }
    }

    class DFA81 extends DFA {

        public DFA81(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 81;
            this.eot = DFA81_eot;
            this.eof = DFA81_eof;
            this.min = DFA81_min;
            this.max = DFA81_max;
            this.accept = DFA81_accept;
            this.special = DFA81_special;
            this.transition = DFA81_transition;
        }
        public String getDescription() {
            return "()* loopback of 1086:4: ( ',' ax= argDef )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA81_3 = input.LA(1);

                         
                        int index81_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred108_ObjCpp()) ) {s = 4;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index81_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 81, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA84_eotS =
        "\61\uffff";
    static final String DFA84_eofS =
        "\1\1\60\uffff";
    static final String DFA84_minS =
        "\1\6\2\uffff\2\0\4\uffff\1\0\1\uffff\1\0\45\uffff";
    static final String DFA84_maxS =
        "\1\72\2\uffff\2\0\4\uffff\1\0\1\uffff\1\0\45\uffff";
    static final String DFA84_acceptS =
        "\1\uffff\1\2\25\uffff\1\1\31\uffff";
    static final String DFA84_specialS =
        "\3\uffff\1\0\1\1\4\uffff\1\2\1\uffff\1\3\45\uffff}>";
    static final String[] DFA84_transitionS = {
            "\1\3\24\uffff\3\1\4\uffff\2\1\1\uffff\1\1\15\uffff\1\4\1\11"+
            "\1\13\4\uffff\1\1",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA84_eot = DFA.unpackEncodedString(DFA84_eotS);
    static final short[] DFA84_eof = DFA.unpackEncodedString(DFA84_eofS);
    static final char[] DFA84_min = DFA.unpackEncodedStringToUnsignedChars(DFA84_minS);
    static final char[] DFA84_max = DFA.unpackEncodedStringToUnsignedChars(DFA84_maxS);
    static final short[] DFA84_accept = DFA.unpackEncodedString(DFA84_acceptS);
    static final short[] DFA84_special = DFA.unpackEncodedString(DFA84_specialS);
    static final short[][] DFA84_transition;

    static {
        int numStates = DFA84_transitionS.length;
        DFA84_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA84_transition[i] = DFA.unpackEncodedString(DFA84_transitionS[i]);
        }
    }

    class DFA84 extends DFA {

        public DFA84(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 84;
            this.eot = DFA84_eot;
            this.eof = DFA84_eof;
            this.min = DFA84_min;
            this.max = DFA84_max;
            this.accept = DFA84_accept;
            this.special = DFA84_special;
            this.transition = DFA84_transition;
        }
        public String getDescription() {
            return "()* loopback of 1107:3: ( typeMutator )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA84_3 = input.LA(1);

                         
                        int index84_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred111_ObjCpp()&&( next("const", "__const") ))) ) {s = 23;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index84_3);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA84_4 = input.LA(1);

                         
                        int index84_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred111_ObjCpp()) ) {s = 23;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index84_4);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA84_9 = input.LA(1);

                         
                        int index84_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred111_ObjCpp()) ) {s = 23;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index84_9);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA84_11 = input.LA(1);

                         
                        int index84_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred111_ObjCpp()) ) {s = 23;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index84_11);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 84, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA87_eotS =
        "\21\uffff";
    static final String DFA87_eofS =
        "\1\uffff\1\2\17\uffff";
    static final String DFA87_minS =
        "\1\100\1\6\17\uffff";
    static final String DFA87_maxS =
        "\2\112\17\uffff";
    static final String DFA87_acceptS =
        "\2\uffff\1\2\14\uffff\1\1\1\uffff";
    static final String DFA87_specialS =
        "\21\uffff}>";
    static final String[] DFA87_transitionS = {
            "\2\1\11\2",
            "\1\2\24\uffff\3\2\4\uffff\2\2\1\uffff\1\2\15\uffff\3\2\4\uffff"+
            "\1\2\5\uffff\13\17",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA87_eot = DFA.unpackEncodedString(DFA87_eotS);
    static final short[] DFA87_eof = DFA.unpackEncodedString(DFA87_eofS);
    static final char[] DFA87_min = DFA.unpackEncodedStringToUnsignedChars(DFA87_minS);
    static final char[] DFA87_max = DFA.unpackEncodedStringToUnsignedChars(DFA87_maxS);
    static final short[] DFA87_accept = DFA.unpackEncodedString(DFA87_acceptS);
    static final short[] DFA87_special = DFA.unpackEncodedString(DFA87_specialS);
    static final short[][] DFA87_transition;

    static {
        int numStates = DFA87_transitionS.length;
        DFA87_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA87_transition[i] = DFA.unpackEncodedString(DFA87_transitionS[i]);
        }
    }

    class DFA87 extends DFA {

        public DFA87(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 87;
            this.eot = DFA87_eot;
            this.eof = DFA87_eof;
            this.min = DFA87_min;
            this.max = DFA87_max;
            this.accept = DFA87_accept;
            this.special = DFA87_special;
            this.transition = DFA87_transition;
        }
        public String getDescription() {
            return "1140:4: (mod2= primSizeModifier (mod3= primSizeModifier )? )?";
        }
    }
    static final String DFA86_eotS =
        "\20\uffff";
    static final String DFA86_eofS =
        "\1\uffff\1\2\16\uffff";
    static final String DFA86_minS =
        "\1\100\1\6\16\uffff";
    static final String DFA86_maxS =
        "\2\112\16\uffff";
    static final String DFA86_acceptS =
        "\2\uffff\1\2\1\1\14\uffff";
    static final String DFA86_specialS =
        "\20\uffff}>";
    static final String[] DFA86_transitionS = {
            "\2\1\11\2",
            "\1\2\24\uffff\3\2\4\uffff\2\2\1\uffff\1\2\15\uffff\3\2\4\uffff"+
            "\1\2\5\uffff\13\3",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA86_eot = DFA.unpackEncodedString(DFA86_eotS);
    static final short[] DFA86_eof = DFA.unpackEncodedString(DFA86_eofS);
    static final char[] DFA86_min = DFA.unpackEncodedStringToUnsignedChars(DFA86_minS);
    static final char[] DFA86_max = DFA.unpackEncodedStringToUnsignedChars(DFA86_maxS);
    static final short[] DFA86_accept = DFA.unpackEncodedString(DFA86_acceptS);
    static final short[] DFA86_special = DFA.unpackEncodedString(DFA86_specialS);
    static final short[][] DFA86_transition;

    static {
        int numStates = DFA86_transitionS.length;
        DFA86_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA86_transition[i] = DFA.unpackEncodedString(DFA86_transitionS[i]);
        }
    }

    class DFA86 extends DFA {

        public DFA86(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 86;
            this.eot = DFA86_eot;
            this.eof = DFA86_eof;
            this.min = DFA86_min;
            this.max = DFA86_max;
            this.accept = DFA86_accept;
            this.special = DFA86_special;
            this.transition = DFA86_transition;
        }
        public String getDescription() {
            return "1141:8: (mod3= primSizeModifier )?";
        }
    }
    static final String DFA91_eotS =
        "\20\uffff";
    static final String DFA91_eofS =
        "\20\uffff";
    static final String DFA91_minS =
        "\1\4\17\uffff";
    static final String DFA91_maxS =
        "\1\150\17\uffff";
    static final String DFA91_acceptS =
        "\1\uffff\1\1\15\uffff\1\2";
    static final String DFA91_specialS =
        "\20\uffff}>";
    static final String[] DFA91_transitionS = {
            "\7\1\24\uffff\1\1\2\uffff\1\1\1\17\7\uffff\1\1\7\uffff\3\1\41"+
            "\uffff\2\1\13\uffff\5\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA91_eot = DFA.unpackEncodedString(DFA91_eotS);
    static final short[] DFA91_eof = DFA.unpackEncodedString(DFA91_eofS);
    static final char[] DFA91_min = DFA.unpackEncodedStringToUnsignedChars(DFA91_minS);
    static final char[] DFA91_max = DFA.unpackEncodedStringToUnsignedChars(DFA91_maxS);
    static final short[] DFA91_accept = DFA.unpackEncodedString(DFA91_acceptS);
    static final short[] DFA91_special = DFA.unpackEncodedString(DFA91_specialS);
    static final short[][] DFA91_transition;

    static {
        int numStates = DFA91_transitionS.length;
        DFA91_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA91_transition[i] = DFA.unpackEncodedString(DFA91_transitionS[i]);
        }
    }

    class DFA91 extends DFA {

        public DFA91(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 91;
            this.eot = DFA91_eot;
            this.eof = DFA91_eof;
            this.min = DFA91_min;
            this.max = DFA91_max;
            this.accept = DFA91_accept;
            this.special = DFA91_special;
            this.transition = DFA91_transition;
        }
        public String getDescription() {
            return "1208:3: (a1= expression ( ',' ax= expression )* )?";
        }
    }
    static final String DFA92_eotS =
        "\15\uffff";
    static final String DFA92_eofS =
        "\15\uffff";
    static final String DFA92_minS =
        "\1\4\14\uffff";
    static final String DFA92_maxS =
        "\1\130\14\uffff";
    static final String DFA92_acceptS =
        "\1\uffff\1\1\1\2\5\uffff\1\3\1\4\1\5\1\6\1\7";
    static final String DFA92_specialS =
        "\15\uffff}>";
    static final String[] DFA92_transitionS = {
            "\2\2\1\1\4\2\24\uffff\1\13\2\uffff\1\10\22\uffff\1\11\41\uffff"+
            "\1\12\1\14",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA92_eot = DFA.unpackEncodedString(DFA92_eotS);
    static final short[] DFA92_eof = DFA.unpackEncodedString(DFA92_eofS);
    static final char[] DFA92_min = DFA.unpackEncodedStringToUnsignedChars(DFA92_minS);
    static final char[] DFA92_max = DFA.unpackEncodedStringToUnsignedChars(DFA92_maxS);
    static final short[] DFA92_accept = DFA.unpackEncodedString(DFA92_acceptS);
    static final short[] DFA92_special = DFA.unpackEncodedString(DFA92_specialS);
    static final short[][] DFA92_transition;

    static {
        int numStates = DFA92_transitionS.length;
        DFA92_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA92_transition[i] = DFA.unpackEncodedString(DFA92_transitionS[i]);
        }
    }

    class DFA92 extends DFA {

        public DFA92(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 92;
            this.eot = DFA92_eot;
            this.eof = DFA92_eof;
            this.min = DFA92_min;
            this.max = DFA92_max;
            this.accept = DFA92_accept;
            this.special = DFA92_special;
            this.transition = DFA92_transition;
        }
        public String getDescription() {
            return "1282:1: baseExpression returns [Expression expr] : ( IDENTIFIER | constant | '(' expression ')' | messageExpr | selectorExpr | protocolExpr | encodingExpr );";
        }
    }
    static final String DFA99_eotS =
        "\u0116\uffff";
    static final String DFA99_eofS =
        "\1\2\u0115\uffff";
    static final String DFA99_minS =
        "\1\6\1\4\11\uffff\1\4\7\0\1\4\3\42\2\4\23\0\u00bd\uffff\55\0";
    static final String DFA99_maxS =
        "\1\142\1\150\11\uffff\1\150\7\0\1\150\3\42\2\150\23\0\u00bd\uffff"+
        "\55\0";
    static final String DFA99_acceptS =
        "\2\uffff\1\2\4\uffff\1\1\u010e\uffff";
    static final String DFA99_specialS =
        "\14\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\6\uffff\1\7\1\10\1\11\1\12"+
        "\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27"+
        "\1\30\1\31\u00bd\uffff\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1"+
        "\42\1\43\1\44\1\45\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56"+
        "\1\57\1\60\1\61\1\62\1\63\1\64\1\65\1\66\1\67\1\70\1\71\1\72\1\73"+
        "\1\74\1\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\1\106}>";
    static final String[] DFA99_transitionS = {
            "\1\2\21\uffff\1\2\2\uffff\2\2\1\1\3\uffff\1\2\1\uffff\1\2\22"+
            "\uffff\1\2\42\uffff\12\7",
            "\1\15\1\22\1\14\1\16\1\17\1\20\1\21\24\uffff\1\25\2\uffff\1"+
            "\13\10\uffff\1\27\7\uffff\2\27\1\23\41\uffff\1\24\1\26\13\uffff"+
            "\1\30\4\27",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\33\1\40\1\32\1\34\1\35\1\36\1\37\23\uffff\1\50\1\43\2\uffff"+
            "\1\31\10\uffff\1\45\1\uffff\3\47\3\uffff\2\45\1\41\6\uffff\4"+
            "\51\2\52\11\53\14\uffff\1\42\1\44\13\uffff\1\46\4\45",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\u00eb\1\u00f0\1\u00ea\1\u00ec\1\u00ed\1\u00ee\1\u00ef\24"+
            "\uffff\1\u00f3\2\uffff\1\u00e9\10\uffff\1\u00f5\7\uffff\2\u00f5"+
            "\1\u00f1\41\uffff\1\u00f2\1\u00f4\13\uffff\1\u00f6\4\u00f5",
            "\1\u00f7",
            "\1\u00f8",
            "\1\u00f9",
            "\1\u00fc\1\u0101\1\u00fb\1\u00fd\1\u00fe\1\u00ff\1\u0100\24"+
            "\uffff\1\u0104\2\uffff\1\u00fa\10\uffff\1\u0106\7\uffff\2\u0106"+
            "\1\u0102\41\uffff\1\u0103\1\u0105\13\uffff\1\u0107\4\u0106",
            "\1\u010a\1\u010f\1\u0109\1\u010b\1\u010c\1\u010d\1\u010e\24"+
            "\uffff\1\u0112\2\uffff\1\u0108\10\uffff\1\u0114\7\uffff\2\u0114"+
            "\1\u0110\41\uffff\1\u0111\1\u0113\13\uffff\1\u0115\4\u0114",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff"
    };

    static final short[] DFA99_eot = DFA.unpackEncodedString(DFA99_eotS);
    static final short[] DFA99_eof = DFA.unpackEncodedString(DFA99_eofS);
    static final char[] DFA99_min = DFA.unpackEncodedStringToUnsignedChars(DFA99_minS);
    static final char[] DFA99_max = DFA.unpackEncodedStringToUnsignedChars(DFA99_maxS);
    static final short[] DFA99_accept = DFA.unpackEncodedString(DFA99_acceptS);
    static final short[] DFA99_special = DFA.unpackEncodedString(DFA99_specialS);
    static final short[][] DFA99_transition;

    static {
        int numStates = DFA99_transitionS.length;
        DFA99_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA99_transition[i] = DFA.unpackEncodedString(DFA99_transitionS[i]);
        }
    }

    class DFA99 extends DFA {

        public DFA99(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 99;
            this.eot = DFA99_eot;
            this.eof = DFA99_eof;
            this.min = DFA99_min;
            this.max = DFA99_max;
            this.accept = DFA99_accept;
            this.special = DFA99_special;
            this.transition = DFA99_transition;
        }
        public String getDescription() {
            return "1336:3: (op= assignmentOp f= assignmentExpr )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA99_12 = input.LA(1);

                         
                        int index99_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 7;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index99_12);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA99_13 = input.LA(1);

                         
                        int index99_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 7;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index99_13);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA99_14 = input.LA(1);

                         
                        int index99_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 7;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index99_14);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA99_15 = input.LA(1);

                         
                        int index99_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 7;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index99_15);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA99_16 = input.LA(1);

                         
                        int index99_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 7;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index99_16);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA99_17 = input.LA(1);

                         
                        int index99_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 7;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index99_17);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA99_18 = input.LA(1);

                         
                        int index99_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 7;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index99_18);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA99_25 = input.LA(1);

                         
                        int index99_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 7;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index99_25);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA99_26 = input.LA(1);

                         
                        int index99_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 7;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index99_26);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA99_27 = input.LA(1);

                         
                        int index99_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 7;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index99_27);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA99_28 = input.LA(1);

                         
                        int index99_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 7;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index99_28);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA99_29 = input.LA(1);

                         
                        int index99_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 7;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index99_29);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA99_30 = input.LA(1);

                         
                        int index99_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 7;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index99_30);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA99_31 = input.LA(1);

                         
                        int index99_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 7;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index99_31);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA99_32 = input.LA(1);

                         
                        int index99_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 7;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index99_32);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA99_33 = input.LA(1);

                         
                        int index99_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 7;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index99_33);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA99_34 = input.LA(1);

                         
                        int index99_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 7;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index99_34);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA99_35 = input.LA(1);

                         
                        int index99_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 7;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index99_35);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA99_36 = input.LA(1);

                         
                        int index99_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 7;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index99_36);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA99_37 = input.LA(1);

                         
                        int index99_37 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 7;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index99_37);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA99_38 = input.LA(1);

                         
                        int index99_38 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 7;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index99_38);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA99_39 = input.LA(1);

                         
                        int index99_39 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 7;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index99_39);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA99_40 = input.LA(1);

                         
                        int index99_40 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 7;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index99_40);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA99_41 = input.LA(1);

                         
                        int index99_41 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 7;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index99_41);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA99_42 = input.LA(1);

                         
                        int index99_42 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 7;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index99_42);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA99_43 = input.LA(1);

                         
                        int index99_43 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 7;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index99_43);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA99_233 = input.LA(1);

                         
                        int index99_233 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 7;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index99_233);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA99_234 = input.LA(1);

                         
                        int index99_234 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 7;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index99_234);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA99_235 = input.LA(1);

                         
                        int index99_235 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 7;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index99_235);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA99_236 = input.LA(1);

                         
                        int index99_236 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 7;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index99_236);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA99_237 = input.LA(1);

                         
                        int index99_237 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 7;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index99_237);
                        if ( s>=0 ) return s;
                        break;
                    case 31 : 
                        int LA99_238 = input.LA(1);

                         
                        int index99_238 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 7;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index99_238);
                        if ( s>=0 ) return s;
                        break;
                    case 32 : 
                        int LA99_239 = input.LA(1);

                         
                        int index99_239 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 7;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index99_239);
                        if ( s>=0 ) return s;
                        break;
                    case 33 : 
                        int LA99_240 = input.LA(1);

                         
                        int index99_240 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 7;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index99_240);
                        if ( s>=0 ) return s;
                        break;
                    case 34 : 
                        int LA99_241 = input.LA(1);

                         
                        int index99_241 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 7;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index99_241);
                        if ( s>=0 ) return s;
                        break;
                    case 35 : 
                        int LA99_242 = input.LA(1);

                         
                        int index99_242 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 7;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index99_242);
                        if ( s>=0 ) return s;
                        break;
                    case 36 : 
                        int LA99_243 = input.LA(1);

                         
                        int index99_243 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 7;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index99_243);
                        if ( s>=0 ) return s;
                        break;
                    case 37 : 
                        int LA99_244 = input.LA(1);

                         
                        int index99_244 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 7;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index99_244);
                        if ( s>=0 ) return s;
                        break;
                    case 38 : 
                        int LA99_245 = input.LA(1);

                         
                        int index99_245 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 7;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index99_245);
                        if ( s>=0 ) return s;
                        break;
                    case 39 : 
                        int LA99_246 = input.LA(1);

                         
                        int index99_246 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 7;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index99_246);
                        if ( s>=0 ) return s;
                        break;
                    case 40 : 
                        int LA99_247 = input.LA(1);

                         
                        int index99_247 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 7;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index99_247);
                        if ( s>=0 ) return s;
                        break;
                    case 41 : 
                        int LA99_248 = input.LA(1);

                         
                        int index99_248 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 7;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index99_248);
                        if ( s>=0 ) return s;
                        break;
                    case 42 : 
                        int LA99_249 = input.LA(1);

                         
                        int index99_249 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 7;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index99_249);
                        if ( s>=0 ) return s;
                        break;
                    case 43 : 
                        int LA99_250 = input.LA(1);

                         
                        int index99_250 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 7;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index99_250);
                        if ( s>=0 ) return s;
                        break;
                    case 44 : 
                        int LA99_251 = input.LA(1);

                         
                        int index99_251 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 7;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index99_251);
                        if ( s>=0 ) return s;
                        break;
                    case 45 : 
                        int LA99_252 = input.LA(1);

                         
                        int index99_252 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 7;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index99_252);
                        if ( s>=0 ) return s;
                        break;
                    case 46 : 
                        int LA99_253 = input.LA(1);

                         
                        int index99_253 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 7;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index99_253);
                        if ( s>=0 ) return s;
                        break;
                    case 47 : 
                        int LA99_254 = input.LA(1);

                         
                        int index99_254 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 7;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index99_254);
                        if ( s>=0 ) return s;
                        break;
                    case 48 : 
                        int LA99_255 = input.LA(1);

                         
                        int index99_255 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 7;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index99_255);
                        if ( s>=0 ) return s;
                        break;
                    case 49 : 
                        int LA99_256 = input.LA(1);

                         
                        int index99_256 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 7;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index99_256);
                        if ( s>=0 ) return s;
                        break;
                    case 50 : 
                        int LA99_257 = input.LA(1);

                         
                        int index99_257 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 7;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index99_257);
                        if ( s>=0 ) return s;
                        break;
                    case 51 : 
                        int LA99_258 = input.LA(1);

                         
                        int index99_258 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 7;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index99_258);
                        if ( s>=0 ) return s;
                        break;
                    case 52 : 
                        int LA99_259 = input.LA(1);

                         
                        int index99_259 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 7;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index99_259);
                        if ( s>=0 ) return s;
                        break;
                    case 53 : 
                        int LA99_260 = input.LA(1);

                         
                        int index99_260 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 7;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index99_260);
                        if ( s>=0 ) return s;
                        break;
                    case 54 : 
                        int LA99_261 = input.LA(1);

                         
                        int index99_261 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 7;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index99_261);
                        if ( s>=0 ) return s;
                        break;
                    case 55 : 
                        int LA99_262 = input.LA(1);

                         
                        int index99_262 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 7;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index99_262);
                        if ( s>=0 ) return s;
                        break;
                    case 56 : 
                        int LA99_263 = input.LA(1);

                         
                        int index99_263 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 7;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index99_263);
                        if ( s>=0 ) return s;
                        break;
                    case 57 : 
                        int LA99_264 = input.LA(1);

                         
                        int index99_264 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 7;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index99_264);
                        if ( s>=0 ) return s;
                        break;
                    case 58 : 
                        int LA99_265 = input.LA(1);

                         
                        int index99_265 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 7;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index99_265);
                        if ( s>=0 ) return s;
                        break;
                    case 59 : 
                        int LA99_266 = input.LA(1);

                         
                        int index99_266 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 7;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index99_266);
                        if ( s>=0 ) return s;
                        break;
                    case 60 : 
                        int LA99_267 = input.LA(1);

                         
                        int index99_267 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 7;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index99_267);
                        if ( s>=0 ) return s;
                        break;
                    case 61 : 
                        int LA99_268 = input.LA(1);

                         
                        int index99_268 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 7;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index99_268);
                        if ( s>=0 ) return s;
                        break;
                    case 62 : 
                        int LA99_269 = input.LA(1);

                         
                        int index99_269 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 7;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index99_269);
                        if ( s>=0 ) return s;
                        break;
                    case 63 : 
                        int LA99_270 = input.LA(1);

                         
                        int index99_270 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 7;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index99_270);
                        if ( s>=0 ) return s;
                        break;
                    case 64 : 
                        int LA99_271 = input.LA(1);

                         
                        int index99_271 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 7;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index99_271);
                        if ( s>=0 ) return s;
                        break;
                    case 65 : 
                        int LA99_272 = input.LA(1);

                         
                        int index99_272 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 7;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index99_272);
                        if ( s>=0 ) return s;
                        break;
                    case 66 : 
                        int LA99_273 = input.LA(1);

                         
                        int index99_273 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 7;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index99_273);
                        if ( s>=0 ) return s;
                        break;
                    case 67 : 
                        int LA99_274 = input.LA(1);

                         
                        int index99_274 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 7;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index99_274);
                        if ( s>=0 ) return s;
                        break;
                    case 68 : 
                        int LA99_275 = input.LA(1);

                         
                        int index99_275 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 7;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index99_275);
                        if ( s>=0 ) return s;
                        break;
                    case 69 : 
                        int LA99_276 = input.LA(1);

                         
                        int index99_276 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 7;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index99_276);
                        if ( s>=0 ) return s;
                        break;
                    case 70 : 
                        int LA99_277 = input.LA(1);

                         
                        int index99_277 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_ObjCpp()) ) {s = 7;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index99_277);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 99, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA100_eotS =
        "\14\uffff";
    static final String DFA100_eofS =
        "\1\1\13\uffff";
    static final String DFA100_minS =
        "\1\6\13\uffff";
    static final String DFA100_maxS =
        "\1\143\13\uffff";
    static final String DFA100_acceptS =
        "\1\uffff\1\2\11\uffff\1\1";
    static final String DFA100_specialS =
        "\14\uffff}>";
    static final String[] DFA100_transitionS = {
            "\1\1\21\uffff\1\1\2\uffff\3\1\3\uffff\1\1\1\uffff\1\1\22\uffff"+
            "\1\1\42\uffff\12\1\1\13",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA100_eot = DFA.unpackEncodedString(DFA100_eotS);
    static final short[] DFA100_eof = DFA.unpackEncodedString(DFA100_eofS);
    static final char[] DFA100_min = DFA.unpackEncodedStringToUnsignedChars(DFA100_minS);
    static final char[] DFA100_max = DFA.unpackEncodedStringToUnsignedChars(DFA100_maxS);
    static final short[] DFA100_accept = DFA.unpackEncodedString(DFA100_acceptS);
    static final short[] DFA100_special = DFA.unpackEncodedString(DFA100_specialS);
    static final short[][] DFA100_transition;

    static {
        int numStates = DFA100_transitionS.length;
        DFA100_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA100_transition[i] = DFA.unpackEncodedString(DFA100_transitionS[i]);
        }
    }

    class DFA100 extends DFA {

        public DFA100(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 100;
            this.eot = DFA100_eot;
            this.eof = DFA100_eof;
            this.min = DFA100_min;
            this.max = DFA100_max;
            this.accept = DFA100_accept;
            this.special = DFA100_special;
            this.transition = DFA100_transition;
        }
        public String getDescription() {
            return "()* loopback of 1349:3: ( '?' logOrExpr ':' logOrExpr )*";
        }
    }
    static final String DFA101_eotS =
        "\25\uffff";
    static final String DFA101_eofS =
        "\1\1\24\uffff";
    static final String DFA101_minS =
        "\1\6\24\uffff";
    static final String DFA101_maxS =
        "\1\143\24\uffff";
    static final String DFA101_acceptS =
        "\1\uffff\1\2\22\uffff\1\1";
    static final String DFA101_specialS =
        "\25\uffff}>";
    static final String[] DFA101_transitionS = {
            "\1\1\21\uffff\1\1\2\uffff\3\1\3\uffff\1\1\1\uffff\3\1\4\uffff"+
            "\2\24\10\uffff\1\1\1\uffff\1\1\3\uffff\1\1\22\uffff\1\1\1\uffff"+
            "\10\1\2\uffff\13\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA101_eot = DFA.unpackEncodedString(DFA101_eotS);
    static final short[] DFA101_eof = DFA.unpackEncodedString(DFA101_eofS);
    static final char[] DFA101_min = DFA.unpackEncodedStringToUnsignedChars(DFA101_minS);
    static final char[] DFA101_max = DFA.unpackEncodedStringToUnsignedChars(DFA101_maxS);
    static final short[] DFA101_accept = DFA.unpackEncodedString(DFA101_acceptS);
    static final short[] DFA101_special = DFA.unpackEncodedString(DFA101_specialS);
    static final short[][] DFA101_transition;

    static {
        int numStates = DFA101_transitionS.length;
        DFA101_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA101_transition[i] = DFA.unpackEncodedString(DFA101_transitionS[i]);
        }
    }

    class DFA101 extends DFA {

        public DFA101(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 101;
            this.eot = DFA101_eot;
            this.eof = DFA101_eof;
            this.min = DFA101_min;
            this.max = DFA101_max;
            this.accept = DFA101_accept;
            this.special = DFA101_special;
            this.transition = DFA101_transition;
        }
        public String getDescription() {
            return "()* loopback of 1359:3: (op= ( '+' | '-' ) f= multExpr )*";
        }
    }
    static final String DFA102_eotS =
        "\26\uffff";
    static final String DFA102_eofS =
        "\1\1\25\uffff";
    static final String DFA102_minS =
        "\1\6\25\uffff";
    static final String DFA102_maxS =
        "\1\143\25\uffff";
    static final String DFA102_acceptS =
        "\1\uffff\1\2\23\uffff\1\1";
    static final String DFA102_specialS =
        "\26\uffff}>";
    static final String[] DFA102_transitionS = {
            "\1\1\21\uffff\1\1\2\uffff\3\1\3\uffff\1\1\1\uffff\3\1\4\uffff"+
            "\2\1\7\uffff\1\25\1\1\1\uffff\1\1\3\uffff\1\1\20\uffff\2\25"+
            "\1\1\1\uffff\10\1\2\uffff\13\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA102_eot = DFA.unpackEncodedString(DFA102_eotS);
    static final short[] DFA102_eof = DFA.unpackEncodedString(DFA102_eofS);
    static final char[] DFA102_min = DFA.unpackEncodedStringToUnsignedChars(DFA102_minS);
    static final char[] DFA102_max = DFA.unpackEncodedStringToUnsignedChars(DFA102_maxS);
    static final short[] DFA102_accept = DFA.unpackEncodedString(DFA102_acceptS);
    static final short[] DFA102_special = DFA.unpackEncodedString(DFA102_specialS);
    static final short[][] DFA102_transition;

    static {
        int numStates = DFA102_transitionS.length;
        DFA102_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA102_transition[i] = DFA.unpackEncodedString(DFA102_transitionS[i]);
        }
    }

    class DFA102 extends DFA {

        public DFA102(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 102;
            this.eot = DFA102_eot;
            this.eof = DFA102_eof;
            this.min = DFA102_min;
            this.max = DFA102_max;
            this.accept = DFA102_accept;
            this.special = DFA102_special;
            this.transition = DFA102_transition;
        }
        public String getDescription() {
            return "()* loopback of 1367:3: (op= ( '%' | '*' | '/' ) f= castExpr )*";
        }
    }
    static final String DFA103_eotS =
        "\17\uffff";
    static final String DFA103_eofS =
        "\1\1\16\uffff";
    static final String DFA103_minS =
        "\1\6\16\uffff";
    static final String DFA103_maxS =
        "\1\143\16\uffff";
    static final String DFA103_acceptS =
        "\1\uffff\1\2\14\uffff\1\1";
    static final String DFA103_specialS =
        "\17\uffff}>";
    static final String[] DFA103_transitionS = {
            "\1\1\21\uffff\1\1\2\uffff\3\1\3\uffff\1\1\1\uffff\1\1\22\uffff"+
            "\1\1\31\uffff\1\1\1\16\1\1\6\uffff\13\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA103_eot = DFA.unpackEncodedString(DFA103_eotS);
    static final short[] DFA103_eof = DFA.unpackEncodedString(DFA103_eofS);
    static final char[] DFA103_min = DFA.unpackEncodedStringToUnsignedChars(DFA103_minS);
    static final char[] DFA103_max = DFA.unpackEncodedStringToUnsignedChars(DFA103_maxS);
    static final short[] DFA103_accept = DFA.unpackEncodedString(DFA103_acceptS);
    static final short[] DFA103_special = DFA.unpackEncodedString(DFA103_specialS);
    static final short[][] DFA103_transition;

    static {
        int numStates = DFA103_transitionS.length;
        DFA103_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA103_transition[i] = DFA.unpackEncodedString(DFA103_transitionS[i]);
        }
    }

    class DFA103 extends DFA {

        public DFA103(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 103;
            this.eot = DFA103_eot;
            this.eof = DFA103_eof;
            this.min = DFA103_min;
            this.max = DFA103_max;
            this.accept = DFA103_accept;
            this.special = DFA103_special;
            this.transition = DFA103_transition;
        }
        public String getDescription() {
            return "()* loopback of 1375:3: (op= '|' f= xorExpr )*";
        }
    }
    static final String DFA104_eotS =
        "\21\uffff";
    static final String DFA104_eofS =
        "\1\1\20\uffff";
    static final String DFA104_minS =
        "\1\6\20\uffff";
    static final String DFA104_maxS =
        "\1\143\20\uffff";
    static final String DFA104_acceptS =
        "\1\uffff\1\2\16\uffff\1\1";
    static final String DFA104_specialS =
        "\21\uffff}>";
    static final String[] DFA104_transitionS = {
            "\1\1\21\uffff\1\1\2\uffff\3\1\3\uffff\1\1\1\uffff\1\1\20\uffff"+
            "\1\20\1\uffff\1\1\3\uffff\1\1\25\uffff\3\1\6\uffff\13\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA104_eot = DFA.unpackEncodedString(DFA104_eotS);
    static final short[] DFA104_eof = DFA.unpackEncodedString(DFA104_eofS);
    static final char[] DFA104_min = DFA.unpackEncodedStringToUnsignedChars(DFA104_minS);
    static final char[] DFA104_max = DFA.unpackEncodedStringToUnsignedChars(DFA104_maxS);
    static final short[] DFA104_accept = DFA.unpackEncodedString(DFA104_acceptS);
    static final short[] DFA104_special = DFA.unpackEncodedString(DFA104_specialS);
    static final short[][] DFA104_transition;

    static {
        int numStates = DFA104_transitionS.length;
        DFA104_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA104_transition[i] = DFA.unpackEncodedString(DFA104_transitionS[i]);
        }
    }

    class DFA104 extends DFA {

        public DFA104(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 104;
            this.eot = DFA104_eot;
            this.eof = DFA104_eof;
            this.min = DFA104_min;
            this.max = DFA104_max;
            this.accept = DFA104_accept;
            this.special = DFA104_special;
            this.transition = DFA104_transition;
        }
        public String getDescription() {
            return "()* loopback of 1383:3: (op= '&' f= equalExpr )*";
        }
    }
    static final String DFA105_eotS =
        "\24\uffff";
    static final String DFA105_eofS =
        "\1\1\23\uffff";
    static final String DFA105_minS =
        "\1\6\23\uffff";
    static final String DFA105_maxS =
        "\1\143\23\uffff";
    static final String DFA105_acceptS =
        "\1\uffff\1\2\21\uffff\1\1";
    static final String DFA105_specialS =
        "\24\uffff}>";
    static final String[] DFA105_transitionS = {
            "\1\1\21\uffff\1\1\2\uffff\3\1\3\uffff\1\1\1\uffff\3\1\16\uffff"+
            "\1\1\1\uffff\1\1\3\uffff\1\1\22\uffff\1\23\1\uffff\1\23\7\1"+
            "\2\uffff\13\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA105_eot = DFA.unpackEncodedString(DFA105_eotS);
    static final short[] DFA105_eof = DFA.unpackEncodedString(DFA105_eofS);
    static final char[] DFA105_min = DFA.unpackEncodedStringToUnsignedChars(DFA105_minS);
    static final char[] DFA105_max = DFA.unpackEncodedStringToUnsignedChars(DFA105_maxS);
    static final short[] DFA105_accept = DFA.unpackEncodedString(DFA105_acceptS);
    static final short[] DFA105_special = DFA.unpackEncodedString(DFA105_specialS);
    static final short[][] DFA105_transition;

    static {
        int numStates = DFA105_transitionS.length;
        DFA105_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA105_transition[i] = DFA.unpackEncodedString(DFA105_transitionS[i]);
        }
    }

    class DFA105 extends DFA {

        public DFA105(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 105;
            this.eot = DFA105_eot;
            this.eof = DFA105_eof;
            this.min = DFA105_min;
            this.max = DFA105_max;
            this.accept = DFA105_accept;
            this.special = DFA105_special;
            this.transition = DFA105_transition;
        }
        public String getDescription() {
            return "()* loopback of 1392:3: (op= ( '>>' | '<<' ) f= addExpr )*";
        }
    }
    static final String DFA106_eotS =
        "\20\uffff";
    static final String DFA106_eofS =
        "\1\1\17\uffff";
    static final String DFA106_minS =
        "\1\6\17\uffff";
    static final String DFA106_maxS =
        "\1\143\17\uffff";
    static final String DFA106_acceptS =
        "\1\uffff\1\2\15\uffff\1\1";
    static final String DFA106_specialS =
        "\20\uffff}>";
    static final String[] DFA106_transitionS = {
            "\1\1\21\uffff\1\1\2\uffff\3\1\3\uffff\1\1\1\uffff\1\1\22\uffff"+
            "\1\1\3\uffff\1\17\25\uffff\3\1\6\uffff\13\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA106_eot = DFA.unpackEncodedString(DFA106_eotS);
    static final short[] DFA106_eof = DFA.unpackEncodedString(DFA106_eofS);
    static final char[] DFA106_min = DFA.unpackEncodedStringToUnsignedChars(DFA106_minS);
    static final char[] DFA106_max = DFA.unpackEncodedStringToUnsignedChars(DFA106_maxS);
    static final short[] DFA106_accept = DFA.unpackEncodedString(DFA106_acceptS);
    static final short[] DFA106_special = DFA.unpackEncodedString(DFA106_specialS);
    static final short[][] DFA106_transition;

    static {
        int numStates = DFA106_transitionS.length;
        DFA106_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA106_transition[i] = DFA.unpackEncodedString(DFA106_transitionS[i]);
        }
    }

    class DFA106 extends DFA {

        public DFA106(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 106;
            this.eot = DFA106_eot;
            this.eof = DFA106_eof;
            this.min = DFA106_min;
            this.max = DFA106_max;
            this.accept = DFA106_accept;
            this.special = DFA106_special;
            this.transition = DFA106_transition;
        }
        public String getDescription() {
            return "()* loopback of 1400:3: (op= '^' f= bitAndExpr )*";
        }
    }
    static final String DFA107_eotS =
        "\15\uffff";
    static final String DFA107_eofS =
        "\1\1\14\uffff";
    static final String DFA107_minS =
        "\1\6\14\uffff";
    static final String DFA107_maxS =
        "\1\143\14\uffff";
    static final String DFA107_acceptS =
        "\1\uffff\1\2\12\uffff\1\1";
    static final String DFA107_specialS =
        "\15\uffff}>";
    static final String[] DFA107_transitionS = {
            "\1\1\21\uffff\1\1\2\uffff\3\1\3\uffff\1\1\1\uffff\1\1\22\uffff"+
            "\1\1\31\uffff\1\14\10\uffff\13\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA107_eot = DFA.unpackEncodedString(DFA107_eotS);
    static final short[] DFA107_eof = DFA.unpackEncodedString(DFA107_eofS);
    static final char[] DFA107_min = DFA.unpackEncodedStringToUnsignedChars(DFA107_minS);
    static final char[] DFA107_max = DFA.unpackEncodedStringToUnsignedChars(DFA107_maxS);
    static final short[] DFA107_accept = DFA.unpackEncodedString(DFA107_acceptS);
    static final short[] DFA107_special = DFA.unpackEncodedString(DFA107_specialS);
    static final short[][] DFA107_transition;

    static {
        int numStates = DFA107_transitionS.length;
        DFA107_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA107_transition[i] = DFA.unpackEncodedString(DFA107_transitionS[i]);
        }
    }

    class DFA107 extends DFA {

        public DFA107(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 107;
            this.eot = DFA107_eot;
            this.eof = DFA107_eof;
            this.min = DFA107_min;
            this.max = DFA107_max;
            this.accept = DFA107_accept;
            this.special = DFA107_special;
            this.transition = DFA107_transition;
        }
        public String getDescription() {
            return "()* loopback of 1408:3: (op= '||' f= logAndExpr )*";
        }
    }
    static final String DFA108_eotS =
        "\16\uffff";
    static final String DFA108_eofS =
        "\1\1\15\uffff";
    static final String DFA108_minS =
        "\1\6\15\uffff";
    static final String DFA108_maxS =
        "\1\143\15\uffff";
    static final String DFA108_acceptS =
        "\1\uffff\1\2\13\uffff\1\1";
    static final String DFA108_specialS =
        "\16\uffff}>";
    static final String[] DFA108_transitionS = {
            "\1\1\21\uffff\1\1\2\uffff\3\1\3\uffff\1\1\1\uffff\1\1\22\uffff"+
            "\1\1\31\uffff\1\1\1\uffff\1\15\6\uffff\13\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA108_eot = DFA.unpackEncodedString(DFA108_eotS);
    static final short[] DFA108_eof = DFA.unpackEncodedString(DFA108_eofS);
    static final char[] DFA108_min = DFA.unpackEncodedStringToUnsignedChars(DFA108_minS);
    static final char[] DFA108_max = DFA.unpackEncodedStringToUnsignedChars(DFA108_maxS);
    static final short[] DFA108_accept = DFA.unpackEncodedString(DFA108_acceptS);
    static final short[] DFA108_special = DFA.unpackEncodedString(DFA108_specialS);
    static final short[][] DFA108_transition;

    static {
        int numStates = DFA108_transitionS.length;
        DFA108_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA108_transition[i] = DFA.unpackEncodedString(DFA108_transitionS[i]);
        }
    }

    class DFA108 extends DFA {

        public DFA108(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 108;
            this.eot = DFA108_eot;
            this.eof = DFA108_eof;
            this.min = DFA108_min;
            this.max = DFA108_max;
            this.accept = DFA108_accept;
            this.special = DFA108_special;
            this.transition = DFA108_transition;
        }
        public String getDescription() {
            return "()* loopback of 1416:3: (op= '&&' f= bitOrExpr )*";
        }
    }
    static final String DFA109_eotS =
        "\22\uffff";
    static final String DFA109_eofS =
        "\1\1\21\uffff";
    static final String DFA109_minS =
        "\1\6\21\uffff";
    static final String DFA109_maxS =
        "\1\143\21\uffff";
    static final String DFA109_acceptS =
        "\1\uffff\1\2\17\uffff\1\1";
    static final String DFA109_specialS =
        "\22\uffff}>";
    static final String[] DFA109_transitionS = {
            "\1\1\21\uffff\1\1\2\uffff\3\1\3\uffff\1\1\1\uffff\1\1\20\uffff"+
            "\1\1\1\uffff\1\1\3\uffff\1\1\25\uffff\3\1\2\uffff\2\21\2\uffff"+
            "\13\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA109_eot = DFA.unpackEncodedString(DFA109_eotS);
    static final short[] DFA109_eof = DFA.unpackEncodedString(DFA109_eofS);
    static final char[] DFA109_min = DFA.unpackEncodedStringToUnsignedChars(DFA109_minS);
    static final char[] DFA109_max = DFA.unpackEncodedStringToUnsignedChars(DFA109_maxS);
    static final short[] DFA109_accept = DFA.unpackEncodedString(DFA109_acceptS);
    static final short[] DFA109_special = DFA.unpackEncodedString(DFA109_specialS);
    static final short[][] DFA109_transition;

    static {
        int numStates = DFA109_transitionS.length;
        DFA109_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA109_transition[i] = DFA.unpackEncodedString(DFA109_transitionS[i]);
        }
    }

    class DFA109 extends DFA {

        public DFA109(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 109;
            this.eot = DFA109_eot;
            this.eof = DFA109_eof;
            this.min = DFA109_min;
            this.max = DFA109_max;
            this.accept = DFA109_accept;
            this.special = DFA109_special;
            this.transition = DFA109_transition;
        }
        public String getDescription() {
            return "()* loopback of 1424:3: (op= ( '!=' | '==' ) f= compareExpr )*";
        }
    }
    static final String DFA110_eotS =
        "\23\uffff";
    static final String DFA110_eofS =
        "\1\1\22\uffff";
    static final String DFA110_minS =
        "\1\6\22\uffff";
    static final String DFA110_maxS =
        "\1\143\22\uffff";
    static final String DFA110_acceptS =
        "\1\uffff\1\2\20\uffff\1\1";
    static final String DFA110_specialS =
        "\23\uffff}>";
    static final String[] DFA110_transitionS = {
            "\1\1\21\uffff\1\1\2\uffff\3\1\3\uffff\1\1\1\uffff\1\1\2\22\16"+
            "\uffff\1\1\1\uffff\1\1\3\uffff\1\1\25\uffff\3\1\2\22\2\1\2\uffff"+
            "\13\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA110_eot = DFA.unpackEncodedString(DFA110_eotS);
    static final short[] DFA110_eof = DFA.unpackEncodedString(DFA110_eofS);
    static final char[] DFA110_min = DFA.unpackEncodedStringToUnsignedChars(DFA110_minS);
    static final char[] DFA110_max = DFA.unpackEncodedStringToUnsignedChars(DFA110_maxS);
    static final short[] DFA110_accept = DFA.unpackEncodedString(DFA110_acceptS);
    static final short[] DFA110_special = DFA.unpackEncodedString(DFA110_specialS);
    static final short[][] DFA110_transition;

    static {
        int numStates = DFA110_transitionS.length;
        DFA110_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA110_transition[i] = DFA.unpackEncodedString(DFA110_transitionS[i]);
        }
    }

    class DFA110 extends DFA {

        public DFA110(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 110;
            this.eot = DFA110_eot;
            this.eof = DFA110_eof;
            this.min = DFA110_min;
            this.max = DFA110_max;
            this.accept = DFA110_accept;
            this.special = DFA110_special;
            this.transition = DFA110_transition;
        }
        public String getDescription() {
            return "()* loopback of 1432:3: (op= ( '<' | '<=' | '>' | '>=' ) f= shiftExpr )*";
        }
    }
    static final String DFA111_eotS =
        "\76\uffff";
    static final String DFA111_eofS =
        "\76\uffff";
    static final String DFA111_minS =
        "\2\4\16\uffff\1\6\21\uffff\1\0\4\uffff\5\0\22\uffff";
    static final String DFA111_maxS =
        "\2\150\16\uffff\1\152\21\uffff\1\0\4\uffff\5\0\22\uffff";
    static final String DFA111_acceptS =
        "\2\uffff\1\2\32\uffff\1\1\40\uffff";
    static final String DFA111_specialS =
        "\42\uffff\1\0\4\uffff\1\1\1\2\1\3\1\4\1\5\22\uffff}>";
    static final String[] DFA111_transitionS = {
            "\7\2\24\uffff\1\2\2\uffff\1\1\10\uffff\1\2\7\uffff\3\2\41\uffff"+
            "\2\2\13\uffff\5\2",
            "\2\2\1\20\4\2\23\uffff\1\35\1\2\2\uffff\1\2\10\uffff\1\2\1"+
            "\uffff\3\35\3\uffff\3\2\6\uffff\17\35\14\uffff\2\2\13\uffff"+
            "\5\2",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\35\24\uffff\1\2\1\uffff\1\2\1\35\3\uffff\1\42\1\52\1\53"+
            "\1\2\4\uffff\2\2\1\uffff\3\35\3\uffff\1\47\1\50\1\51\4\uffff"+
            "\1\2\1\uffff\17\35\3\2\1\uffff\10\2\2\uffff\13\2\1\uffff\2\2"+
            "\2\uffff\2\2",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA111_eot = DFA.unpackEncodedString(DFA111_eotS);
    static final short[] DFA111_eof = DFA.unpackEncodedString(DFA111_eofS);
    static final char[] DFA111_min = DFA.unpackEncodedStringToUnsignedChars(DFA111_minS);
    static final char[] DFA111_max = DFA.unpackEncodedStringToUnsignedChars(DFA111_maxS);
    static final short[] DFA111_accept = DFA.unpackEncodedString(DFA111_acceptS);
    static final short[] DFA111_special = DFA.unpackEncodedString(DFA111_specialS);
    static final short[][] DFA111_transition;

    static {
        int numStates = DFA111_transitionS.length;
        DFA111_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA111_transition[i] = DFA.unpackEncodedString(DFA111_transitionS[i]);
        }
    }

    class DFA111 extends DFA {

        public DFA111(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 111;
            this.eot = DFA111_eot;
            this.eof = DFA111_eof;
            this.min = DFA111_min;
            this.max = DFA111_max;
            this.accept = DFA111_accept;
            this.special = DFA111_special;
            this.transition = DFA111_transition;
        }
        public String getDescription() {
            return "1438:1: castExpr returns [Expression expr] : ( '(' typeRef ')' inner= castExpr | e= unaryExpr );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA111_34 = input.LA(1);

                         
                        int index111_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred193_ObjCpp()) ) {s = 29;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index111_34);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA111_39 = input.LA(1);

                         
                        int index111_39 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred193_ObjCpp()) ) {s = 29;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index111_39);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA111_40 = input.LA(1);

                         
                        int index111_40 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred193_ObjCpp()) ) {s = 29;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index111_40);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA111_41 = input.LA(1);

                         
                        int index111_41 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred193_ObjCpp()) ) {s = 29;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index111_41);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA111_42 = input.LA(1);

                         
                        int index111_42 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred193_ObjCpp()) ) {s = 29;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index111_42);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA111_43 = input.LA(1);

                         
                        int index111_43 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred193_ObjCpp()) ) {s = 29;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index111_43);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 111, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA113_eotS =
        "\17\uffff";
    static final String DFA113_eofS =
        "\17\uffff";
    static final String DFA113_minS =
        "\1\4\16\uffff";
    static final String DFA113_maxS =
        "\1\150\16\uffff";
    static final String DFA113_acceptS =
        "\1\uffff\1\1\13\uffff\1\2\1\3";
    static final String DFA113_specialS =
        "\17\uffff}>";
    static final String[] DFA113_transitionS = {
            "\7\1\24\uffff\1\1\2\uffff\1\1\10\uffff\1\15\7\uffff\2\15\1\1"+
            "\41\uffff\2\1\13\uffff\1\16\4\15",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA113_eot = DFA.unpackEncodedString(DFA113_eotS);
    static final short[] DFA113_eof = DFA.unpackEncodedString(DFA113_eofS);
    static final char[] DFA113_min = DFA.unpackEncodedStringToUnsignedChars(DFA113_minS);
    static final char[] DFA113_max = DFA.unpackEncodedStringToUnsignedChars(DFA113_maxS);
    static final short[] DFA113_accept = DFA.unpackEncodedString(DFA113_acceptS);
    static final short[] DFA113_special = DFA.unpackEncodedString(DFA113_specialS);
    static final short[][] DFA113_transition;

    static {
        int numStates = DFA113_transitionS.length;
        DFA113_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA113_transition[i] = DFA.unpackEncodedString(DFA113_transitionS[i]);
        }
    }

    class DFA113 extends DFA {

        public DFA113(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 113;
            this.eot = DFA113_eot;
            this.eof = DFA113_eof;
            this.min = DFA113_min;
            this.max = DFA113_max;
            this.accept = DFA113_accept;
            this.special = DFA113_special;
            this.transition = DFA113_transition;
        }
        public String getDescription() {
            return "1443:1: unaryExpr returns [Expression expr] : (p= postfixExpr | unaryOp castExpr | 'sizeof' ( '(' typeRef ')' | unaryExpr ) );";
        }
    }
    static final String DFA112_eotS =
        "\76\uffff";
    static final String DFA112_eofS =
        "\76\uffff";
    static final String DFA112_minS =
        "\2\4\17\uffff\1\6\20\uffff\1\0\6\uffff\5\0\20\uffff";
    static final String DFA112_maxS =
        "\2\150\17\uffff\1\152\20\uffff\1\0\6\uffff\5\0\20\uffff";
    static final String DFA112_acceptS =
        "\2\uffff\1\2\14\uffff\1\1\56\uffff";
    static final String DFA112_specialS =
        "\42\uffff\1\0\6\uffff\1\1\1\2\1\3\1\4\1\5\20\uffff}>";
    static final String[] DFA112_transitionS = {
            "\7\2\24\uffff\1\2\2\uffff\1\1\10\uffff\1\2\7\uffff\3\2\41\uffff"+
            "\2\2\13\uffff\5\2",
            "\2\2\1\21\4\2\23\uffff\1\17\1\2\2\uffff\1\2\10\uffff\1\2\1"+
            "\uffff\3\17\3\uffff\3\2\6\uffff\17\17\14\uffff\2\2\13\uffff"+
            "\5\2",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\17\24\uffff\1\2\1\uffff\1\2\1\17\3\uffff\1\42\1\54\1\55"+
            "\1\2\4\uffff\2\2\1\uffff\3\17\3\uffff\1\51\1\52\1\53\4\uffff"+
            "\1\2\1\uffff\17\17\3\2\1\uffff\10\2\2\uffff\13\2\1\uffff\2\2"+
            "\2\uffff\2\2",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA112_eot = DFA.unpackEncodedString(DFA112_eotS);
    static final short[] DFA112_eof = DFA.unpackEncodedString(DFA112_eofS);
    static final char[] DFA112_min = DFA.unpackEncodedStringToUnsignedChars(DFA112_minS);
    static final char[] DFA112_max = DFA.unpackEncodedStringToUnsignedChars(DFA112_maxS);
    static final short[] DFA112_accept = DFA.unpackEncodedString(DFA112_acceptS);
    static final short[] DFA112_special = DFA.unpackEncodedString(DFA112_specialS);
    static final short[][] DFA112_transition;

    static {
        int numStates = DFA112_transitionS.length;
        DFA112_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA112_transition[i] = DFA.unpackEncodedString(DFA112_transitionS[i]);
        }
    }

    class DFA112 extends DFA {

        public DFA112(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 112;
            this.eot = DFA112_eot;
            this.eof = DFA112_eof;
            this.min = DFA112_min;
            this.max = DFA112_max;
            this.accept = DFA112_accept;
            this.special = DFA112_special;
            this.transition = DFA112_transition;
        }
        public String getDescription() {
            return "1447:12: ( '(' typeRef ')' | unaryExpr )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA112_34 = input.LA(1);

                         
                        int index112_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred196_ObjCpp()) ) {s = 15;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index112_34);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA112_41 = input.LA(1);

                         
                        int index112_41 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred196_ObjCpp()) ) {s = 15;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index112_41);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA112_42 = input.LA(1);

                         
                        int index112_42 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred196_ObjCpp()) ) {s = 15;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index112_42);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA112_43 = input.LA(1);

                         
                        int index112_43 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred196_ObjCpp()) ) {s = 15;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index112_43);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA112_44 = input.LA(1);

                         
                        int index112_44 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred196_ObjCpp()) ) {s = 15;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index112_44);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA112_45 = input.LA(1);

                         
                        int index112_45 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred196_ObjCpp()) ) {s = 15;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index112_45);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 112, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA115_eotS =
        "\34\uffff";
    static final String DFA115_eofS =
        "\1\1\33\uffff";
    static final String DFA115_minS =
        "\1\6\33\uffff";
    static final String DFA115_maxS =
        "\1\152\33\uffff";
    static final String DFA115_acceptS =
        "\1\uffff\1\7\24\uffff\1\1\1\2\1\3\1\4\1\5\1\6";
    static final String DFA115_specialS =
        "\34\uffff}>";
    static final String[] DFA115_transitionS = {
            "\1\1\21\uffff\1\1\2\uffff\3\1\3\uffff\1\1\1\27\3\1\4\uffff\2"+
            "\1\7\uffff\2\1\1\26\1\1\3\uffff\1\1\20\uffff\3\1\1\uffff\10"+
            "\1\2\uffff\13\1\1\uffff\1\32\1\33\2\uffff\1\30\1\31",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA115_eot = DFA.unpackEncodedString(DFA115_eotS);
    static final short[] DFA115_eof = DFA.unpackEncodedString(DFA115_eofS);
    static final char[] DFA115_min = DFA.unpackEncodedStringToUnsignedChars(DFA115_minS);
    static final char[] DFA115_max = DFA.unpackEncodedStringToUnsignedChars(DFA115_maxS);
    static final short[] DFA115_accept = DFA.unpackEncodedString(DFA115_acceptS);
    static final short[] DFA115_special = DFA.unpackEncodedString(DFA115_specialS);
    static final short[][] DFA115_transition;

    static {
        int numStates = DFA115_transitionS.length;
        DFA115_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA115_transition[i] = DFA.unpackEncodedString(DFA115_transitionS[i]);
        }
    }

    class DFA115 extends DFA {

        public DFA115(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 115;
            this.eot = DFA115_eot;
            this.eof = DFA115_eof;
            this.min = DFA115_min;
            this.max = DFA115_max;
            this.accept = DFA115_accept;
            this.special = DFA115_special;
            this.transition = DFA115_transition;
        }
        public String getDescription() {
            return "()* loopback of 1458:3: ( '[' expression ']' | '(' ( topLevelExprList )? ')' | '.' di= IDENTIFIER | '->' ai= IDENTIFIER | '++' | '--' )*";
        }
    }
    static final String DFA114_eotS =
        "\20\uffff";
    static final String DFA114_eofS =
        "\20\uffff";
    static final String DFA114_minS =
        "\1\4\17\uffff";
    static final String DFA114_maxS =
        "\1\150\17\uffff";
    static final String DFA114_acceptS =
        "\1\uffff\1\1\15\uffff\1\2";
    static final String DFA114_specialS =
        "\20\uffff}>";
    static final String[] DFA114_transitionS = {
            "\7\1\24\uffff\1\1\2\uffff\1\1\1\17\7\uffff\1\1\7\uffff\3\1\41"+
            "\uffff\2\1\13\uffff\5\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA114_eot = DFA.unpackEncodedString(DFA114_eotS);
    static final short[] DFA114_eof = DFA.unpackEncodedString(DFA114_eofS);
    static final char[] DFA114_min = DFA.unpackEncodedStringToUnsignedChars(DFA114_minS);
    static final char[] DFA114_max = DFA.unpackEncodedStringToUnsignedChars(DFA114_maxS);
    static final short[] DFA114_accept = DFA.unpackEncodedString(DFA114_acceptS);
    static final short[] DFA114_special = DFA.unpackEncodedString(DFA114_specialS);
    static final short[][] DFA114_transition;

    static {
        int numStates = DFA114_transitionS.length;
        DFA114_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA114_transition[i] = DFA.unpackEncodedString(DFA114_transitionS[i]);
        }
    }

    class DFA114 extends DFA {

        public DFA114(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 114;
            this.eot = DFA114_eot;
            this.eof = DFA114_eof;
            this.min = DFA114_min;
            this.max = DFA114_max;
            this.accept = DFA114_accept;
            this.special = DFA114_special;
            this.transition = DFA114_transition;
        }
        public String getDescription() {
            return "1462:8: ( topLevelExprList )?";
        }
    }
    static final String DFA116_eotS =
        "\u013a\uffff";
    static final String DFA116_eofS =
        "\1\1\1\uffff\1\1\u0137\uffff";
    static final String DFA116_minS =
        "\1\6\1\uffff\1\4\10\uffff\1\4\7\0\1\4\3\42\2\4\10\uffff\1\4\1\uffff"+
        "\24\0\u00c6\uffff\40\0\1\uffff\34\0";
    static final String DFA116_maxS =
        "\1\66\1\uffff\1\150\10\uffff\1\150\7\0\1\150\3\42\2\150\10\uffff"+
        "\1\150\1\uffff\24\0\u00c6\uffff\40\0\1\uffff\34\0";
    static final String DFA116_acceptS =
        "\1\uffff\1\2\130\uffff\1\1\u00df\uffff";
    static final String DFA116_specialS =
        "\14\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\20\uffff\1\7\1\10\1\11\1\12"+
        "\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27"+
        "\1\30\1\31\1\32\u00c6\uffff\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1"+
        "\42\1\43\1\44\1\45\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56"+
        "\1\57\1\60\1\61\1\62\1\63\1\64\1\65\1\66\1\67\1\70\1\71\1\72\1\uffff"+
        "\1\73\1\74\1\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\1"+
        "\106\1\107\1\110\1\111\1\112\1\113\1\114\1\115\1\116\1\117\1\120"+
        "\1\121\1\122\1\123\1\124\1\125\1\126}>";
    static final String[] DFA116_transitionS = {
            "\1\1\21\uffff\1\1\2\uffff\1\2\2\1\3\uffff\1\1\1\uffff\1\1\22"+
            "\uffff\1\1",
            "",
            "\1\15\1\22\1\14\1\16\1\17\1\20\1\21\15\uffff\1\1\2\uffff\1"+
            "\1\2\uffff\1\1\1\25\2\uffff\1\13\10\uffff\1\41\4\1\3\uffff\2"+
            "\27\1\23\4\uffff\1\1\1\uffff\17\1\14\uffff\1\24\1\26\13\uffff"+
            "\1\30\4\41",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\45\1\52\1\44\1\46\1\47\1\50\1\51\23\uffff\1\62\1\55\2\uffff"+
            "\1\43\10\uffff\1\66\1\uffff\3\61\3\uffff\2\57\1\53\4\uffff\1"+
            "\1\1\uffff\4\63\2\64\11\65\14\uffff\1\54\1\56\13\uffff\1\60"+
            "\4\66",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\u00ff\1\u0104\1\u00fe\1\u0100\1\u0101\1\u0102\1\u0103\24"+
            "\uffff\1\u0107\2\uffff\1\u00fd\10\uffff\1\u0109\7\uffff\2\u0109"+
            "\1\u0105\41\uffff\1\u0106\1\u0108\13\uffff\1\u010a\4\u0109",
            "\1\u010b",
            "\1\u010c",
            "\1\u010d",
            "\1\u0110\1\u0115\1\u010f\1\u0111\1\u0112\1\u0113\1\u0114\24"+
            "\uffff\1\u0118\2\uffff\1\u010e\10\uffff\1\u011c\7\uffff\2\u011a"+
            "\1\u0116\4\uffff\1\1\34\uffff\1\u0117\1\u0119\13\uffff\1\u011b"+
            "\4\u011c",
            "\1\u0120\1\u0125\1\u011f\1\u0121\1\u0122\1\u0123\1\u0124\24"+
            "\uffff\1\u0128\2\uffff\1\u011e\10\uffff\1\u012a\7\uffff\2\u012a"+
            "\1\u0126\41\uffff\1\u0127\1\u0129\13\uffff\1\u012b\4\u012a",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\u012e\1\u0133\1\u012d\1\u012f\1\u0130\1\u0131\1\u0132\24"+
            "\uffff\1\u0136\2\uffff\1\u012c\10\uffff\1\u0138\7\uffff\2\u0138"+
            "\1\u0134\41\uffff\1\u0135\1\u0137\13\uffff\1\u0139\4\u0138",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff"
    };

    static final short[] DFA116_eot = DFA.unpackEncodedString(DFA116_eotS);
    static final short[] DFA116_eof = DFA.unpackEncodedString(DFA116_eofS);
    static final char[] DFA116_min = DFA.unpackEncodedStringToUnsignedChars(DFA116_minS);
    static final char[] DFA116_max = DFA.unpackEncodedStringToUnsignedChars(DFA116_maxS);
    static final short[] DFA116_accept = DFA.unpackEncodedString(DFA116_acceptS);
    static final short[] DFA116_special = DFA.unpackEncodedString(DFA116_specialS);
    static final short[][] DFA116_transition;

    static {
        int numStates = DFA116_transitionS.length;
        DFA116_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA116_transition[i] = DFA.unpackEncodedString(DFA116_transitionS[i]);
        }
    }

    class DFA116 extends DFA {

        public DFA116(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 116;
            this.eot = DFA116_eot;
            this.eof = DFA116_eof;
            this.min = DFA116_min;
            this.max = DFA116_max;
            this.accept = DFA116_accept;
            this.special = DFA116_special;
            this.transition = DFA116_transition;
        }
        public String getDescription() {
            return "()* loopback of 1491:3: ( ',' f= topLevelExpr )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA116_12 = input.LA(1);

                         
                        int index116_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred210_ObjCpp()) ) {s = 90;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index116_12);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA116_13 = input.LA(1);

                         
                        int index116_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred210_ObjCpp()) ) {s = 90;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index116_13);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA116_14 = input.LA(1);

                         
                        int index116_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred210_ObjCpp()) ) {s = 90;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index116_14);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA116_15 = input.LA(1);

                         
                        int index116_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred210_ObjCpp()) ) {s = 90;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index116_15);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA116_16 = input.LA(1);

                         
                        int index116_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred210_ObjCpp()) ) {s = 90;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index116_16);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA116_17 = input.LA(1);

                         
                        int index116_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred210_ObjCpp()) ) {s = 90;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index116_17);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA116_18 = input.LA(1);

                         
                        int index116_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred210_ObjCpp()) ) {s = 90;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index116_18);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA116_35 = input.LA(1);

                         
                        int index116_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred210_ObjCpp()) ) {s = 90;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index116_35);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA116_36 = input.LA(1);

                         
                        int index116_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred210_ObjCpp()) ) {s = 90;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index116_36);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA116_37 = input.LA(1);

                         
                        int index116_37 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred210_ObjCpp()) ) {s = 90;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index116_37);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA116_38 = input.LA(1);

                         
                        int index116_38 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred210_ObjCpp()) ) {s = 90;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index116_38);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA116_39 = input.LA(1);

                         
                        int index116_39 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred210_ObjCpp()) ) {s = 90;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index116_39);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA116_40 = input.LA(1);

                         
                        int index116_40 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred210_ObjCpp()) ) {s = 90;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index116_40);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA116_41 = input.LA(1);

                         
                        int index116_41 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred210_ObjCpp()) ) {s = 90;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index116_41);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA116_42 = input.LA(1);

                         
                        int index116_42 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred210_ObjCpp()) ) {s = 90;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index116_42);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA116_43 = input.LA(1);

                         
                        int index116_43 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred210_ObjCpp()) ) {s = 90;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index116_43);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA116_44 = input.LA(1);

                         
                        int index116_44 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred210_ObjCpp()) ) {s = 90;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index116_44);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA116_45 = input.LA(1);

                         
                        int index116_45 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred210_ObjCpp()) ) {s = 90;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index116_45);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA116_46 = input.LA(1);

                         
                        int index116_46 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred210_ObjCpp()) ) {s = 90;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index116_46);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA116_47 = input.LA(1);

                         
                        int index116_47 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred210_ObjCpp()) ) {s = 90;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index116_47);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA116_48 = input.LA(1);

                         
                        int index116_48 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred210_ObjCpp()) ) {s = 90;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index116_48);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA116_49 = input.LA(1);

                         
                        int index116_49 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred210_ObjCpp()) ) {s = 90;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index116_49);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA116_50 = input.LA(1);

                         
                        int index116_50 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred210_ObjCpp()) ) {s = 90;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index116_50);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA116_51 = input.LA(1);

                         
                        int index116_51 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred210_ObjCpp()) ) {s = 90;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index116_51);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA116_52 = input.LA(1);

                         
                        int index116_52 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred210_ObjCpp()) ) {s = 90;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index116_52);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA116_53 = input.LA(1);

                         
                        int index116_53 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred210_ObjCpp()) ) {s = 90;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index116_53);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA116_54 = input.LA(1);

                         
                        int index116_54 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred210_ObjCpp()) ) {s = 90;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index116_54);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA116_253 = input.LA(1);

                         
                        int index116_253 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred210_ObjCpp()) ) {s = 90;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index116_253);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA116_254 = input.LA(1);

                         
                        int index116_254 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred210_ObjCpp()) ) {s = 90;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index116_254);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA116_255 = input.LA(1);

                         
                        int index116_255 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred210_ObjCpp()) ) {s = 90;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index116_255);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA116_256 = input.LA(1);

                         
                        int index116_256 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred210_ObjCpp()) ) {s = 90;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index116_256);
                        if ( s>=0 ) return s;
                        break;
                    case 31 : 
                        int LA116_257 = input.LA(1);

                         
                        int index116_257 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred210_ObjCpp()) ) {s = 90;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index116_257);
                        if ( s>=0 ) return s;
                        break;
                    case 32 : 
                        int LA116_258 = input.LA(1);

                         
                        int index116_258 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred210_ObjCpp()) ) {s = 90;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index116_258);
                        if ( s>=0 ) return s;
                        break;
                    case 33 : 
                        int LA116_259 = input.LA(1);

                         
                        int index116_259 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred210_ObjCpp()) ) {s = 90;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index116_259);
                        if ( s>=0 ) return s;
                        break;
                    case 34 : 
                        int LA116_260 = input.LA(1);

                         
                        int index116_260 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred210_ObjCpp()) ) {s = 90;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index116_260);
                        if ( s>=0 ) return s;
                        break;
                    case 35 : 
                        int LA116_261 = input.LA(1);

                         
                        int index116_261 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred210_ObjCpp()) ) {s = 90;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index116_261);
                        if ( s>=0 ) return s;
                        break;
                    case 36 : 
                        int LA116_262 = input.LA(1);

                         
                        int index116_262 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred210_ObjCpp()) ) {s = 90;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index116_262);
                        if ( s>=0 ) return s;
                        break;
                    case 37 : 
                        int LA116_263 = input.LA(1);

                         
                        int index116_263 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred210_ObjCpp()) ) {s = 90;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index116_263);
                        if ( s>=0 ) return s;
                        break;
                    case 38 : 
                        int LA116_264 = input.LA(1);

                         
                        int index116_264 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred210_ObjCpp()) ) {s = 90;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index116_264);
                        if ( s>=0 ) return s;
                        break;
                    case 39 : 
                        int LA116_265 = input.LA(1);

                         
                        int index116_265 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred210_ObjCpp()) ) {s = 90;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index116_265);
                        if ( s>=0 ) return s;
                        break;
                    case 40 : 
                        int LA116_266 = input.LA(1);

                         
                        int index116_266 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred210_ObjCpp()) ) {s = 90;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index116_266);
                        if ( s>=0 ) return s;
                        break;
                    case 41 : 
                        int LA116_267 = input.LA(1);

                         
                        int index116_267 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred210_ObjCpp()) ) {s = 90;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index116_267);
                        if ( s>=0 ) return s;
                        break;
                    case 42 : 
                        int LA116_268 = input.LA(1);

                         
                        int index116_268 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred210_ObjCpp()) ) {s = 90;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index116_268);
                        if ( s>=0 ) return s;
                        break;
                    case 43 : 
                        int LA116_269 = input.LA(1);

                         
                        int index116_269 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred210_ObjCpp()) ) {s = 90;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index116_269);
                        if ( s>=0 ) return s;
                        break;
                    case 44 : 
                        int LA116_270 = input.LA(1);

                         
                        int index116_270 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred210_ObjCpp()) ) {s = 90;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index116_270);
                        if ( s>=0 ) return s;
                        break;
                    case 45 : 
                        int LA116_271 = input.LA(1);

                         
                        int index116_271 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred210_ObjCpp()) ) {s = 90;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index116_271);
                        if ( s>=0 ) return s;
                        break;
                    case 46 : 
                        int LA116_272 = input.LA(1);

                         
                        int index116_272 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred210_ObjCpp()) ) {s = 90;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index116_272);
                        if ( s>=0 ) return s;
                        break;
                    case 47 : 
                        int LA116_273 = input.LA(1);

                         
                        int index116_273 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred210_ObjCpp()) ) {s = 90;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index116_273);
                        if ( s>=0 ) return s;
                        break;
                    case 48 : 
                        int LA116_274 = input.LA(1);

                         
                        int index116_274 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred210_ObjCpp()) ) {s = 90;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index116_274);
                        if ( s>=0 ) return s;
                        break;
                    case 49 : 
                        int LA116_275 = input.LA(1);

                         
                        int index116_275 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred210_ObjCpp()) ) {s = 90;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index116_275);
                        if ( s>=0 ) return s;
                        break;
                    case 50 : 
                        int LA116_276 = input.LA(1);

                         
                        int index116_276 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred210_ObjCpp()) ) {s = 90;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index116_276);
                        if ( s>=0 ) return s;
                        break;
                    case 51 : 
                        int LA116_277 = input.LA(1);

                         
                        int index116_277 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred210_ObjCpp()) ) {s = 90;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index116_277);
                        if ( s>=0 ) return s;
                        break;
                    case 52 : 
                        int LA116_278 = input.LA(1);

                         
                        int index116_278 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred210_ObjCpp()) ) {s = 90;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index116_278);
                        if ( s>=0 ) return s;
                        break;
                    case 53 : 
                        int LA116_279 = input.LA(1);

                         
                        int index116_279 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred210_ObjCpp()) ) {s = 90;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index116_279);
                        if ( s>=0 ) return s;
                        break;
                    case 54 : 
                        int LA116_280 = input.LA(1);

                         
                        int index116_280 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred210_ObjCpp()) ) {s = 90;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index116_280);
                        if ( s>=0 ) return s;
                        break;
                    case 55 : 
                        int LA116_281 = input.LA(1);

                         
                        int index116_281 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred210_ObjCpp()) ) {s = 90;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index116_281);
                        if ( s>=0 ) return s;
                        break;
                    case 56 : 
                        int LA116_282 = input.LA(1);

                         
                        int index116_282 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred210_ObjCpp()) ) {s = 90;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index116_282);
                        if ( s>=0 ) return s;
                        break;
                    case 57 : 
                        int LA116_283 = input.LA(1);

                         
                        int index116_283 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred210_ObjCpp()) ) {s = 90;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index116_283);
                        if ( s>=0 ) return s;
                        break;
                    case 58 : 
                        int LA116_284 = input.LA(1);

                         
                        int index116_284 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred210_ObjCpp()) ) {s = 90;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index116_284);
                        if ( s>=0 ) return s;
                        break;
                    case 59 : 
                        int LA116_286 = input.LA(1);

                         
                        int index116_286 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred210_ObjCpp()) ) {s = 90;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index116_286);
                        if ( s>=0 ) return s;
                        break;
                    case 60 : 
                        int LA116_287 = input.LA(1);

                         
                        int index116_287 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred210_ObjCpp()) ) {s = 90;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index116_287);
                        if ( s>=0 ) return s;
                        break;
                    case 61 : 
                        int LA116_288 = input.LA(1);

                         
                        int index116_288 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred210_ObjCpp()) ) {s = 90;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index116_288);
                        if ( s>=0 ) return s;
                        break;
                    case 62 : 
                        int LA116_289 = input.LA(1);

                         
                        int index116_289 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred210_ObjCpp()) ) {s = 90;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index116_289);
                        if ( s>=0 ) return s;
                        break;
                    case 63 : 
                        int LA116_290 = input.LA(1);

                         
                        int index116_290 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred210_ObjCpp()) ) {s = 90;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index116_290);
                        if ( s>=0 ) return s;
                        break;
                    case 64 : 
                        int LA116_291 = input.LA(1);

                         
                        int index116_291 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred210_ObjCpp()) ) {s = 90;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index116_291);
                        if ( s>=0 ) return s;
                        break;
                    case 65 : 
                        int LA116_292 = input.LA(1);

                         
                        int index116_292 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred210_ObjCpp()) ) {s = 90;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index116_292);
                        if ( s>=0 ) return s;
                        break;
                    case 66 : 
                        int LA116_293 = input.LA(1);

                         
                        int index116_293 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred210_ObjCpp()) ) {s = 90;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index116_293);
                        if ( s>=0 ) return s;
                        break;
                    case 67 : 
                        int LA116_294 = input.LA(1);

                         
                        int index116_294 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred210_ObjCpp()) ) {s = 90;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index116_294);
                        if ( s>=0 ) return s;
                        break;
                    case 68 : 
                        int LA116_295 = input.LA(1);

                         
                        int index116_295 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred210_ObjCpp()) ) {s = 90;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index116_295);
                        if ( s>=0 ) return s;
                        break;
                    case 69 : 
                        int LA116_296 = input.LA(1);

                         
                        int index116_296 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred210_ObjCpp()) ) {s = 90;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index116_296);
                        if ( s>=0 ) return s;
                        break;
                    case 70 : 
                        int LA116_297 = input.LA(1);

                         
                        int index116_297 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred210_ObjCpp()) ) {s = 90;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index116_297);
                        if ( s>=0 ) return s;
                        break;
                    case 71 : 
                        int LA116_298 = input.LA(1);

                         
                        int index116_298 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred210_ObjCpp()) ) {s = 90;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index116_298);
                        if ( s>=0 ) return s;
                        break;
                    case 72 : 
                        int LA116_299 = input.LA(1);

                         
                        int index116_299 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred210_ObjCpp()) ) {s = 90;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index116_299);
                        if ( s>=0 ) return s;
                        break;
                    case 73 : 
                        int LA116_300 = input.LA(1);

                         
                        int index116_300 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred210_ObjCpp()) ) {s = 90;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index116_300);
                        if ( s>=0 ) return s;
                        break;
                    case 74 : 
                        int LA116_301 = input.LA(1);

                         
                        int index116_301 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred210_ObjCpp()) ) {s = 90;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index116_301);
                        if ( s>=0 ) return s;
                        break;
                    case 75 : 
                        int LA116_302 = input.LA(1);

                         
                        int index116_302 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred210_ObjCpp()) ) {s = 90;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index116_302);
                        if ( s>=0 ) return s;
                        break;
                    case 76 : 
                        int LA116_303 = input.LA(1);

                         
                        int index116_303 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred210_ObjCpp()) ) {s = 90;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index116_303);
                        if ( s>=0 ) return s;
                        break;
                    case 77 : 
                        int LA116_304 = input.LA(1);

                         
                        int index116_304 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred210_ObjCpp()) ) {s = 90;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index116_304);
                        if ( s>=0 ) return s;
                        break;
                    case 78 : 
                        int LA116_305 = input.LA(1);

                         
                        int index116_305 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred210_ObjCpp()) ) {s = 90;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index116_305);
                        if ( s>=0 ) return s;
                        break;
                    case 79 : 
                        int LA116_306 = input.LA(1);

                         
                        int index116_306 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred210_ObjCpp()) ) {s = 90;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index116_306);
                        if ( s>=0 ) return s;
                        break;
                    case 80 : 
                        int LA116_307 = input.LA(1);

                         
                        int index116_307 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred210_ObjCpp()) ) {s = 90;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index116_307);
                        if ( s>=0 ) return s;
                        break;
                    case 81 : 
                        int LA116_308 = input.LA(1);

                         
                        int index116_308 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred210_ObjCpp()) ) {s = 90;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index116_308);
                        if ( s>=0 ) return s;
                        break;
                    case 82 : 
                        int LA116_309 = input.LA(1);

                         
                        int index116_309 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred210_ObjCpp()) ) {s = 90;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index116_309);
                        if ( s>=0 ) return s;
                        break;
                    case 83 : 
                        int LA116_310 = input.LA(1);

                         
                        int index116_310 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred210_ObjCpp()) ) {s = 90;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index116_310);
                        if ( s>=0 ) return s;
                        break;
                    case 84 : 
                        int LA116_311 = input.LA(1);

                         
                        int index116_311 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred210_ObjCpp()) ) {s = 90;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index116_311);
                        if ( s>=0 ) return s;
                        break;
                    case 85 : 
                        int LA116_312 = input.LA(1);

                         
                        int index116_312 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred210_ObjCpp()) ) {s = 90;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index116_312);
                        if ( s>=0 ) return s;
                        break;
                    case 86 : 
                        int LA116_313 = input.LA(1);

                         
                        int index116_313 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred210_ObjCpp()) ) {s = 90;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index116_313);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 116, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA117_eotS =
        "\41\uffff";
    static final String DFA117_eofS =
        "\41\uffff";
    static final String DFA117_minS =
        "\1\4\40\uffff";
    static final String DFA117_maxS =
        "\1\160\40\uffff";
    static final String DFA117_acceptS =
        "\1\uffff\1\2\1\1\36\uffff";
    static final String DFA117_specialS =
        "\41\uffff}>";
    static final String[] DFA117_transitionS = {
            "\7\2\14\uffff\1\2\1\1\2\2\1\uffff\1\2\1\uffff\3\2\1\uffff\1"+
            "\2\10\uffff\1\2\1\uffff\3\2\3\uffff\3\2\1\uffff\1\2\3\uffff"+
            "\20\2\14\uffff\2\2\13\uffff\5\2\2\uffff\1\2\1\uffff\4\2",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA117_eot = DFA.unpackEncodedString(DFA117_eotS);
    static final short[] DFA117_eof = DFA.unpackEncodedString(DFA117_eofS);
    static final char[] DFA117_min = DFA.unpackEncodedStringToUnsignedChars(DFA117_minS);
    static final char[] DFA117_max = DFA.unpackEncodedStringToUnsignedChars(DFA117_maxS);
    static final short[] DFA117_accept = DFA.unpackEncodedString(DFA117_acceptS);
    static final short[] DFA117_special = DFA.unpackEncodedString(DFA117_specialS);
    static final short[][] DFA117_transition;

    static {
        int numStates = DFA117_transitionS.length;
        DFA117_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA117_transition[i] = DFA.unpackEncodedString(DFA117_transitionS[i]);
        }
    }

    class DFA117 extends DFA {

        public DFA117(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 117;
            this.eot = DFA117_eot;
            this.eof = DFA117_eof;
            this.min = DFA117_min;
            this.max = DFA117_max;
            this.accept = DFA117_accept;
            this.special = DFA117_special;
            this.transition = DFA117_transition;
        }
        public String getDescription() {
            return "()* loopback of 1512:3: ( statement )*";
        }
    }
    static final String DFA123_eotS =
        "\u00ae\uffff";
    static final String DFA123_eofS =
        "\u00ae\uffff";
    static final String DFA123_minS =
        "\1\4\1\uffff\1\5\5\uffff\1\6\30\uffff\1\4\4\uffff\1\4\4\uffff\1"+
        "\4\2\uffff\1\4\1\uffff\2\4\16\uffff\21\0\1\uffff\5\0\20\uffff\4"+
        "\0\1\uffff\1\0\14\uffff\1\0\22\uffff\2\0\6\uffff\1\0\3\uffff\1\0"+
        "\3\uffff\4\0\16\uffff";
    static final String DFA123_maxS =
        "\1\160\1\uffff\1\152\5\uffff\1\42\30\uffff\1\150\4\uffff\1\150\4"+
        "\uffff\1\150\2\uffff\1\150\1\uffff\2\150\16\uffff\21\0\1\uffff\5"+
        "\0\20\uffff\4\0\1\uffff\1\0\14\uffff\1\0\22\uffff\2\0\6\uffff\1"+
        "\0\3\uffff\1\0\3\uffff\4\0\16\uffff";
    static final String DFA123_acceptS =
        "\1\uffff\1\1\1\uffff\1\2\10\uffff\1\3\14\uffff\1\4\1\5\1\6\1\7\1"+
        "\10\1\11\1\12\u008d\uffff\1\13";
    static final String DFA123_specialS =
        "\100\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1"+
        "\14\1\15\1\16\1\17\1\20\1\uffff\1\21\1\22\1\23\1\24\1\25\20\uffff"+
        "\1\26\1\27\1\30\1\31\1\uffff\1\32\14\uffff\1\33\22\uffff\1\34\1"+
        "\35\6\uffff\1\36\3\uffff\1\37\3\uffff\1\40\1\41\1\42\1\43\16\uffff}>";
    static final String[] DFA123_transitionS = {
            "\2\14\1\2\4\14\14\uffff\1\1\1\uffff\2\3\1\uffff\1\37\1\uffff"+
            "\1\3\1\10\1\3\1\uffff\1\14\10\uffff\1\14\1\uffff\3\3\3\uffff"+
            "\3\14\1\uffff\1\31\3\uffff\20\3\14\uffff\2\14\13\uffff\5\14"+
            "\2\uffff\1\32\1\uffff\1\33\1\34\1\35\1\36",
            "",
            "\2\3\24\uffff\3\14\1\3\3\uffff\1\41\1\uffff\1\56\1\14\4\uffff"+
            "\2\14\1\uffff\3\3\3\uffff\1\53\1\60\1\46\4\uffff\1\61\1\uffff"+
            "\17\3\3\14\1\uffff\10\14\2\uffff\13\14\1\uffff\2\14\2\uffff"+
            "\2\14",
            "",
            "",
            "",
            "",
            "",
            "\1\3\33\uffff\1\14",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\103\1\110\1\100\1\104\1\105\1\106\1\107\23\uffff\1\123\1"+
            "\113\2\uffff\1\102\1\101\7\uffff\1\120\1\3\3\122\3\uffff\1\115"+
            "\1\117\1\111\1\uffff\1\3\2\uffff\1\3\1\uffff\4\124\2\125\11"+
            "\126\14\uffff\1\112\1\114\13\uffff\1\116\4\120",
            "",
            "",
            "",
            "",
            "\7\14\24\uffff\1\14\2\uffff\1\14\10\uffff\1\14\7\uffff\3\14"+
            "\1\3\40\uffff\2\14\13\uffff\5\14",
            "",
            "",
            "",
            "",
            "\2\14\1\147\4\14\24\uffff\1\14\2\uffff\1\154\10\uffff\1\14"+
            "\7\uffff\1\150\1\151\1\152\4\uffff\1\3\34\uffff\2\14\13\uffff"+
            "\5\14",
            "",
            "",
            "\2\14\1\171\4\14\23\uffff\1\3\1\14\2\uffff\1\14\2\uffff\1\3"+
            "\5\uffff\1\14\1\uffff\3\3\3\uffff\3\14\6\uffff\17\3\14\uffff"+
            "\2\14\13\uffff\5\14",
            "",
            "\2\14\1\u008d\4\14\24\uffff\1\14\2\uffff\1\u008c\10\uffff\1"+
            "\14\7\uffff\1\u0098\1\u009c\1\u0094\4\uffff\1\3\34\uffff\2\14"+
            "\13\uffff\5\14",
            "\2\14\1\u009d\4\14\24\uffff\1\14\2\uffff\1\u009f\10\uffff\1"+
            "\14\7\uffff\2\u009e\1\14\4\uffff\1\3\34\uffff\2\14\13\uffff"+
            "\5\14",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA123_eot = DFA.unpackEncodedString(DFA123_eotS);
    static final short[] DFA123_eof = DFA.unpackEncodedString(DFA123_eofS);
    static final char[] DFA123_min = DFA.unpackEncodedStringToUnsignedChars(DFA123_minS);
    static final char[] DFA123_max = DFA.unpackEncodedStringToUnsignedChars(DFA123_maxS);
    static final short[] DFA123_accept = DFA.unpackEncodedString(DFA123_acceptS);
    static final short[] DFA123_special = DFA.unpackEncodedString(DFA123_specialS);
    static final short[][] DFA123_transition;

    static {
        int numStates = DFA123_transitionS.length;
        DFA123_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA123_transition[i] = DFA.unpackEncodedString(DFA123_transitionS[i]);
        }
    }

    class DFA123 extends DFA {

        public DFA123(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 123;
            this.eot = DFA123_eot;
            this.eof = DFA123_eof;
            this.min = DFA123_min;
            this.max = DFA123_max;
            this.accept = DFA123_accept;
            this.special = DFA123_special;
            this.transition = DFA123_transition;
        }
        public String getDescription() {
            return "1519:1: statement returns [Statement stat] : (b= statementsBlock | declaration | es= expression ';' | rt= 'return' rex= expression ';' | 'if' '(' expression ')' statement ( 'else' statement )? | 'while' '(' expression ')' statement | 'do' statement 'while' '(' expression ')' ';' | 'for' '(' ( statement )? ';' ( expression )? ';' ( statement )? ')' statement | 'switch' '(' expression ')' '{' ( 'case' expression ':' | statement )* '}' | ';' | {...}? IDENTIFIER '(' varDecl ':' expression ')' statement );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA123_64 = input.LA(1);

                         
                        int index123_64 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred213_ObjCpp()) ) {s = 3;}

                        else if ( (synpred214_ObjCpp()) ) {s = 12;}

                        else if ( (( next("foreach") )) ) {s = 173;}

                         
                        input.seek(index123_64);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA123_65 = input.LA(1);

                         
                        int index123_65 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred213_ObjCpp()) ) {s = 3;}

                        else if ( (synpred214_ObjCpp()) ) {s = 12;}

                         
                        input.seek(index123_65);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA123_66 = input.LA(1);

                         
                        int index123_66 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred213_ObjCpp()) ) {s = 3;}

                        else if ( (synpred214_ObjCpp()) ) {s = 12;}

                         
                        input.seek(index123_66);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA123_67 = input.LA(1);

                         
                        int index123_67 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred213_ObjCpp()) ) {s = 3;}

                        else if ( (synpred214_ObjCpp()) ) {s = 12;}

                         
                        input.seek(index123_67);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA123_68 = input.LA(1);

                         
                        int index123_68 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred213_ObjCpp()) ) {s = 3;}

                        else if ( (synpred214_ObjCpp()) ) {s = 12;}

                         
                        input.seek(index123_68);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA123_69 = input.LA(1);

                         
                        int index123_69 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred213_ObjCpp()) ) {s = 3;}

                        else if ( (synpred214_ObjCpp()) ) {s = 12;}

                         
                        input.seek(index123_69);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA123_70 = input.LA(1);

                         
                        int index123_70 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred213_ObjCpp()) ) {s = 3;}

                        else if ( (synpred214_ObjCpp()) ) {s = 12;}

                         
                        input.seek(index123_70);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA123_71 = input.LA(1);

                         
                        int index123_71 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred213_ObjCpp()) ) {s = 3;}

                        else if ( (synpred214_ObjCpp()) ) {s = 12;}

                         
                        input.seek(index123_71);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA123_72 = input.LA(1);

                         
                        int index123_72 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred213_ObjCpp()) ) {s = 3;}

                        else if ( (synpred214_ObjCpp()) ) {s = 12;}

                         
                        input.seek(index123_72);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA123_73 = input.LA(1);

                         
                        int index123_73 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred213_ObjCpp()) ) {s = 3;}

                        else if ( (synpred214_ObjCpp()) ) {s = 12;}

                         
                        input.seek(index123_73);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA123_74 = input.LA(1);

                         
                        int index123_74 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred213_ObjCpp()) ) {s = 3;}

                        else if ( (synpred214_ObjCpp()) ) {s = 12;}

                         
                        input.seek(index123_74);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA123_75 = input.LA(1);

                         
                        int index123_75 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred213_ObjCpp()) ) {s = 3;}

                        else if ( (synpred214_ObjCpp()) ) {s = 12;}

                         
                        input.seek(index123_75);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA123_76 = input.LA(1);

                         
                        int index123_76 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred213_ObjCpp()) ) {s = 3;}

                        else if ( (synpred214_ObjCpp()) ) {s = 12;}

                         
                        input.seek(index123_76);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA123_77 = input.LA(1);

                         
                        int index123_77 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred213_ObjCpp()) ) {s = 3;}

                        else if ( (synpred214_ObjCpp()) ) {s = 12;}

                         
                        input.seek(index123_77);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA123_78 = input.LA(1);

                         
                        int index123_78 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred213_ObjCpp()) ) {s = 3;}

                        else if ( (synpred214_ObjCpp()) ) {s = 12;}

                         
                        input.seek(index123_78);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA123_79 = input.LA(1);

                         
                        int index123_79 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred213_ObjCpp()) ) {s = 3;}

                        else if ( (synpred214_ObjCpp()) ) {s = 12;}

                         
                        input.seek(index123_79);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA123_80 = input.LA(1);

                         
                        int index123_80 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred213_ObjCpp()) ) {s = 3;}

                        else if ( (synpred214_ObjCpp()) ) {s = 12;}

                         
                        input.seek(index123_80);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA123_82 = input.LA(1);

                         
                        int index123_82 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred213_ObjCpp()) ) {s = 3;}

                        else if ( (( next("foreach") )) ) {s = 173;}

                         
                        input.seek(index123_82);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA123_83 = input.LA(1);

                         
                        int index123_83 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred213_ObjCpp()) ) {s = 3;}

                        else if ( (( next("foreach") )) ) {s = 173;}

                         
                        input.seek(index123_83);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA123_84 = input.LA(1);

                         
                        int index123_84 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred213_ObjCpp()) ) {s = 3;}

                        else if ( (( next("foreach") )) ) {s = 173;}

                         
                        input.seek(index123_84);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA123_85 = input.LA(1);

                         
                        int index123_85 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred213_ObjCpp()) ) {s = 3;}

                        else if ( (( next("foreach") )) ) {s = 173;}

                         
                        input.seek(index123_85);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA123_86 = input.LA(1);

                         
                        int index123_86 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred213_ObjCpp()) ) {s = 3;}

                        else if ( (( next("foreach") )) ) {s = 173;}

                         
                        input.seek(index123_86);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA123_103 = input.LA(1);

                         
                        int index123_103 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred213_ObjCpp()) ) {s = 3;}

                        else if ( (synpred214_ObjCpp()) ) {s = 12;}

                         
                        input.seek(index123_103);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA123_104 = input.LA(1);

                         
                        int index123_104 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred213_ObjCpp()) ) {s = 3;}

                        else if ( (synpred214_ObjCpp()) ) {s = 12;}

                         
                        input.seek(index123_104);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA123_105 = input.LA(1);

                         
                        int index123_105 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred213_ObjCpp()) ) {s = 3;}

                        else if ( (synpred214_ObjCpp()) ) {s = 12;}

                         
                        input.seek(index123_105);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA123_106 = input.LA(1);

                         
                        int index123_106 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred213_ObjCpp()) ) {s = 3;}

                        else if ( (synpred214_ObjCpp()) ) {s = 12;}

                         
                        input.seek(index123_106);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA123_108 = input.LA(1);

                         
                        int index123_108 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred213_ObjCpp()) ) {s = 3;}

                        else if ( (synpred214_ObjCpp()) ) {s = 12;}

                         
                        input.seek(index123_108);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA123_121 = input.LA(1);

                         
                        int index123_121 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred213_ObjCpp()) ) {s = 3;}

                        else if ( (synpred214_ObjCpp()) ) {s = 12;}

                         
                        input.seek(index123_121);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA123_140 = input.LA(1);

                         
                        int index123_140 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred213_ObjCpp()) ) {s = 3;}

                        else if ( (synpred214_ObjCpp()) ) {s = 12;}

                         
                        input.seek(index123_140);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA123_141 = input.LA(1);

                         
                        int index123_141 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred213_ObjCpp()) ) {s = 3;}

                        else if ( (synpred214_ObjCpp()) ) {s = 12;}

                         
                        input.seek(index123_141);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA123_148 = input.LA(1);

                         
                        int index123_148 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred213_ObjCpp()) ) {s = 3;}

                        else if ( (synpred214_ObjCpp()) ) {s = 12;}

                         
                        input.seek(index123_148);
                        if ( s>=0 ) return s;
                        break;
                    case 31 : 
                        int LA123_152 = input.LA(1);

                         
                        int index123_152 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred213_ObjCpp()) ) {s = 3;}

                        else if ( (synpred214_ObjCpp()) ) {s = 12;}

                         
                        input.seek(index123_152);
                        if ( s>=0 ) return s;
                        break;
                    case 32 : 
                        int LA123_156 = input.LA(1);

                         
                        int index123_156 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred213_ObjCpp()) ) {s = 3;}

                        else if ( (synpred214_ObjCpp()) ) {s = 12;}

                         
                        input.seek(index123_156);
                        if ( s>=0 ) return s;
                        break;
                    case 33 : 
                        int LA123_157 = input.LA(1);

                         
                        int index123_157 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred213_ObjCpp()) ) {s = 3;}

                        else if ( (synpred214_ObjCpp()) ) {s = 12;}

                         
                        input.seek(index123_157);
                        if ( s>=0 ) return s;
                        break;
                    case 34 : 
                        int LA123_158 = input.LA(1);

                         
                        int index123_158 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred213_ObjCpp()) ) {s = 3;}

                        else if ( (synpred214_ObjCpp()) ) {s = 12;}

                         
                        input.seek(index123_158);
                        if ( s>=0 ) return s;
                        break;
                    case 35 : 
                        int LA123_159 = input.LA(1);

                         
                        int index123_159 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred213_ObjCpp()) ) {s = 3;}

                        else if ( (synpred214_ObjCpp()) ) {s = 12;}

                         
                        input.seek(index123_159);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 123, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA118_eotS =
        "\105\uffff";
    static final String DFA118_eofS =
        "\1\2\104\uffff";
    static final String DFA118_minS =
        "\1\4\1\0\103\uffff";
    static final String DFA118_maxS =
        "\1\161\1\0\103\uffff";
    static final String DFA118_acceptS =
        "\2\uffff\1\2\101\uffff\1\1";
    static final String DFA118_specialS =
        "\1\uffff\1\0\103\uffff}>";
    static final String[] DFA118_transitionS = {
            "\7\2\14\uffff\4\2\1\uffff\1\2\1\uffff\3\2\1\uffff\2\2\7\uffff"+
            "\1\2\1\uffff\3\2\3\uffff\3\2\1\uffff\1\2\3\uffff\20\2\14\uffff"+
            "\2\2\13\uffff\5\2\2\uffff\1\2\1\1\5\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA118_eot = DFA.unpackEncodedString(DFA118_eotS);
    static final short[] DFA118_eof = DFA.unpackEncodedString(DFA118_eofS);
    static final char[] DFA118_min = DFA.unpackEncodedStringToUnsignedChars(DFA118_minS);
    static final char[] DFA118_max = DFA.unpackEncodedStringToUnsignedChars(DFA118_maxS);
    static final short[] DFA118_accept = DFA.unpackEncodedString(DFA118_acceptS);
    static final short[] DFA118_special = DFA.unpackEncodedString(DFA118_specialS);
    static final short[][] DFA118_transition;

    static {
        int numStates = DFA118_transitionS.length;
        DFA118_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA118_transition[i] = DFA.unpackEncodedString(DFA118_transitionS[i]);
        }
    }

    class DFA118 extends DFA {

        public DFA118(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 118;
            this.eot = DFA118_eot;
            this.eof = DFA118_eof;
            this.min = DFA118_min;
            this.max = DFA118_max;
            this.accept = DFA118_accept;
            this.special = DFA118_special;
            this.transition = DFA118_transition;
        }
        public String getDescription() {
            return "1527:37: ( 'else' statement )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA118_1 = input.LA(1);

                         
                        int index118_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred216_ObjCpp()) ) {s = 68;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index118_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 118, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA119_eotS =
        "\117\uffff";
    static final String DFA119_eofS =
        "\117\uffff";
    static final String DFA119_minS =
        "\1\4\36\uffff\2\4\16\uffff\17\0\21\uffff";
    static final String DFA119_maxS =
        "\1\160\36\uffff\1\150\1\160\16\uffff\17\0\21\uffff";
    static final String DFA119_acceptS =
        "\1\uffff\1\1\37\uffff\1\2\55\uffff";
    static final String DFA119_specialS =
        "\57\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1"+
        "\14\1\15\1\16\21\uffff}>";
    static final String[] DFA119_transitionS = {
            "\7\1\14\uffff\1\1\1\uffff\2\1\1\uffff\1\37\1\uffff\3\1\1\uffff"+
            "\1\1\10\uffff\1\1\1\uffff\3\1\3\uffff\3\1\1\uffff\1\1\3\uffff"+
            "\20\1\14\uffff\2\1\13\uffff\5\1\2\uffff\1\1\1\uffff\4\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\7\41\21\uffff\1\40\2\uffff\1\41\2\uffff\1\41\10\uffff\1\41"+
            "\7\uffff\3\41\41\uffff\2\41\13\uffff\5\41",
            "\1\61\1\66\1\60\1\62\1\63\1\64\1\65\14\uffff\1\41\1\uffff\2"+
            "\41\1\uffff\1\75\1\uffff\1\41\1\71\1\41\1\uffff\1\57\1\41\7"+
            "\uffff\1\73\1\uffff\3\41\3\uffff\2\73\1\67\1\uffff\1\41\3\uffff"+
            "\20\41\14\uffff\1\70\1\72\13\uffff\1\74\4\73\2\uffff\1\41\1"+
            "\uffff\4\41",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA119_eot = DFA.unpackEncodedString(DFA119_eotS);
    static final short[] DFA119_eof = DFA.unpackEncodedString(DFA119_eofS);
    static final char[] DFA119_min = DFA.unpackEncodedStringToUnsignedChars(DFA119_minS);
    static final char[] DFA119_max = DFA.unpackEncodedStringToUnsignedChars(DFA119_maxS);
    static final short[] DFA119_accept = DFA.unpackEncodedString(DFA119_acceptS);
    static final short[] DFA119_special = DFA.unpackEncodedString(DFA119_specialS);
    static final short[][] DFA119_transition;

    static {
        int numStates = DFA119_transitionS.length;
        DFA119_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA119_transition[i] = DFA.unpackEncodedString(DFA119_transitionS[i]);
        }
    }

    class DFA119 extends DFA {

        public DFA119(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 119;
            this.eot = DFA119_eot;
            this.eof = DFA119_eof;
            this.min = DFA119_min;
            this.max = DFA119_max;
            this.accept = DFA119_accept;
            this.special = DFA119_special;
            this.transition = DFA119_transition;
        }
        public String getDescription() {
            return "1530:13: ( statement )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA119_47 = input.LA(1);

                         
                        int index119_47 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred220_ObjCpp()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index119_47);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA119_48 = input.LA(1);

                         
                        int index119_48 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred220_ObjCpp()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index119_48);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA119_49 = input.LA(1);

                         
                        int index119_49 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred220_ObjCpp()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index119_49);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA119_50 = input.LA(1);

                         
                        int index119_50 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred220_ObjCpp()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index119_50);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA119_51 = input.LA(1);

                         
                        int index119_51 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred220_ObjCpp()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index119_51);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA119_52 = input.LA(1);

                         
                        int index119_52 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred220_ObjCpp()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index119_52);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA119_53 = input.LA(1);

                         
                        int index119_53 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred220_ObjCpp()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index119_53);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA119_54 = input.LA(1);

                         
                        int index119_54 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred220_ObjCpp()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index119_54);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA119_55 = input.LA(1);

                         
                        int index119_55 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred220_ObjCpp()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index119_55);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA119_56 = input.LA(1);

                         
                        int index119_56 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred220_ObjCpp()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index119_56);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA119_57 = input.LA(1);

                         
                        int index119_57 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred220_ObjCpp()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index119_57);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA119_58 = input.LA(1);

                         
                        int index119_58 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred220_ObjCpp()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index119_58);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA119_59 = input.LA(1);

                         
                        int index119_59 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred220_ObjCpp()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index119_59);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA119_60 = input.LA(1);

                         
                        int index119_60 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred220_ObjCpp()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index119_60);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA119_61 = input.LA(1);

                         
                        int index119_61 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred220_ObjCpp()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index119_61);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 119, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA120_eotS =
        "\20\uffff";
    static final String DFA120_eofS =
        "\20\uffff";
    static final String DFA120_minS =
        "\1\4\17\uffff";
    static final String DFA120_maxS =
        "\1\150\17\uffff";
    static final String DFA120_acceptS =
        "\1\uffff\1\1\15\uffff\1\2";
    static final String DFA120_specialS =
        "\20\uffff}>";
    static final String[] DFA120_transitionS = {
            "\7\1\21\uffff\1\17\2\uffff\1\1\2\uffff\1\1\10\uffff\1\1\7\uffff"+
            "\3\1\41\uffff\2\1\13\uffff\5\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA120_eot = DFA.unpackEncodedString(DFA120_eotS);
    static final short[] DFA120_eof = DFA.unpackEncodedString(DFA120_eofS);
    static final char[] DFA120_min = DFA.unpackEncodedStringToUnsignedChars(DFA120_minS);
    static final char[] DFA120_max = DFA.unpackEncodedStringToUnsignedChars(DFA120_maxS);
    static final short[] DFA120_accept = DFA.unpackEncodedString(DFA120_acceptS);
    static final short[] DFA120_special = DFA.unpackEncodedString(DFA120_specialS);
    static final short[][] DFA120_transition;

    static {
        int numStates = DFA120_transitionS.length;
        DFA120_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA120_transition[i] = DFA.unpackEncodedString(DFA120_transitionS[i]);
        }
    }

    class DFA120 extends DFA {

        public DFA120(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 120;
            this.eot = DFA120_eot;
            this.eof = DFA120_eof;
            this.min = DFA120_min;
            this.max = DFA120_max;
            this.accept = DFA120_accept;
            this.special = DFA120_special;
            this.transition = DFA120_transition;
        }
        public String getDescription() {
            return "1530:28: ( expression )?";
        }
    }
    static final String DFA121_eotS =
        "\41\uffff";
    static final String DFA121_eofS =
        "\41\uffff";
    static final String DFA121_minS =
        "\1\4\40\uffff";
    static final String DFA121_maxS =
        "\1\160\40\uffff";
    static final String DFA121_acceptS =
        "\1\uffff\1\1\36\uffff\1\2";
    static final String DFA121_specialS =
        "\41\uffff}>";
    static final String[] DFA121_transitionS = {
            "\7\1\14\uffff\1\1\1\uffff\2\1\1\uffff\1\1\1\uffff\3\1\1\uffff"+
            "\1\1\1\40\7\uffff\1\1\1\uffff\3\1\3\uffff\3\1\1\uffff\1\1\3"+
            "\uffff\20\1\14\uffff\2\1\13\uffff\5\1\2\uffff\1\1\1\uffff\4"+
            "\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA121_eot = DFA.unpackEncodedString(DFA121_eotS);
    static final short[] DFA121_eof = DFA.unpackEncodedString(DFA121_eofS);
    static final char[] DFA121_min = DFA.unpackEncodedStringToUnsignedChars(DFA121_minS);
    static final char[] DFA121_max = DFA.unpackEncodedStringToUnsignedChars(DFA121_maxS);
    static final short[] DFA121_accept = DFA.unpackEncodedString(DFA121_acceptS);
    static final short[] DFA121_special = DFA.unpackEncodedString(DFA121_specialS);
    static final short[][] DFA121_transition;

    static {
        int numStates = DFA121_transitionS.length;
        DFA121_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA121_transition[i] = DFA.unpackEncodedString(DFA121_transitionS[i]);
        }
    }

    class DFA121 extends DFA {

        public DFA121(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 121;
            this.eot = DFA121_eot;
            this.eof = DFA121_eof;
            this.min = DFA121_min;
            this.max = DFA121_max;
            this.accept = DFA121_accept;
            this.special = DFA121_special;
            this.transition = DFA121_transition;
        }
        public String getDescription() {
            return "1530:44: ( statement )?";
        }
    }
    static final String DFA122_eotS =
        "\42\uffff";
    static final String DFA122_eofS =
        "\42\uffff";
    static final String DFA122_minS =
        "\1\4\41\uffff";
    static final String DFA122_maxS =
        "\1\161\41\uffff";
    static final String DFA122_acceptS =
        "\1\uffff\1\3\1\1\1\2\36\uffff";
    static final String DFA122_specialS =
        "\42\uffff}>";
    static final String[] DFA122_transitionS = {
            "\7\3\14\uffff\1\3\1\1\2\3\1\uffff\1\3\1\uffff\3\3\1\uffff\1"+
            "\3\10\uffff\1\3\1\uffff\3\3\3\uffff\3\3\1\uffff\1\3\3\uffff"+
            "\20\3\14\uffff\2\3\13\uffff\5\3\2\uffff\1\3\1\uffff\4\3\1\2",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA122_eot = DFA.unpackEncodedString(DFA122_eotS);
    static final short[] DFA122_eof = DFA.unpackEncodedString(DFA122_eofS);
    static final char[] DFA122_min = DFA.unpackEncodedStringToUnsignedChars(DFA122_minS);
    static final char[] DFA122_max = DFA.unpackEncodedStringToUnsignedChars(DFA122_maxS);
    static final short[] DFA122_accept = DFA.unpackEncodedString(DFA122_acceptS);
    static final short[] DFA122_special = DFA.unpackEncodedString(DFA122_specialS);
    static final short[][] DFA122_transition;

    static {
        int numStates = DFA122_transitionS.length;
        DFA122_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA122_transition[i] = DFA.unpackEncodedString(DFA122_transitionS[i]);
        }
    }

    class DFA122 extends DFA {

        public DFA122(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 122;
            this.eot = DFA122_eot;
            this.eof = DFA122_eof;
            this.min = DFA122_min;
            this.max = DFA122_max;
            this.accept = DFA122_accept;
            this.special = DFA122_special;
            this.transition = DFA122_transition;
        }
        public String getDescription() {
            return "()* loopback of 1532:3: ( 'case' expression ':' | statement )*";
        }
    }
 

    public static final BitSet FOLLOW_22_in_lineDirective66 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_DECIMAL_NUMBER_in_lineDirective70 = new BitSet(new long[]{0x0000000000000032L});
    public static final BitSet FOLLOW_STRING_in_lineDirective83 = new BitSet(new long[]{0x0000000000000012L});
    public static final BitSet FOLLOW_DECIMAL_NUMBER_in_lineDirective98 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_declaration_in_sourceFile127 = new BitSet(new long[]{0xF800E001C6400040L,0x00000000000007FFL});
    public static final BitSet FOLLOW_lineDirective_in_sourceFile136 = new BitSet(new long[]{0xF800E001C6400040L,0x00000000000007FFL});
    public static final BitSet FOLLOW_EOF_in_sourceFile149 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_externDeclarations167 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_externDeclarations171 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_23_in_externDeclarations177 = new BitSet(new long[]{0xF800E001C7000040L,0x00000000000007FFL});
    public static final BitSet FOLLOW_declaration_in_externDeclarations191 = new BitSet(new long[]{0xF800E001C7000040L,0x00000000000007FFL});
    public static final BitSet FOLLOW_24_in_externDeclarations204 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_functionDeclaration_in_declaration247 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_externDeclarations_in_declaration257 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_varDecl_in_declaration267 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_objCClassDef_in_declaration277 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeDef_in_declaration287 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_forwardClassDecl_in_declaration297 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_25_in_declaration307 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_declaration311 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_23_in_declaration313 = new BitSet(new long[]{0xF800E001C7000040L,0x00000000000007FFL});
    public static final BitSet FOLLOW_declaration_in_declaration331 = new BitSet(new long[]{0xF800E001C7000040L,0x00000000000007FFL});
    public static final BitSet FOLLOW_24_in_declaration347 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_26_in_forwardClassDecl387 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_forwardClassDecl394 = new BitSet(new long[]{0x0000000018000000L});
    public static final BitSet FOLLOW_27_in_forwardClassDecl401 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_forwardClassDecl408 = new BitSet(new long[]{0x0000000018000000L});
    public static final BitSet FOLLOW_28_in_forwardClassDecl419 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeRef_in_functionPointerVarDecl437 = new BitSet(new long[]{0x0000000010000000L});
    public static final BitSet FOLLOW_28_in_functionPointerVarDecl445 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_enumItem463 = new BitSet(new long[]{0x0000000020000002L});
    public static final BitSet FOLLOW_29_in_enumItem466 = new BitSet(new long[]{0x00380804800007F0L,0x000001F001800000L});
    public static final BitSet FOLLOW_expression_in_enumItem470 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_30_in_enumCore494 = new BitSet(new long[]{0x0000000000800042L});
    public static final BitSet FOLLOW_IDENTIFIER_in_enumCore508 = new BitSet(new long[]{0x0000000000800002L});
    public static final BitSet FOLLOW_23_in_enumCore525 = new BitSet(new long[]{0x0000000001000040L});
    public static final BitSet FOLLOW_enumItem_in_enumCore544 = new BitSet(new long[]{0x0000000009000000L});
    public static final BitSet FOLLOW_27_in_enumCore561 = new BitSet(new long[]{0x0000000009000040L});
    public static final BitSet FOLLOW_enumItem_in_enumCore573 = new BitSet(new long[]{0x0000000009000000L});
    public static final BitSet FOLLOW_24_in_enumCore597 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_set_in_objCClassDef629 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_objCClassDef640 = new BitSet(new long[]{0xF800EE1640800040L,0x00000000000007FFL});
    public static final BitSet FOLLOW_33_in_objCClassDef658 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_objCClassDef662 = new BitSet(new long[]{0xF800EE1040800040L,0x00000000000007FFL});
    public static final BitSet FOLLOW_34_in_objCClassDef677 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_objCClassDef681 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_35_in_objCClassDef683 = new BitSet(new long[]{0xF800EE1040800040L,0x00000000000007FFL});
    public static final BitSet FOLLOW_36_in_objCClassDef699 = new BitSet(new long[]{0x0000002000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_objCClassDef709 = new BitSet(new long[]{0x0000002008000000L});
    public static final BitSet FOLLOW_27_in_objCClassDef724 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_objCClassDef734 = new BitSet(new long[]{0x0000002008000000L});
    public static final BitSet FOLLOW_37_in_objCClassDef751 = new BitSet(new long[]{0xF800EE0040800040L,0x00000000000007FFL});
    public static final BitSet FOLLOW_23_in_objCClassDef765 = new BitSet(new long[]{0xF000E1C041000040L,0x00000000000007FFL});
    public static final BitSet FOLLOW_38_in_objCClassDef777 = new BitSet(new long[]{0xF000E1C041000040L,0x00000000000007FFL});
    public static final BitSet FOLLOW_39_in_objCClassDef788 = new BitSet(new long[]{0xF000E1C041000040L,0x00000000000007FFL});
    public static final BitSet FOLLOW_40_in_objCClassDef799 = new BitSet(new long[]{0xF000E1C041000040L,0x00000000000007FFL});
    public static final BitSet FOLLOW_varDecl_in_objCClassDef826 = new BitSet(new long[]{0xF000E1C041000040L,0x00000000000007FFL});
    public static final BitSet FOLLOW_functionPointerVarDecl_in_objCClassDef838 = new BitSet(new long[]{0xF000E1C041000040L,0x00000000000007FFL});
    public static final BitSet FOLLOW_24_in_objCClassDef865 = new BitSet(new long[]{0xF800EE0040000040L,0x00000000000007FFL});
    public static final BitSet FOLLOW_objCMethodDecl_in_objCClassDef883 = new BitSet(new long[]{0xF800EE0040000040L,0x00000000000007FFL});
    public static final BitSet FOLLOW_typeDef_in_objCClassDef892 = new BitSet(new long[]{0xF800EE0040000040L,0x00000000000007FFL});
    public static final BitSet FOLLOW_varDecl_in_objCClassDef903 = new BitSet(new long[]{0xF800EE0040000040L,0x00000000000007FFL});
    public static final BitSet FOLLOW_41_in_objCClassDef916 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_42_in_objCMethodDecl950 = new BitSet(new long[]{0x0000000400000040L});
    public static final BitSet FOLLOW_43_in_objCMethodDecl962 = new BitSet(new long[]{0x0000000400000040L});
    public static final BitSet FOLLOW_34_in_objCMethodDecl981 = new BitSet(new long[]{0xF000E00840000040L,0x00000000000007FFL});
    public static final BitSet FOLLOW_typeRef_in_objCMethodDecl989 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_35_in_objCMethodDecl997 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_objCMethodDecl1008 = new BitSet(new long[]{0x0000000210000000L});
    public static final BitSet FOLLOW_33_in_objCMethodDecl1020 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_34_in_objCMethodDecl1022 = new BitSet(new long[]{0xF000E00040000040L,0x00000000000007FFL});
    public static final BitSet FOLLOW_typeRef_in_objCMethodDecl1026 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_35_in_objCMethodDecl1028 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_objCMethodDecl1032 = new BitSet(new long[]{0x0000000018000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_objCMethodDecl1047 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_33_in_objCMethodDecl1049 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_34_in_objCMethodDecl1056 = new BitSet(new long[]{0xF000E00040000040L,0x00000000000007FFL});
    public static final BitSet FOLLOW_typeRef_in_objCMethodDecl1060 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_35_in_objCMethodDecl1062 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_objCMethodDecl1071 = new BitSet(new long[]{0x0000000018000040L});
    public static final BitSet FOLLOW_27_in_objCMethodDecl1090 = new BitSet(new long[]{0x0000100000000000L});
    public static final BitSet FOLLOW_44_in_objCMethodDecl1092 = new BitSet(new long[]{0x0000000010000000L});
    public static final BitSet FOLLOW_28_in_objCMethodDecl1109 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_set_in_structCore1135 = new BitSet(new long[]{0x0000000000800040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_structCore1164 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_exportationModifiers_in_structCore1187 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_structCore1200 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_23_in_structCore1214 = new BitSet(new long[]{0xF807E001C7000040L,0x00000000000007FFL});
    public static final BitSet FOLLOW_48_in_structCore1237 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_49_in_structCore1250 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_50_in_structCore1263 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_33_in_structCore1275 = new BitSet(new long[]{0xF807E001C7000040L,0x00000000000007FFL});
    public static final BitSet FOLLOW_declaration_in_structCore1284 = new BitSet(new long[]{0xF807E001C7000040L,0x00000000000007FFL});
    public static final BitSet FOLLOW_24_in_structCore1298 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_functionDeclaration1337 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_STRING_in_functionDeclaration1339 = new BitSet(new long[]{0xF000E00040000040L,0x00000000000007FFL});
    public static final BitSet FOLLOW_exportationModifiers_in_functionDeclaration1354 = new BitSet(new long[]{0xF000E00040000040L,0x00000000000007FFL});
    public static final BitSet FOLLOW_typeRef_in_functionDeclaration1362 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_exportationModifiers_in_functionDeclaration1371 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_functionDeclaration1379 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_argList_in_functionDeclaration1386 = new BitSet(new long[]{0x0000000010800040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_functionDeclaration1397 = new BitSet(new long[]{0x0000000010800040L});
    public static final BitSet FOLLOW_exportationModifiers_in_functionDeclaration1408 = new BitSet(new long[]{0x0000000010800040L});
    public static final BitSet FOLLOW_28_in_functionDeclaration1420 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_statementsBlock_in_functionDeclaration1427 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_exportationModifier_in_exportationModifiers1460 = new BitSet(new long[]{0x0000000000000042L});
    public static final BitSet FOLLOW_IDENTIFIER_in_modifier1487 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_modifier_in_exportationModifier1519 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_exportationModifier1528 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_34_in_exportationModifier1536 = new BitSet(new long[]{0x0000000800000040L});
    public static final BitSet FOLLOW_extendedModifiers_in_exportationModifier1538 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_35_in_exportationModifier1540 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_modifier_in_extendedModifiers1575 = new BitSet(new long[]{0x0000000000000042L});
    public static final BitSet FOLLOW_modifier_in_argDef1634 = new BitSet(new long[]{0xF000E00040000040L,0x00000000000007FFL});
    public static final BitSet FOLLOW_modifier_in_argDef1651 = new BitSet(new long[]{0xF000E00040000040L,0x00000000000007FFL});
    public static final BitSet FOLLOW_typeRef_in_argDef1675 = new BitSet(new long[]{0x0418000420000042L});
    public static final BitSet FOLLOW_declarator_in_argDef1690 = new BitSet(new long[]{0x0000000020000002L});
    public static final BitSet FOLLOW_29_in_argDef1710 = new BitSet(new long[]{0x00380804800007F0L,0x000001F001800000L});
    public static final BitSet FOLLOW_expression_in_argDef1712 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_44_in_argDef1726 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_typeMutator1746 = new BitSet(new long[]{0x0008000000000000L});
    public static final BitSet FOLLOW_51_in_typeMutator1748 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_51_in_typeMutator1756 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_52_in_typeMutator1764 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_53_in_typeMutator1773 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_54_in_typeMutator1775 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_53_in_arrayTypeMutator1793 = new BitSet(new long[]{0x00380804800007F0L,0x000001F001800000L});
    public static final BitSet FOLLOW_expression_in_arrayTypeMutator1799 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_54_in_arrayTypeMutator1808 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_typeRefCore1848 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_34_in_typeRefCore1851 = new BitSet(new long[]{0x0080000000000000L});
    public static final BitSet FOLLOW_55_in_typeRefCore1853 = new BitSet(new long[]{0x04180C3000000000L,0x00000000007FF800L});
    public static final BitSet FOLLOW_binaryOp_in_typeRefCore1855 = new BitSet(new long[]{0x00380804800007F0L,0x000001F001800000L});
    public static final BitSet FOLLOW_expression_in_typeRefCore1857 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_35_in_typeRefCore1859 = new BitSet(new long[]{0xF000000000000040L,0x00000000000007FFL});
    public static final BitSet FOLLOW_modifier_in_typeRefCore1870 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_34_in_typeRefCore1873 = new BitSet(new long[]{0x00380804800007F0L,0x000001F001800000L});
    public static final BitSet FOLLOW_expression_in_typeRefCore1875 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_35_in_typeRefCore1877 = new BitSet(new long[]{0xF000000000000040L,0x00000000000007FFL});
    public static final BitSet FOLLOW_modifier_in_typeRefCore1890 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_34_in_typeRefCore1893 = new BitSet(new long[]{0x00380804800007F0L,0x000001F001800000L});
    public static final BitSet FOLLOW_expression_in_typeRefCore1895 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_typeRefCore1897 = new BitSet(new long[]{0x00380804800007F0L,0x000001F001800000L});
    public static final BitSet FOLLOW_expression_in_typeRefCore1899 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_35_in_typeRefCore1901 = new BitSet(new long[]{0xF000000000000040L,0x00000000000007FFL});
    public static final BitSet FOLLOW_modifier_in_typeRefCore1918 = new BitSet(new long[]{0xF000000000000040L,0x00000000000007FFL});
    public static final BitSet FOLLOW_modifier_in_typeRefCore1935 = new BitSet(new long[]{0xF000E00040000040L,0x00000000000007FFL});
    public static final BitSet FOLLOW_typeRef_in_typeRefCore1944 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_primitiveTypeRef_in_typeRefCore1964 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_typeRefCore1979 = new BitSet(new long[]{0x0000001000000002L});
    public static final BitSet FOLLOW_36_in_typeRefCore1997 = new BitSet(new long[]{0xF000E02040000040L,0x00000000000007FFL});
    public static final BitSet FOLLOW_typeRef_in_typeRefCore2018 = new BitSet(new long[]{0x0000002008000000L});
    public static final BitSet FOLLOW_27_in_typeRefCore2039 = new BitSet(new long[]{0xF000E00040000040L,0x00000000000007FFL});
    public static final BitSet FOLLOW_typeRef_in_typeRefCore2052 = new BitSet(new long[]{0x0000002008000000L});
    public static final BitSet FOLLOW_37_in_typeRefCore2080 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_56_in_templateDef2112 = new BitSet(new long[]{0x0000001000000000L});
    public static final BitSet FOLLOW_36_in_templateDef2114 = new BitSet(new long[]{0xF200402000000000L,0x00000000000007FFL});
    public static final BitSet FOLLOW_templateArgDecl_in_templateDef2117 = new BitSet(new long[]{0x0000002008000000L});
    public static final BitSet FOLLOW_27_in_templateDef2120 = new BitSet(new long[]{0xF200400000000000L,0x00000000000007FFL});
    public static final BitSet FOLLOW_templateArgDecl_in_templateDef2122 = new BitSet(new long[]{0x0000002008000000L});
    public static final BitSet FOLLOW_37_in_templateDef2129 = new BitSet(new long[]{0x0000E00000000000L});
    public static final BitSet FOLLOW_structCore_in_templateDef2133 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_functionDeclaration_in_templateDef2137 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_primitiveTypeRef_in_templateArgDecl2149 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_templateArgDecl2152 = new BitSet(new long[]{0x00000000000007B0L});
    public static final BitSet FOLLOW_constant_in_templateArgDecl2154 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_set_in_templateArgDecl2161 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_templateArgDecl2169 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_templateArgDecl2172 = new BitSet(new long[]{0xF000E00040000040L,0x00000000000007FFL});
    public static final BitSet FOLLOW_typeRef_in_templateArgDecl2174 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_34_in_functionSignatureSuffix2193 = new BitSet(new long[]{0x0008000000000040L});
    public static final BitSet FOLLOW_exportationModifiers_in_functionSignatureSuffix2195 = new BitSet(new long[]{0x0008000000000000L});
    public static final BitSet FOLLOW_51_in_functionSignatureSuffix2197 = new BitSet(new long[]{0x0000000800000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_functionSignatureSuffix2199 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_35_in_functionSignatureSuffix2202 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_34_in_functionSignatureSuffix2208 = new BitSet(new long[]{0xF000F00840000040L,0x00000000000007FFL});
    public static final BitSet FOLLOW_argDef_in_functionSignatureSuffix2217 = new BitSet(new long[]{0x0000000808000000L});
    public static final BitSet FOLLOW_27_in_functionSignatureSuffix2230 = new BitSet(new long[]{0xF000F00040000040L,0x00000000000007FFL});
    public static final BitSet FOLLOW_argDef_in_functionSignatureSuffix2239 = new BitSet(new long[]{0x0000000808000000L});
    public static final BitSet FOLLOW_35_in_functionSignatureSuffix2254 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_34_in_functionSignatureSuffixNoName2271 = new BitSet(new long[]{0x0008000000000040L});
    public static final BitSet FOLLOW_exportationModifiers_in_functionSignatureSuffixNoName2273 = new BitSet(new long[]{0x0008000000000000L});
    public static final BitSet FOLLOW_51_in_functionSignatureSuffixNoName2275 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_35_in_functionSignatureSuffixNoName2277 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_34_in_functionSignatureSuffixNoName2283 = new BitSet(new long[]{0xF000F00840000040L,0x00000000000007FFL});
    public static final BitSet FOLLOW_argDef_in_functionSignatureSuffixNoName2292 = new BitSet(new long[]{0x0000000808000000L});
    public static final BitSet FOLLOW_27_in_functionSignatureSuffixNoName2305 = new BitSet(new long[]{0xF000F00040000040L,0x00000000000007FFL});
    public static final BitSet FOLLOW_argDef_in_functionSignatureSuffixNoName2314 = new BitSet(new long[]{0x0000000808000000L});
    public static final BitSet FOLLOW_35_in_functionSignatureSuffixNoName2329 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_structCore_in_structOrEnum2347 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_enumCore_in_structOrEnum2355 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeRefCore_in_typeRefCoreOrFuncSig2373 = new BitSet(new long[]{0x0038000400000042L});
    public static final BitSet FOLLOW_typeMutator_in_typeRefCoreOrFuncSig2390 = new BitSet(new long[]{0x0038000400000040L});
    public static final BitSet FOLLOW_functionSignatureSuffix_in_typeRefCoreOrFuncSig2403 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeRefCore_in_typeRefCoreOrAnonymousFuncSig2427 = new BitSet(new long[]{0x0038000400000042L});
    public static final BitSet FOLLOW_typeMutator_in_typeRefCoreOrAnonymousFuncSig2444 = new BitSet(new long[]{0x0038000400000040L});
    public static final BitSet FOLLOW_functionSignatureSuffixNoName_in_typeRefCoreOrAnonymousFuncSig2457 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_structOrEnum_in_plainTypeRef2484 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeRefCoreOrFuncSig_in_plainTypeRef2492 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_modifier_in_declarator2521 = new BitSet(new long[]{0x0418000400000040L});
    public static final BitSet FOLLOW_set_in_declarator2558 = new BitSet(new long[]{0x0418000400000040L});
    public static final BitSet FOLLOW_declarator_in_declarator2577 = new BitSet(new long[]{0x0000000020000002L});
    public static final BitSet FOLLOW_directDeclarator_in_declarator2593 = new BitSet(new long[]{0x0000000020000002L});
    public static final BitSet FOLLOW_29_in_declarator2612 = new BitSet(new long[]{0x00380804800007F0L,0x000001F001800000L});
    public static final BitSet FOLLOW_expression_in_declarator2619 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_structCore_in_namedTypeRef2653 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_enumCore_in_namedTypeRef2663 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_59_in_typeDef2682 = new BitSet(new long[]{0xF000E00040000040L,0x00000000000007FFL});
    public static final BitSet FOLLOW_varDecl_in_typeDef2688 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_varDecl_in_varDeclEOF2708 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_varDeclEOF2710 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_modifier_in_varDecl2746 = new BitSet(new long[]{0xF000E00040000040L,0x00000000000007FFL});
    public static final BitSet FOLLOW_modifier_in_varDecl2763 = new BitSet(new long[]{0xF000E00040000040L,0x00000000000007FFL});
    public static final BitSet FOLLOW_structOrEnum_in_varDecl2790 = new BitSet(new long[]{0x0418000410000040L});
    public static final BitSet FOLLOW_declaratorsList_in_varDecl2807 = new BitSet(new long[]{0x0000000010000000L});
    public static final BitSet FOLLOW_typeRefCoreOrAnonymousFuncSig_in_varDecl2827 = new BitSet(new long[]{0x0418000400000040L});
    public static final BitSet FOLLOW_declaratorsList_in_varDecl2837 = new BitSet(new long[]{0x0000000010000000L});
    public static final BitSet FOLLOW_28_in_varDecl2874 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_36_in_objCProtocolRefList2888 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_objCProtocolRefList2893 = new BitSet(new long[]{0x0000002008000000L});
    public static final BitSet FOLLOW_27_in_objCProtocolRefList2903 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_objCProtocolRefList2909 = new BitSet(new long[]{0x0000002008000000L});
    public static final BitSet FOLLOW_37_in_objCProtocolRefList2919 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_declarator_in_declaratorsList2946 = new BitSet(new long[]{0x0000000008000002L});
    public static final BitSet FOLLOW_27_in_declaratorsList2959 = new BitSet(new long[]{0x0418000400000040L});
    public static final BitSet FOLLOW_declarator_in_declaratorsList2968 = new BitSet(new long[]{0x0000000008000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_directDeclarator3011 = new BitSet(new long[]{0x0020000400000002L});
    public static final BitSet FOLLOW_34_in_directDeclarator3021 = new BitSet(new long[]{0x0418000400000040L});
    public static final BitSet FOLLOW_modifier_in_directDeclarator3030 = new BitSet(new long[]{0x0418000400000040L});
    public static final BitSet FOLLOW_declarator_in_directDeclarator3041 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_35_in_directDeclarator3047 = new BitSet(new long[]{0x0020000400000002L});
    public static final BitSet FOLLOW_53_in_directDeclarator3062 = new BitSet(new long[]{0x00780804800007F0L,0x000001F001800000L});
    public static final BitSet FOLLOW_expression_in_directDeclarator3074 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_54_in_directDeclarator3090 = new BitSet(new long[]{0x0020000400000002L});
    public static final BitSet FOLLOW_argList_in_directDeclarator3098 = new BitSet(new long[]{0x0020000400000002L});
    public static final BitSet FOLLOW_34_in_argList3126 = new BitSet(new long[]{0xF000F00840000040L,0x00000000000007FFL});
    public static final BitSet FOLLOW_argDef_in_argList3138 = new BitSet(new long[]{0x0000000808000000L});
    public static final BitSet FOLLOW_27_in_argList3151 = new BitSet(new long[]{0xF000F00040000040L,0x00000000000007FFL});
    public static final BitSet FOLLOW_argDef_in_argList3160 = new BitSet(new long[]{0x0000000808000000L});
    public static final BitSet FOLLOW_27_in_argList3180 = new BitSet(new long[]{0x0000100000000000L});
    public static final BitSet FOLLOW_44_in_argList3182 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_35_in_argList3201 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_plainTypeRef_in_typeRef3219 = new BitSet(new long[]{0x0038000000000042L});
    public static final BitSet FOLLOW_typeMutator_in_typeRef3230 = new BitSet(new long[]{0x0038000000000042L});
    public static final BitSet FOLLOW_set_in_primSignModifier0 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_set_in_primSizeModifier0 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_set_in_primitiveTypeName0 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_primSignModifier_in_primitiveTypeRef3369 = new BitSet(new long[]{0xF000000000000000L,0x00000000000007FFL});
    public static final BitSet FOLLOW_primSizeModifier_in_primitiveTypeRef3380 = new BitSet(new long[]{0xF000000000000000L,0x00000000000007FFL});
    public static final BitSet FOLLOW_primSizeModifier_in_primitiveTypeRef3387 = new BitSet(new long[]{0xF000000000000000L,0x00000000000007FFL});
    public static final BitSet FOLLOW_primitiveTypeName_in_primitiveTypeRef3425 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_53_in_objCMethodCall3466 = new BitSet(new long[]{0x00380804800007F0L,0x000001F001800000L});
    public static final BitSet FOLLOW_expression_in_objCMethodCall3470 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_objCMethodCall3474 = new BitSet(new long[]{0x0040000200000000L});
    public static final BitSet FOLLOW_33_in_objCMethodCall3485 = new BitSet(new long[]{0x00380804800007F0L,0x000001F001800000L});
    public static final BitSet FOLLOW_expression_in_objCMethodCall3489 = new BitSet(new long[]{0x0040000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_objCMethodCall3504 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_33_in_objCMethodCall3506 = new BitSet(new long[]{0x00380804800007F0L,0x000001F001800000L});
    public static final BitSet FOLLOW_expression_in_objCMethodCall3510 = new BitSet(new long[]{0x0040000000000040L});
    public static final BitSet FOLLOW_54_in_objCMethodCall3527 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_functionCall3551 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_34_in_functionCall3553 = new BitSet(new long[]{0x0038080C800007F0L,0x000001F001800000L});
    public static final BitSet FOLLOW_expression_in_functionCall3566 = new BitSet(new long[]{0x0000000808000000L});
    public static final BitSet FOLLOW_27_in_functionCall3575 = new BitSet(new long[]{0x00380804800007F0L,0x000001F001800000L});
    public static final BitSet FOLLOW_expression_in_functionCall3584 = new BitSet(new long[]{0x0000000808000000L});
    public static final BitSet FOLLOW_35_in_functionCall3602 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_set_in_binaryOp0 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_baseExpression3706 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_constant_in_baseExpression3714 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_34_in_baseExpression3722 = new BitSet(new long[]{0x00380804800007F0L,0x000001F001800000L});
    public static final BitSet FOLLOW_expression_in_baseExpression3724 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_35_in_baseExpression3726 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_messageExpr_in_baseExpression3734 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_selectorExpr_in_baseExpression3740 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_protocolExpr_in_baseExpression3746 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_encodingExpr_in_baseExpression3752 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_53_in_messageExpr3768 = new BitSet(new long[]{0x00380804800007F0L,0x000001F001800000L});
    public static final BitSet FOLLOW_expression_in_messageExpr3772 = new BitSet(new long[]{0x0000000200000040L});
    public static final BitSet FOLLOW_messageSelector_in_messageExpr3774 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_54_in_messageExpr3779 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_messageSelector3790 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_messageSelector3798 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_33_in_messageSelector3801 = new BitSet(new long[]{0x00380804800007F0L,0x000001F001800000L});
    public static final BitSet FOLLOW_expression_in_messageSelector3803 = new BitSet(new long[]{0x0000000200000042L});
    public static final BitSet FOLLOW_87_in_selectorExpr3820 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_34_in_selectorExpr3825 = new BitSet(new long[]{0x0000000200000040L});
    public static final BitSet FOLLOW_selectorName_in_selectorExpr3830 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_35_in_selectorExpr3835 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_selectorName3846 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_selectorName3854 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_33_in_selectorName3857 = new BitSet(new long[]{0x0000000200000042L});
    public static final BitSet FOLLOW_31_in_protocolExpr3870 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_34_in_protocolExpr3874 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_protocolExpr3878 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_35_in_protocolExpr3882 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_88_in_encodingExpr3893 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_34_in_encodingExpr3898 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_encodingExpr3902 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_35_in_encodingExpr3907 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_inlineCondExpr_in_assignmentExpr3924 = new BitSet(new long[]{0x0000000020000002L,0x00000007FE000000L});
    public static final BitSet FOLLOW_assignmentOp_in_assignmentExpr3940 = new BitSet(new long[]{0x00380804800007F0L,0x000001F001800000L});
    public static final BitSet FOLLOW_assignmentExpr_in_assignmentExpr3944 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_set_in_assignmentOp3970 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_logOrExpr_in_inlineCondExpr4031 = new BitSet(new long[]{0x0000000000000002L,0x0000000800000000L});
    public static final BitSet FOLLOW_99_in_inlineCondExpr4043 = new BitSet(new long[]{0x00380804800007F0L,0x000001F001800000L});
    public static final BitSet FOLLOW_logOrExpr_in_inlineCondExpr4048 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_33_in_inlineCondExpr4054 = new BitSet(new long[]{0x00380804800007F0L,0x000001F001800000L});
    public static final BitSet FOLLOW_logOrExpr_in_inlineCondExpr4059 = new BitSet(new long[]{0x0000000000000002L,0x0000000800000000L});
    public static final BitSet FOLLOW_multExpr_in_addExpr4081 = new BitSet(new long[]{0x00000C0000000002L});
    public static final BitSet FOLLOW_set_in_addExpr4094 = new BitSet(new long[]{0x00380804800007F0L,0x000001F001800000L});
    public static final BitSet FOLLOW_multExpr_in_addExpr4107 = new BitSet(new long[]{0x00000C0000000002L});
    public static final BitSet FOLLOW_castExpr_in_multExpr4131 = new BitSet(new long[]{0x0008000000000002L,0x0000000000001800L});
    public static final BitSet FOLLOW_set_in_multExpr4145 = new BitSet(new long[]{0x00380804800007F0L,0x000001F001800000L});
    public static final BitSet FOLLOW_castExpr_in_multExpr4163 = new BitSet(new long[]{0x0008000000000002L,0x0000000000001800L});
    public static final BitSet FOLLOW_xorExpr_in_bitOrExpr4187 = new BitSet(new long[]{0x0000000000000002L,0x0000000000020000L});
    public static final BitSet FOLLOW_81_in_bitOrExpr4201 = new BitSet(new long[]{0x00380804800007F0L,0x000001F001800000L});
    public static final BitSet FOLLOW_xorExpr_in_bitOrExpr4208 = new BitSet(new long[]{0x0000000000000002L,0x0000000000020000L});
    public static final BitSet FOLLOW_equalExpr_in_bitAndExpr4232 = new BitSet(new long[]{0x0010000000000002L});
    public static final BitSet FOLLOW_52_in_bitAndExpr4245 = new BitSet(new long[]{0x00380804800007F0L,0x000001F001800000L});
    public static final BitSet FOLLOW_equalExpr_in_bitAndExpr4252 = new BitSet(new long[]{0x0010000000000002L});
    public static final BitSet FOLLOW_addExpr_in_shiftExpr4277 = new BitSet(new long[]{0x0000000000000002L,0x000000000000A000L});
    public static final BitSet FOLLOW_set_in_shiftExpr4290 = new BitSet(new long[]{0x00380804800007F0L,0x000001F001800000L});
    public static final BitSet FOLLOW_addExpr_in_shiftExpr4303 = new BitSet(new long[]{0x0000000000000002L,0x000000000000A000L});
    public static final BitSet FOLLOW_bitAndExpr_in_xorExpr4327 = new BitSet(new long[]{0x0400000000000002L});
    public static final BitSet FOLLOW_58_in_xorExpr4340 = new BitSet(new long[]{0x00380804800007F0L,0x000001F001800000L});
    public static final BitSet FOLLOW_bitAndExpr_in_xorExpr4347 = new BitSet(new long[]{0x0400000000000002L});
    public static final BitSet FOLLOW_logAndExpr_in_logOrExpr4371 = new BitSet(new long[]{0x0000000000000002L,0x0000000000010000L});
    public static final BitSet FOLLOW_80_in_logOrExpr4384 = new BitSet(new long[]{0x00380804800007F0L,0x000001F001800000L});
    public static final BitSet FOLLOW_logAndExpr_in_logOrExpr4391 = new BitSet(new long[]{0x0000000000000002L,0x0000000000010000L});
    public static final BitSet FOLLOW_bitOrExpr_in_logAndExpr4415 = new BitSet(new long[]{0x0000000000000002L,0x0000000000040000L});
    public static final BitSet FOLLOW_82_in_logAndExpr4428 = new BitSet(new long[]{0x00380804800007F0L,0x000001F001800000L});
    public static final BitSet FOLLOW_bitOrExpr_in_logAndExpr4435 = new BitSet(new long[]{0x0000000000000002L,0x0000000000040000L});
    public static final BitSet FOLLOW_compareExpr_in_equalExpr4459 = new BitSet(new long[]{0x0000000000000002L,0x0000000000600000L});
    public static final BitSet FOLLOW_set_in_equalExpr4472 = new BitSet(new long[]{0x00380804800007F0L,0x000001F001800000L});
    public static final BitSet FOLLOW_compareExpr_in_equalExpr4485 = new BitSet(new long[]{0x0000000000000002L,0x0000000000600000L});
    public static final BitSet FOLLOW_shiftExpr_in_compareExpr4509 = new BitSet(new long[]{0x0000003000000002L,0x0000000000180000L});
    public static final BitSet FOLLOW_set_in_compareExpr4522 = new BitSet(new long[]{0x00380804800007F0L,0x000001F001800000L});
    public static final BitSet FOLLOW_shiftExpr_in_compareExpr4544 = new BitSet(new long[]{0x0000003000000002L,0x0000000000180000L});
    public static final BitSet FOLLOW_34_in_castExpr4566 = new BitSet(new long[]{0xF000E00040000040L,0x00000000000007FFL});
    public static final BitSet FOLLOW_typeRef_in_castExpr4568 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_35_in_castExpr4570 = new BitSet(new long[]{0x00380804800007F0L,0x000001F001800000L});
    public static final BitSet FOLLOW_castExpr_in_castExpr4574 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_unaryExpr_in_castExpr4585 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_postfixExpr_in_unaryExpr4607 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_unaryOp_in_unaryExpr4615 = new BitSet(new long[]{0x00380804800007F0L,0x000001F001800000L});
    public static final BitSet FOLLOW_castExpr_in_unaryExpr4617 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_100_in_unaryExpr4625 = new BitSet(new long[]{0x00380804800007F0L,0x000001F001800000L});
    public static final BitSet FOLLOW_34_in_unaryExpr4632 = new BitSet(new long[]{0xF000E00040000040L,0x00000000000007FFL});
    public static final BitSet FOLLOW_typeRef_in_unaryExpr4634 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_35_in_unaryExpr4636 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_unaryExpr_in_unaryExpr4644 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_set_in_unaryOp0 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_baseExpression_in_postfixExpr4701 = new BitSet(new long[]{0x0020000400000002L,0x0000066000000000L});
    public static final BitSet FOLLOW_53_in_postfixExpr4712 = new BitSet(new long[]{0x00380804800007F0L,0x000001F001800000L});
    public static final BitSet FOLLOW_expression_in_postfixExpr4714 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_54_in_postfixExpr4716 = new BitSet(new long[]{0x0020000400000002L,0x0000066000000000L});
    public static final BitSet FOLLOW_34_in_postfixExpr4725 = new BitSet(new long[]{0x0038080C800007F0L,0x000001F001800000L});
    public static final BitSet FOLLOW_topLevelExprList_in_postfixExpr4727 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_35_in_postfixExpr4730 = new BitSet(new long[]{0x0020000400000002L,0x0000066000000000L});
    public static final BitSet FOLLOW_105_in_postfixExpr4739 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_postfixExpr4743 = new BitSet(new long[]{0x0020000400000002L,0x0000066000000000L});
    public static final BitSet FOLLOW_106_in_postfixExpr4752 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_postfixExpr4756 = new BitSet(new long[]{0x0020000400000002L,0x0000066000000000L});
    public static final BitSet FOLLOW_101_in_postfixExpr4765 = new BitSet(new long[]{0x0020000400000002L,0x0000066000000000L});
    public static final BitSet FOLLOW_102_in_postfixExpr4774 = new BitSet(new long[]{0x0020000400000002L,0x0000066000000000L});
    public static final BitSet FOLLOW_assignmentExpr_in_topLevelExpr4798 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_topLevelExpr_in_topLevelExprList4823 = new BitSet(new long[]{0x0000000008000002L});
    public static final BitSet FOLLOW_27_in_topLevelExprList4834 = new BitSet(new long[]{0x00380804800007F0L,0x000001F001800000L});
    public static final BitSet FOLLOW_topLevelExpr_in_topLevelExprList4841 = new BitSet(new long[]{0x0000000008000002L});
    public static final BitSet FOLLOW_topLevelExprList_in_expression4865 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_23_in_statementsBlock4888 = new BitSet(new long[]{0xF8B8E805D78007F0L,0x0001E9F0018007FFL});
    public static final BitSet FOLLOW_statement_in_statementsBlock4898 = new BitSet(new long[]{0xF8B8E805D78007F0L,0x0001E9F0018007FFL});
    public static final BitSet FOLLOW_24_in_statementsBlock4910 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_statementsBlock_in_statement4929 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_declaration_in_statement4937 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_statement4946 = new BitSet(new long[]{0x0000000010000000L});
    public static final BitSet FOLLOW_28_in_statement4948 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_55_in_statement4958 = new BitSet(new long[]{0x00380804800007F0L,0x000001F001800000L});
    public static final BitSet FOLLOW_expression_in_statement4962 = new BitSet(new long[]{0x0000000010000000L});
    public static final BitSet FOLLOW_28_in_statement4964 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_107_in_statement4972 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_34_in_statement4974 = new BitSet(new long[]{0x00380804800007F0L,0x000001F001800000L});
    public static final BitSet FOLLOW_expression_in_statement4976 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_35_in_statement4978 = new BitSet(new long[]{0xF8B8E805D68007F0L,0x0001E9F0018007FFL});
    public static final BitSet FOLLOW_statement_in_statement4980 = new BitSet(new long[]{0x0000000000000002L,0x0000100000000000L});
    public static final BitSet FOLLOW_108_in_statement4983 = new BitSet(new long[]{0xF8B8E805D68007F0L,0x0001E9F0018007FFL});
    public static final BitSet FOLLOW_statement_in_statement4985 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_109_in_statement4994 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_34_in_statement4996 = new BitSet(new long[]{0x00380804800007F0L,0x000001F001800000L});
    public static final BitSet FOLLOW_expression_in_statement4998 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_35_in_statement5000 = new BitSet(new long[]{0xF8B8E805D68007F0L,0x0001E9F0018007FFL});
    public static final BitSet FOLLOW_statement_in_statement5002 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_110_in_statement5009 = new BitSet(new long[]{0xF8B8E805D68007F0L,0x0001E9F0018007FFL});
    public static final BitSet FOLLOW_statement_in_statement5011 = new BitSet(new long[]{0x0000000000000000L,0x0000200000000000L});
    public static final BitSet FOLLOW_109_in_statement5013 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_34_in_statement5015 = new BitSet(new long[]{0x00380804800007F0L,0x000001F001800000L});
    public static final BitSet FOLLOW_expression_in_statement5017 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_35_in_statement5019 = new BitSet(new long[]{0x0000000010000000L});
    public static final BitSet FOLLOW_28_in_statement5021 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_111_in_statement5028 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_34_in_statement5030 = new BitSet(new long[]{0xF8B8E805D68007F0L,0x0001E9F0018007FFL});
    public static final BitSet FOLLOW_statement_in_statement5032 = new BitSet(new long[]{0x0000000010000000L});
    public static final BitSet FOLLOW_28_in_statement5035 = new BitSet(new long[]{0x00380804900007F0L,0x000001F001800000L});
    public static final BitSet FOLLOW_expression_in_statement5037 = new BitSet(new long[]{0x0000000010000000L});
    public static final BitSet FOLLOW_28_in_statement5040 = new BitSet(new long[]{0xF8B8E80DD68007F0L,0x0001E9F0018007FFL});
    public static final BitSet FOLLOW_statement_in_statement5042 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_35_in_statement5045 = new BitSet(new long[]{0xF8B8E805D68007F0L,0x0001E9F0018007FFL});
    public static final BitSet FOLLOW_statement_in_statement5047 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_112_in_statement5054 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_34_in_statement5056 = new BitSet(new long[]{0x00380804800007F0L,0x000001F001800000L});
    public static final BitSet FOLLOW_expression_in_statement5058 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_35_in_statement5060 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_23_in_statement5062 = new BitSet(new long[]{0xF8B8E805D78007F0L,0x0003E9F0018007FFL});
    public static final BitSet FOLLOW_113_in_statement5069 = new BitSet(new long[]{0x00380804800007F0L,0x000001F001800000L});
    public static final BitSet FOLLOW_expression_in_statement5071 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_33_in_statement5073 = new BitSet(new long[]{0xF8B8E805D78007F0L,0x0003E9F0018007FFL});
    public static final BitSet FOLLOW_statement_in_statement5080 = new BitSet(new long[]{0xF8B8E805D78007F0L,0x0003E9F0018007FFL});
    public static final BitSet FOLLOW_24_in_statement5089 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_28_in_statement5095 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_statement5103 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_34_in_statement5105 = new BitSet(new long[]{0xF000E00040000040L,0x00000000000007FFL});
    public static final BitSet FOLLOW_varDecl_in_statement5107 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_33_in_statement5109 = new BitSet(new long[]{0x00380804800007F0L,0x000001F001800000L});
    public static final BitSet FOLLOW_expression_in_statement5111 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_35_in_statement5113 = new BitSet(new long[]{0xF8B8E805D68007F0L,0x0001E9F0018007FFL});
    public static final BitSet FOLLOW_statement_in_statement5115 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DECIMAL_NUMBER_in_constant5132 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_HEXADECIMAL_NUMBER_in_constant5140 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OCTAL_NUMBER_in_constant5148 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARACTER_in_constant5156 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_FLOAT_NUMBER_in_constant5164 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_STRING_in_constant5175 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_functionDeclaration_in_synpred6_ObjCpp247 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_varDecl_in_synpred8_ObjCpp267 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_synpred15_ObjCpp508 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_varDecl_in_synpred29_ObjCpp826 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_synpred43_ObjCpp1164 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_exportationModifiers_in_synpred44_ObjCpp1187 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeRef_in_synpred52_ObjCpp1362 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_synpred53_ObjCpp1397 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_exportationModifier_in_synpred55_ObjCpp1460 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_modifier_in_synpred58_ObjCpp1634 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_modifier_in_synpred59_ObjCpp1651 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_modifier_in_synpred67_ObjCpp1870 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_34_in_synpred67_ObjCpp1873 = new BitSet(new long[]{0x00380804800007F0L,0x000001F001800000L});
    public static final BitSet FOLLOW_expression_in_synpred67_ObjCpp1875 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_35_in_synpred67_ObjCpp1877 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_modifier_in_synpred68_ObjCpp1890 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_34_in_synpred68_ObjCpp1893 = new BitSet(new long[]{0x00380804800007F0L,0x000001F001800000L});
    public static final BitSet FOLLOW_expression_in_synpred68_ObjCpp1895 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_synpred68_ObjCpp1897 = new BitSet(new long[]{0x00380804800007F0L,0x000001F001800000L});
    public static final BitSet FOLLOW_expression_in_synpred68_ObjCpp1899 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_35_in_synpred68_ObjCpp1901 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_modifier_in_synpred69_ObjCpp1918 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_modifier_in_synpred70_ObjCpp1935 = new BitSet(new long[]{0xF000E00040000040L,0x00000000000007FFL});
    public static final BitSet FOLLOW_typeRef_in_synpred70_ObjCpp1944 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeMutator_in_synpred87_ObjCpp2390 = new BitSet(new long[]{0x0038000400000040L});
    public static final BitSet FOLLOW_functionSignatureSuffix_in_synpred87_ObjCpp2403 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeMutator_in_synpred89_ObjCpp2444 = new BitSet(new long[]{0x0038000400000040L});
    public static final BitSet FOLLOW_functionSignatureSuffixNoName_in_synpred89_ObjCpp2457 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_modifier_in_synpred91_ObjCpp2521 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_29_in_synpred95_ObjCpp2612 = new BitSet(new long[]{0x00380804800007F0L,0x000001F001800000L});
    public static final BitSet FOLLOW_expression_in_synpred95_ObjCpp2619 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_modifier_in_synpred97_ObjCpp2746 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_modifier_in_synpred98_ObjCpp2763 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_modifier_in_synpred104_ObjCpp3030 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_27_in_synpred108_ObjCpp3151 = new BitSet(new long[]{0xF000F00040000040L,0x00000000000007FFL});
    public static final BitSet FOLLOW_argDef_in_synpred108_ObjCpp3160 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeMutator_in_synpred111_ObjCpp3230 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_assignmentOp_in_synpred163_ObjCpp3940 = new BitSet(new long[]{0x00380804800007F0L,0x000001F001800000L});
    public static final BitSet FOLLOW_assignmentExpr_in_synpred163_ObjCpp3944 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_34_in_synpred193_ObjCpp4566 = new BitSet(new long[]{0xF000E00040000040L,0x00000000000007FFL});
    public static final BitSet FOLLOW_typeRef_in_synpred193_ObjCpp4568 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_35_in_synpred193_ObjCpp4570 = new BitSet(new long[]{0x00380804800007F0L,0x000001F001800000L});
    public static final BitSet FOLLOW_castExpr_in_synpred193_ObjCpp4574 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_34_in_synpred196_ObjCpp4632 = new BitSet(new long[]{0xF000E00040000040L,0x00000000000007FFL});
    public static final BitSet FOLLOW_typeRef_in_synpred196_ObjCpp4634 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_35_in_synpred196_ObjCpp4636 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_27_in_synpred210_ObjCpp4834 = new BitSet(new long[]{0x00380804800007F0L,0x000001F001800000L});
    public static final BitSet FOLLOW_topLevelExpr_in_synpred210_ObjCpp4841 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_declaration_in_synpred213_ObjCpp4937 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_synpred214_ObjCpp4946 = new BitSet(new long[]{0x0000000010000000L});
    public static final BitSet FOLLOW_28_in_synpred214_ObjCpp4948 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_108_in_synpred216_ObjCpp4983 = new BitSet(new long[]{0xF8B8E805D68007F0L,0x0001E9F0018007FFL});
    public static final BitSet FOLLOW_statement_in_synpred216_ObjCpp4985 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_statement_in_synpred220_ObjCpp5032 = new BitSet(new long[]{0x0000000000000002L});

}