#summary Technical links on parsing, complex computer language features and runtime internals
#sidebar sidebar

= Parsing = 

 * [http://www.cs.bris.ac.uk/Teaching/Resources/General/antlr/doc/lexer.html Lexical Analysis with ANTLR (tons of tricks !)]
 * [https://rails.wincent.com/wiki/ANTLR_predicates ANTLR predicates]

= C / C++ = 

 * [http://www.scs.cs.nyu.edu/~dm/c++-new.html C++'s operator new]
 * [http://msdn.microsoft.com/en-us/library/1x82y1z4(VS.80).aspx Interpreting More Complex Declarators (MSDN)] (that one gives me nightmares and tears the compiler apart !!!)
 * [http://msdn.microsoft.com/en-us/library/4x7sfztk(VS.80).aspx Typedef Declarations (C) (MSDN)]
 * [http://www.georgehernandez.com/h/xComputers/Cs/ReservedKeywords.asp Reserved Keywords]
 * [http://root.cern.ch/drupal/content/cint Cint : A C/C++ Interpreter]
 * [http://www.clarionmag.com/cmag/v1/v1n8olepart2.html]

= Calling Conventions = 

 * [http://en.wikibooks.org/wiki/Reverse_Engineering/Calling_Conventions#THISCALL]
 * [http://en.wikipedia.org/wiki/X86_calling_conventions#optlink]

= C++ Name Mangling =

 * [http://en.wikipedia.org/wiki/Name_mangling#How_different_compilers_mangle_the_same_functions]
 * [http://en.wikipedia.org/wiki/Microsoft_Visual_C%2B%2B_Name_Mangling]
 * [http://www.fortran-2000.com/ArnaudRecipes/sharedlib.html]
 * [http://mearie.org/documents/mscmangle]

= Objective-C =

 * [http://theocacao.com/document.page/510 A Quick Objective-C 2.0 Tutorial]
 * [http://www.mactech.com/articles/mactech/Vol.13/13.03/CandObjectiveCCompared/ C++ Versus Objective-C]
 * [http://pierre-chatelier.developpez.com/tutoriels/mac/objectivec/migration/ De C++ Ã  Objective-C]

= Java =

 * [http://www.md.pp.ru/~eu/jdk6options.html The most complete list of -XX options for Java 6 JVM]

= Other interoperability tools =

JNAerator builds on the following libraries (also see [CreditsAndLicense]) :
 * [http://jna.dev.java.net/ JNA (Java/C interop layer)]
 * [http://rococoa.dev.java.net/ Rococoa (Java/ObjectiveC interop layer]
 * [http://www.anarres.org/projects/jcpp/ Anarres (a Java C preprocessor)]
 * [http://www.antlr.org ANTLR (parser generator)]

And some of its goal and achievements are similar to these opensource projects :
 * [https://com4j.dev.java.net/ com4j : integration of Java and COM]
 * [http://code.google.com/p/javada/ JavAda (An object oriented Java to Ada binding generator)]
 * [http://code.google.com/p/jnyikes/ JNYikes (A simple and easy JNI wrapper)]
 * [https://gluegen.dev.java.net/ GlueGen (Java/JNI glue code generator to call out to ANSI C)]
 * [http://www.swig.org/ SWIG (connects programs written in C and C++ with a variety of high-level programming languages)]