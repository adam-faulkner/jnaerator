#summary How to sort things out if (when) JNAeration fails

First, make sure you've read all of the [JNAeratorFAQ].

Parsing complex headers (including system headers) rarely yields successful results on the first attempt, so you might need some tweaking.

If (when) things go wrong, you can :
  * look at your `TestLibrary.java` file (if it's generated at all) : search for "skipped" (case-insensitive) or "error" for symbols that failed to be converted
  * look at `_jnaerator.preprocessed.c` to see which macros failed to expand (and the include files as needed or define symbols in command line with `-DMY_SYMBOL=` or `-DMY_SYMBOL=SomeValue`)
  * look at `out.errors.txt`, that gives (too) highly verbose parsing errors with line number that corresponds to `_jnaerator.preprocessed.c` : these parsing errors typically occur when a macro wasn't expanded (see above) or when a C typedef is missing.

Note that these files are generated automatically when you use the `-v` (verbose) switch (see [CommandLineOptionsAndEnvironmentVariables] for more options).